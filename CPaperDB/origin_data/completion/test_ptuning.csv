instruction,input,ideal_output,uft_output,ft_output,label
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
UNIX 操作系统通过一系列的系统调用提供服务，这些系统调用实际上是操作系统内的函数，它们可以被用户程序调用。",在UNIX操作系统中，系统调用是通过________实现的，这些函数通常在________头文件中声明。,"
 以下是一个填空题:

UNIX 操作系统通过一系列的系统调用来提供服务,这些系统调用实际上是操作系统内的函数,它们可以被用户程序调用。其中,系统调用的主要目的是使得操作系统内部的函数能够被用户程序调用,从而实现用户程序与操作系统之间的交互。系统调用是 UNIX 操作系统的一个关键技术,它使得用户程序能够利用操作系统的功能,而无需了解操作系统的底层实现细节。","
 在UNIX操作系统中，系统调用是通过_________提供的，这些函数实际上是_________，可以被用户程序________。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
输入/输出接口对任何操作系统都是一样的。在任何特定的系统中，标准库函数的实现必须通过宿主系统提供的功能来实现。",在C语言中，标准库函数的实现通常依赖于操作系统的__________。,"
 以下是一道填空题:

在C语言中,输入/输出接口对任何操作系统都是一样的。在任何特定的系统中,标准库函数的实现必须通过宿主系统提供的功能来实现。因此,C语言程序在不同的操作系统上运行时,需要使用不同的函数来实现输入/输出操作。但这并不意味着C语言程序本身需要针对不同的操作系统进行编写,而是需要在C语言程序中调用不同操作系统提供的标准库函数来实现输入/输出操作。","
 在C语言中，标准库函数的实现通常依赖于操作系统的__________。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在UNIX操作系统中，所有的外围设备（包括键盘和显示器）都被看作是文件系统中的文件，因此，所有的输入/输出都要通过读文件或写文件完成。也就是说，通过一个单一的接口就可以处理外围设备和程序之间的所有通信。",在UNIX操作系统中，外围设备被视为文件系统中的文件，因此，所有的输入/输出操作都是通过_____和_____完成的。,"
 在UNIX操作系统中，所有的外围设备（包括键盘和显示器）都被看作是文件系统中的文件，因此，所有的输入/输出都要通过读文件或写文件完成。也就是说，通过一个单一的接口就可以处理外围设备和程序之间的所有通信。

填空题：

在UNIX操作系统中，所有的外围设备（包括键盘和显示器）都被看作是文件系统中的______，因此，所有的输入/输出都要通过读文件或写文件完成。也就是说，通过一个单一的接口就可以处理外围设备和程序之间的所有______。","
 在UNIX操作系统中，外围设备被看作是      文件系统中的文件，因此，所有的输入/输出都要通过读文件或写文件完成。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
通常情况下，在读或写文件之前，必须先将这个意图通知系统，该过程称为打开文件。",在进行读或写文件操作之前，必须首先通知系统，这个过程被称为__________。,"
 以下是一个与该文本相关的填空题:

在C语言中,打开文件之前,必须先使用哪个关键字来表示要打开一个文件?答案是 `_open()`。","
 在进行读或写文件操作之前，必须首先通知系统，这个过程被称为__________。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
如果是写一个文件，则可能需要先创建该文件，也可能需要丢弃该文件中原先已存在的内容。",_如果要写一个文件，可能需要先__________该文件，也可能需要丢弃该文件中原先已存在的内容。,"
 以下是一道填空题:

在编写一个文件时,可能需要先_____该文件,也可能需要_____该文件中原先已存在的内容。

答案:如果/丢弃","
 _如果要写一个文件，可能需要先创建该文件，也可能需要      该文件中原先已存在的内容。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
程序的使用者可通过<和>重定向程序的 I/O。",程序的使用者可通过      和      重定向程序的 I/O。,"
 题目：在C语言中，用户可以通过______和______来重定向程序的I/O。

选项：
A. <和>
B. >和<
C. >>和<<
D. &和|","
 程序的使用者可通过      和      重定向程序的 I/O。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在任何情况下，文件赋值的改变都不是由程序完成的，而是由 shell 完成的。只要程序使用文件 0 作为输入，文件 1 和 2 作为输出，它就不会知道程序的输入从哪里来，并输出到哪里去。",在任何情况下，文件赋值的改变都不是由      完成的，而是由      完成的。只要程序使用文件 0 作为输入，文件 1 和 2 作为输出，它就不会知道程序的输入从哪里来，并输出到哪里去。,"
 以下是一道填空题:

在任何情况下,文件赋值的改变都不是由程序完成的,而是由 shell 完成的。只要程序使用文件 0 作为输入,文件 1 和 2 作为输出,它就不会知道程序的输入从哪里来,并输出到哪里去。

填空:文件赋值的改变都不是由程序____完成,而是由 shell 完成。只要程序使用文件 0 作为输入,文件 1 和 2 作为输出,它就不会知道程序的输入从哪里来,并输出到哪里去。

答案:程序","
 在任何情况下，文件赋值的改变都不是由      完成的，而是由      完成的。只要程序使用文件 0 作为输入，文件 1 和 2 作为输出，它就不会知道程序的输入从哪里来，并输出到哪里去。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
每个调用返回实际传输的字节数。在读文件时,函数的返回值可能会小于请求的字节数。如果返回值为 0,则表示已到达文件的结尾；如果返回值为-1,则表示发生了某种错误。","每个调用返回实际传输的字节数。在读文件时,函数的返回值可能会小于请求的字节数。如果返回值为      ,则表示已到达文件的结尾；如果返回值为      ,则表示发生了某种错误。","
 以下是一道填空题:

每个调用返回实际传输的字节数。在读文件时,函数的返回值可能会小于请求的字节数。如果返回值为 0,则表示已到达文件的结尾;如果返回值为-1,则表示发生了某种错误。

空格处应填:整数或浮点数。","
 每个调用返回实际传输的字节数。在读文件时,函数的返回值可能会小于请求的字节数。如果返回值为     ,则表示已到达文件的结尾；如果返回值为     ,则表示发生了某种错误。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在写文件时,返回值是实际写入的字节数。如果返回值与请求写入的字节数不相等,则说明发生了错误。","在写文件时,返回值是实际写入的字节数。如果返回值与请求写入的字节数不相等,则说明      。","
 以下是一个关于C语言的填空题：

在写文件时,返回值是实际写入的字节数。如果返回值与请求写入的字节数不相等,则说明发生了错误。

空格处应填入的词语是：返回值。","
 在写文件时,返回值是实际写入的字节数。如果返回值与请求写入的字节数不相等,则说明      。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
据的字节数可以为任意大小。最常用的值为1,即每次读出或写入1个字符","在一次调用中,读出或写入的数据的字节数可以为      。最常用的值为1,即每次读 出或写入1个字符","
 以下是一道填空题:

根据文本内容,以下哪个字节的值最常用,且每次读出或写入的字节数为1?

答案:1","
 据的字节数可以为任意      。最常用的值为     ,即每次读出或写入      个字符。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
用更大的值调用该函数可以获得更高的效率,因为系统调用的次数减少了。","用更大的值调用该函数可以获得更高的效率,因为      。","
 题目：在C语言中，当使用更大的值调用函数时，可以获得更高的效率，因为系统调用的次数减少了。下面哪个选项是正确的？

A. 系统调用的次数增加了
B. 系统调用的次数减少了
C. 函数的执行时间减少了
D. 函数的执行时间增加了","
 用更大的值调用该函数可以获得更高的效率,因为      。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
我们可以编写一个简单的程序,将输入复制到输出,这与第1章中的 复制程序在功能上相同。程序可以将任意输入复制到任意输出,因为输入/输出可以重定向到任何文件或设备。","我们可以编写一个简单的程序,将输入复制到输出,这与第1章中的复制程序在功能上相同。程序可以将任意      复制到任意      ,因为输入/输出可以重定向到任何文件或设备。","
 根据文本内容，下面是一个填空题：

在C语言中，我们可以编写一个简单的程序，将输入复制到输出，这与第__章中的复制程序在功能上相同。程序可以将任意输入复制到任意输出，因为输入/输出可以重定向到任何文件或设备。","
 我们可以编写一个简单的程序,将输入复制到输出,这与第1章中的复制程序在功能上相同。程序可以将任意      复制到任意     ,因为输入/输出可以重定向到任何文件或设备。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
我们已经将系统调用的函数原型集中放在一个头文件 syscalls.h 中,因此,本章中的程序都将包含该头文件。不过,该文件的名字不是标准的。","_我们已经将系统调用的函数原型集中放在一个头文件      中,因此,本章中的程序都将包含该头文件。不过,该文件的名字不是标准的。","
 根据这段文本,可以得出以下填空题:

我们已经将系统调用的函数原型集中放在一个头文件 \_\_\_\_\_ 中,因此,本章中的程序都将包含该头文件。不过,该文件的名字不是标准的。

答案:syscalls.h","
 _我们已经将系统调用的函数原型集中放在一个头文件      中,因此,本章中的程序都将包含该头文件。不过,该文件的名字不是标准的。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
如果要在包含头文件<stdio.h>的情况下编译这些版本的getchar 函数，就有必要用 #undef 预处理指令取消名字 getchar 的宏定义，因为在头文件中，getchar 是以宏方式实现的。",如果要在包含头文件<stdio.h>的情况下编译这些版本的getchar 函数，就有必要用      预处理指令取消名字 getchar 的宏定义，因为在头文件中，getchar是以      方式实现的。,"
 问题：在包含头文件<stdio.h>的情况下，如果没有使用#undef预处理指令，getchar函数的宏定义会被取消，那么在这个情况下，getchar函数______。

答案：以宏方式实现。","
 如果要在包含头文件<stdio.h>的情况下编译这些版本的getchar 函数，就有必要用      预处理指令取消名字 getchar 的宏定义，因为在头文件中，getchar 是以      方式实现的。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
除了默认的标准输入、标准输出和标准错误文件外，其它文件都必须在读或写之前显式地打开。系统调用 open 和 creat 用于实现该功能。",除了默认的标准输入、标准输出和标准错误文件外，其它文件都必须在读或写之前       地打开。系统调用      和      用于实现该功能。,"
 以下是一个关于该文本的填空题:

除了默认的标准输入、标准输出和标准错误文件外,其它文件都必须在读或写之前显式地打开。系统调用 $\_\_\_\_$ 和 $\_\_\_\_$ 用于实现该功能。

答案:open 和 creat","
 除了默认的标准输入、标准输出和标准错误文件外，其它文件都必须在读或写之前       地打开。系统调用      和      用于实现该功能。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
open与第7章讨论的 fopen 相似，不同的是，前者返回一个文件描述符，它仅仅只是一个int类型的数值。而后者返回一个文件指针。如果发生错误，open将返回-1。",open与第7章讨论的 fopen 相似，不同的是，前者返回一个      ，它仅仅只是一个int类型的数值。而后者返回一个       。如果发生错误，open将返回-1。,"
 open与第7章讨论的 fopen 相似，不同的是，前者返回一个文件描述符，它仅仅只是一个int类型的数值。而后者返回一个文件指针。如果发生错误，open将返回-1。

填空题：open()函数返回一个文件描述符，它仅仅只是一个int类型的数值。如果发生错误，open将返回____。","
 open与第7章讨论的 fopen 相似，不同的是，前者返回一个      ，它仅仅只是一个int类型的数值。而后者返回一个       。如果发生错误，open将返回-1。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
如果用 open 打开一个不存在的文件，则将导致错误。可以使用 creat 系统调用创建新文件或覆盖已有的旧文件",如果用 open 打开一个不存在的文件，则将导致错误。可以使用       系统调用创建新文件或覆盖已有的旧文件,"
 以下是一道填空题:

如果用open打开一个不存在的文件,则将导致____。可以使用 creat系统调用创建新文件或覆盖已有的旧文件。

答案:错误","
 如果用 open 打开一个不存在的文件，则将导致错误。可以使用      系统调用创建新文件或覆盖已有的旧文件",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
如果 creat 成功地创建了文件，它将返回一个文件描述符，否则返回-1。如果此文件已存在，creat 将把该文件的长度截断为0，从而丢弃原先已有的内容。使用 creat 创建一个已存在的文件不会导致错误。",如果 creat 成功地创建了文件，它将返回一个      ，否则返回-1。如果此文件已存在，creat 将把该文件的长度截断为      ，从而丢弃原先已有的内容。使用 creat 创建一个已存在的文件不会导致错误。,"
 以下是一个关于该文本的填空题:

如果 creat 成功地创建了文件,它将返回一个文件描述符,否则返回________。如果此文件已存在,creat 将把该文件的长度截断为0,从而丢弃原先已有的内容。使用 creat 创建一个已存在的文件不会导致错误。

答案:

如果 creat 成功地创建了文件,它将返回一个文件描述符,否则返回-1。如果此文件已存在,creat 将把该文件的长度截断为0,从而丢弃原先已有的内容。使用 creat 创建一个已存在的文件不会导致错误。","
 如果 creat 成功地创建了文件，它将返回一个      ，否则返回-1。如果此文件已存在，creat 将把该文件的长度截断为      ，从而丢弃原先已有的内容。使用 creat 创建一个已存在的文件不会导致错误。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
注意， 函数 error 类似于函数 printf，在调用时可带变长参数表。下面通过 error 函数的实现说明如何使用 printf 函数家族的另一个成员 vprintf。标准库函数 vprintf 函 数与 printf 函数类似，所不同的是，它用一个参数取代了变长参数表，且此参数通过调用 va_start 宏进行初始化。同样，vfprintf 和 vsprintf 函数分别与 fprintf 和 sprintf 函数类似。",注意， 函数 error 类似于函数 printf，在调用时可带      。下面通过 error 函数的实现说明如何使用 printf 函数家族的另一个成员 vprintf。标准库函数 vprintf 函数与 printf 函数类似，所不同的是，它用      取代了变长参数表，且此参数通过调用 vastart 宏进行初始化。同样，vfprintf 和 vsprintf 函数分别与 fprintf 和 sprintf 函数类似。,"
 下面关于vprintf函数的描述哪个是正确的？

A. 类似于 printf 函数，在调用时可带变长参数表
B. 用一个参数取代了变长参数表，但此参数需要通过调用 error 函数进行初始化
C. 类似于 vsprintf 函数，但需要调用 va_start 宏进行初始化
D. 类似于 fprintf 函数，但使用的是 sprintf 函数的实现","
 注意， 函数 error 类似于函数 printf，在调用时可带      。下面通过 error 函数的实现说明如何使用 printf 函数家族的另一个成员 vprintf。标准库函数 vprintf 函数与 printf 函数类似，所不同的是，它用      取代了变长参数表，且此参数通过调用 va_start 宏进行初始化。同样，vfprintf 和 vsprintf 函数分别与 fprintf 和 sprintf 函数类似。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
输入/输出通常是顺序进行的：每次调用 read 和 write 进行读写的位置紧跟在前一次操作的位置之后。但是，有时候需要以任意顺序访问文件，系统调用 lseek 可以在文件中任意移动位置而不实际读写任何数据",请根据以下文本内容进行出题：输入/输出通常是顺序进行的：每次调用 read 和 write 进行读写的位置紧跟在      之后。但是，有时候需要以任意顺序访问文件，系统调用 lseek 可以在文件中      而不实际读写任何数据,"
 下面是一个关于C语言的填空题：

输入/输出通常是顺序进行的：每次调用 read 和 write 进行读写的位置紧跟在前一次操作的位置之后。但是，有时候需要以任意顺序访问文件，系统调用 lseek 可以在文件中任意移动位置而不实际读写任何数据。

空格处应填：lseek。","
 请根据以下文本内容进行出题：输入/输出通常是顺序进行的：每次调用 read 和 write 进行读写的位置紧跟在      之后。但是，有时候需要以任意顺序访问文件，系统调用 lseek 可以在文件中      而不实际读写任何数据",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
使用 lseek 系统调用时，可以将文件视为一个大数组，其代价是访问速度会慢一些。",_使用 lseek 系统调用时，可以将文件视为一个大数组，其代价是      ,"
 使用 lseek 系统调用时，可以将文件视为一个大数组，其代价是访问速度会慢一些。

下面是针对这段文本的填空题：

使用 lseek 系统调用时，可以将文件视为一个大数组，其代价是访问速度会慢一些。因为__________。","
 _使用 lseek 系统调用时，可以将文件视为一个大数组，其代价是      ",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
lseek 系统调用返回一个 long 类型的值，此值表示文件的新位置，若发生错误，则返回-1。 标准库函数 fseek 与系统调用 lseek 类似， 所不同的是， 前者的第一个参数是 FILE *类型， 且在发生错误时返回一个非 0 值。",lseek 系统调用返回一个      类型的值，此值表示文件的新位置，若发生错误，则返回-1。 标准库函数 fseek 与系统调用 lseek 类似， 所不同的是， 前者的第一个参数是      类型， 且在发生错误时返回一个非 0 值。,"
 以下是一个关于 lseek 系统调用的填空题：

lseek 系统调用返回一个 long 类型的值，此值表示文件的新位置，若发生错误，则返回____。 标准库函数 fseek 与系统调用 lseek 类似， 所不同的是， 前者的第一个参数是 FILE *类型， 且在发生错误时返回一个非 0 值。","
 lseek 系统调用返回一个      类型的值，此值表示文件的新位置，若发生错误，则返回-1。 标准库函数 fseek 与系统调用 lseek 类似， 所不同的是， 前者的第一个参数是      类型， 且在发生错误时返回一个非 0 值。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
述文件的数据结构包含在头文件<stdio.h>中，任何需要使用标准输入/输出库中函数的程序都必须在源文件中包含这个头文件（通过#include 指令包含头文件）。此文件也被库中的其它函数包含。",述文件的数据结构包含在头文件       中，任何需要使用标准输入/输出库中函数的程序都必须在源文件中包含这个头文件（通过#include 指令包含头文件）。此文件也被库中的其它函数包含。,"
 下面是一个关于C语言标准输入输出库的填空题：

<stdio.h>文件包含了该库的数据结构，任何需要使用标准输入/输出库中函数的程序都必须在源文件中包含这个头文件（通过______指令包含头文件）。此文件也被库中的其它函数包含。

答案：#include","
 述文件的数据结构包含在头文件       中，任何需要使用标准输入/输出库中函数的程序都必须在源文件中包含这个头文件（通过#include 指令包含头文件）。此文件也被库中的其它函数包含。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
宏 getc 一般先将计数器减 1，将指针移到下一个位置，然后返回字符。 但是， 如果计数值变为负值，getc 就调用函数 _fillbuf 填充缓冲区， 重新初始化结构的内容， 并返回一个字符。返回的字符为 unsigned 类型。以确保所有的字符为正值。",宏 getc 一般先将计数器减 1，将      移到下一个位置，然后返回字符。但是， 如果计数值变为负值，getc 就调用函数fillbuf 填充缓冲区， 重新初始化结构的内容，并返回一个字符。返回的字符为      类型。以确保所有的字符为正值。,"
 以下是一个符合题目要求的 C 语言代码示例：

```c
#include <stdio.h>

void _fillbuf(char *buf, int size) {
    for (int i = 0; i < size; i++) {
        buf[i] = '\0';
    }
}

unsigned int getc() {
    unsigned char count = 0;
    unsigned char ch;

    // 将计数器减 1
    count--;

    // 检查计数值是否为负值
    if (count < 0) {
        // 调用函数 _fillbuf 填充缓冲区
        _fillbuf((char *) &buf, sizeof(buf));

        // 重新初始化结构的内容
        count = 0;
    }

    // 返回字符
    ch = buf[count];

    return ch;
}

int main() {
    unsigned char ch;

    // 测试 getc() 函数
    ch = getc();
    printf(""char: %u\n"", ch);

    ch = getc();
    printf(""char: %u\n"", ch);

    ch = getc();
    printf(""char: %u\n"", ch);

    return 0;
}
```

题目：以上代码中，getc() 函数用于获取输入的字符，它会进行以下操作：

1. 将计数器减 1
2. 检查计数值是否为负值
3. 如果计数值为负值，则调用 _fillbuf 函数填充缓冲区，并重新初始化结构的内容
4. 返回字符

请根据上述代码，完成以下填空题：

getc() 函数用于获取输入的字符，它会进行以下操作：

1. 将计数器减 1
2. 检查计数值是否为负值
3. 如果计数值为负值，则调用________函数填充缓冲区，并重新初始化结构的内容
4. 返回字符","
 宏 getc 一般先将计数器减 1，将      移到下一个位置，然后返回字符。但是， 如果计数值变为负值，getc 就调用函数fillbuf 填充缓冲区， 重新初始化结构的内容，并返回一个字符。返回的字符为      类型。以确保所有的字符为正值。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
尽管在这里我们并不想讨论一些细节，但程序中还是给出了 putc 函数的定义，以表明它的操作与 getc 函数非常类似，当缓冲区满时，它将调用函数_flushbuf。此外，我们还在其中包含了访问错误输出、文件结束状态和文件描述符的宏。",_尽管在这里我们并不想讨论一些细节，但程序中还是给出了 putc 函数的定义，以表明它的操作与 getc 函数非常类似，当       满时，它将调用函数_flushbuf。此外，我们还在其中包含了访问错误输出、      和文件描述符的宏。,"
 以下是一道根据文本内容的填空题：

尽管在这里我们并不想讨论一些细节，但程序中还是给出了 putc 函数的定义，以表明它的操作与 getc 函数非常类似，当缓冲区满时，它将调用函数__flushbuf。此外，我们还在其中包含了访问错误输出、文件结束状态和文件描述符的宏。","
 _尽管在这里我们并不想讨论一些细节，但程序中还是给出了 putc 函数的定义，以表明它的操作与 getc 函数非常类似，当       满时，它将调用函数_flushbuf。此外，我们还在其中包含了访问错误输出、      和文件描述符的宏。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
对于某一特定的文件，第一次调用 getc 函数时计数值为 0，这样就必须调用一次函数 _fillbuf。如果_fillbuf 发现文件不是以读方式打开的，它将立即返回 EOF；否则， 它将试图分配一个缓冲区（如果读操作是以缓冲方式进行的话）。",_对于某一特定的文件，第一次调用 getc 函数时计数值为 0，这样就必须调用一次函数      。如果_fillbuf 发现文件不是以       方式打开的，它将立即返回 EOF；否则， 它将试图分配一个缓冲区（如果读操作是以缓冲方式进行的话）。,"
 根据上述文本,以下哪个选项是正确的?

对于某一特定的文件,第一次调用 getc 函数时计数值为 0,这样就必须调用一次函数 __fillbuf。如果__fillbuf 发现文件不是以读方式打开的,它将立即返回 EOF;否则,它将试图分配一个缓冲区(如果读操作是以缓冲方式进行的话)。","
 _对于某一特定的文件，第一次调用 getc 函数时计数值为 0，这样就必须调用一次函数      。如果_fillbuf 发现文件不是以       方式打开的，它将立即返回 EOF；否则， 它将试图分配一个缓冲区（如果读操作是以缓冲方式进行的话）。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
我们常常还需要对文件系统执行另一种操作，以获得文件的有关信息，而不是读取文件的具体内容。目录列表程序便是其中的一个例子， 比如 UNIX 命令ls，它打印一个目录中的文件名以及其它一些可选信息，如文件长度、访问权限等等。MS-DOS 操作系统中的 dir 命令也有类似的功能。",我们常常还需要对文件系统执行另一种操作，以获得文件的有关信息，而不是读取文件的具体内容。目录列表程序便是其中的一个例子， 比如 UNIX 命令ls，它打印一个目录中的       以及其它一些可选信息，如文件长度、访问权限等等。MS-DOS 操作系统中的       命令也有类似的功能。,"
 题目：在上述文本中，我们常常需要执行的操作是_______，以获得文件的有关信息，而不是读取文件的具体内容。

选项：
A. 写入文件
B. 读取文件
C. 目录列表
D. 修改文件

正确答案：C. 目录列表","
 我们常常还需要对文件系统执行另一种操作，以获得文件的有关信息，而不是读取文件的具体内容。目录列表程序便是其中的一个例子， 比如 UNIX 命令ls，它打印一个目录中的      以及其它一些可选信息，如文件长度、访问权限等等。MS-DOS 操作系统中的      命令也有类似的功能。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
由于 UNIX 中的目录就是一种文件， 因此，ls 只需要读此文件就可获得所有的文件名。但是，如果需要获取文件的其它信息，比如长度等，就需要使用系统调用。在其它一些系统中， 甚至获取文件名也需要使用系统调用，例如在 MS-DOS 系统中即如此。无论实现方式是否同具体的系统有关，我们需要提供一种与系统无关的访问文件信息的途径。",由于 UNIX 中的目录就是一种文件， 因此，ls 只需要读此文件就可获得所有的文件名。但是，如果需要获取文件的其它信息，比如长度等，就需要使用       。在其它一些系统中， 甚至获取文件名也需要使用系统调用，例如在 MS-DOS 系统中即如此。无论实现方式是否同具体的系统有关，我们需要提供一种      的访问文件信息的途径。,"
 以下是一个与此文本内容相关的填空题：

由于 UNIX 中的目录就是一种文件，因此，_____ 只需要读此文件就可获得所有的文件名。但是，如果需要获取文件的其它信息，比如长度等，就需要使用系统调用。在其它一些系统中，甚至获取文件名也需要使用系统调用，例如在 ______ 系统中即如此。无论实现方式是否同具体的系统有关，我们需要提供一种与系统无关的访问文件信息的途径。","
 由于 UNIX 中的目录就是一种文件， 因此，ls 只需要读此文件就可获得所有的文件名。但是，如果需要获取文件的其它信息，比如长度等，就需要使用      。在其它一些系统中， 甚至获取文件名也需要使用系统调用，例如在 MS-DOS 系统中即如此。无论实现方式是否同具体的系统有关，我们需要提供一种      的访问文件信息的途径。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
以下将通过程序 fsize 说明这一点。fsize 程序是 ls 命令的一个特殊形式，它打印命令 行参数表中指定的所有文件的长度。如果其中一个文件是目录，则 fsize 程序将对此目录递 归调用自身。如果命令行中没有任何参数，则 fsize 程序处理当前目录。",以下将通过程序 fsize 说明这一点。fsize 程序是 ls 命令的一个特殊形式，它打印命令行参数表中指定的所有文件的      。如果其中一个文件是目录，则 fsize 程序将对此目录          调用自身。如果命令行中没有任何参数，则 fsize 程序处理当前目录。,"
 以下将通过程序 fsize 说明这一点。fsize 程序是 ls 命令的一个特殊形式，它打印命令 行参数表中指定的所有文件的长度。如果其中一个文件是目录，则 fsize 程序将对此目录递 归调用自身。如果命令行中没有任何参数，则 fsize 程序处理当前目录。

根据文本内容，下面哪个选项可以用来描述 fsize 程序的行为？

A. 打印当前目录中所有文件的长度。
B. 递归调用自身，处理指定目录中的所有文件。
C. 打印命令行参数表中指定的所有文件的长度。
D. 处理当前目录中的所有文件，但不递归调用自身。","
 以下将通过程序 fsize 说明这一点。fsize 程序是 ls 命令的一个特殊形式，它打印命令行参数表中指定的所有文件的      。如果其中一个文件是目录，则 fsize 程序将对此目录      。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
遗憾的是，在不同版本的系统中，目录的格式和确切的内容是不一样的。因此，为了分离出不可移植的部分，我们把任务分成两部分。外层定义了一个称为 Dirent 的结构和 3 个 函数 opendir、readdir 和 closedir，它们提供与系统无关的对目录项中的名字和 i 结点 编号的访问。",请根据以下文本内容进行出题：遗憾的是，在不同版本的系统中，目录的      和      是不一样的。因此，为了分离出不可移植的部分，我们把任务分成两部分。外层定义了一个称为 Dirent 的结构和 3 个 函数 opendir、readdir 和 closedir，它们提供与系统无关的对目录项中的名字和 i 结点 编号的访问。,"
 分离出不可移植的部分后，任务分为两部分。外层定义了一个称为 Dirent 的结构和 3 个函数 opendir、readdir 和 closedir，它们提供与系统无关的对目录项中的名字和 i 结点编号的访问。","
 请根据以下文本内容进行出题：遗憾的是，在不同版本的系统中，目录的      和      是不一样的。因此，为了分离出不可移植的部分，我们把任务分成两部分。外层定义了一个称为 Dirent 的结构和 3 个 函数 opendir、readdir 和 closedir，它们提供与系统无关的对目录项中的名字和 i 结点 编号的访问。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数 dirwalk 是一个通用的函数，它对目录中的每个文件都调用函数 fcn 一次。它首先打开目录，循环遍历其中的每个文件， 并对每个文件调用该函数，然后关闭目录返回。因为 fsize 函数对每个目录都要调用 dirwalk 函数，所以这两个函数是相互递归调用的。",函数 dirwalk 是一个通用的函数，它对目录中的每个文件都调用函数 fcn 一次。它首先打开       ，循环遍历其中的每个      ， 并对每个文件调用该函数，然后关闭目录返回。因为 fsize 函数对每个目录都要调用 dirwalk 函数，所以这两个函数是相互      调用的。,"
 以下是一个可能的填空题：

 dirwalk 是一个通用的函数，它对目录中的每个文件都调用函数 fcn 一次。它首先打开目录，循环遍历其中的每个文件， 并对每个文件调用该函数，然后关闭目录返回。因为 fsize 函数对每个目录都要调用 dirwalk 函数，所以这两个函数是相互递归调用的。

填空题：

 dirwalk 函数的作用是______。

答案：对目录中的每个文件都调用函数 fcn 一次。","
 函数 dirwalk 是一个通用的函数，它对目录中的每个文件都调用函数 fcn 一次。它首先打开      ，循环遍历其中的每个文件， 并对每个文件调用该函数，然后关闭目录返回。因为 fsize 函数对每个目录都要调用 dirwalk 函数，所以这两个函数是相互      调用的。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
尽管 fsize 程序非常特殊，但是它的确说明了一些重要的思想。首先，许多程序并不是 “系统程序”，它们仅仅使用由操作系统维护的信息。对于这样的程序，很重要的一点是，信息的表示仅出现在标准头文件中，使用它们的程序只需要在文件中包含这些头文件即可，而 不需要包含相应的声明。其次，有可能为与系统相关的对象创建一个与系统无关的接口。标准库中的函数就是很好的例子。",_尽管 fsize 程序非常特殊，但是它的确说明了一些重要的思想。首先，许多程序并不是 “系统程序”，它们仅仅使用由操作系统维护的信息。对于这样的程序，很重要的一点是，信息的表示仅出现在      中，使用它们的程序只需要在文件中包含这些头文件即可，而不需要包含相应的声明。其次，有可能为与系统相关的对象创建一个      的接口。标准库中的函数就是很好的例子。,"
 以下哪个选项可以最好地描述这段文本中提到的第一个思想？

A. 程序需要直接操作硬件
B. 程序需要使用由操作系统维护的信息
C. 程序需要包含相应的声明以使用头文件
D. 程序需要直接操作标准库中的函数","
 _尽管 fsize 程序非常特殊，但是它的确说明了一些重要的思想。首先，许多程序并不是 “系统程序”，它们仅仅使用由操作系统维护的信息。对于这样的程序，很重要的一点是，信息的表示仅出现在      中，使用它们的程序只需要在文件中包含这些头文件即可，而不需要包含相应的声明。其次，有可能为与系统相关的对象创建一个      的接口。标准库中的函数就是很好的例子。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
本节将要编写的版本没有限制， 可以以任意次序调用 malloc 和 free。malloc 在必要时调用操作系统以获取更多的 存储空间。这些程序说明了通过一种与系统无关的方式编写与系统有关的代码时应考虑的问题，同时也展示了结构、联合和 typedef 的实际应用。",本节将要编写的版本没有限制， 可以以任意次序调用 malloc 和 free。malloc 在必要时调用操作系统以获取更多的      。这些程序说明了通过一种与系统无关的方式编写与系统有关的代码时应考虑的问题，同时也展示了结构、联合和 typedef 的实际应用。,"
 以下是一道填空题:

本节将要编写的版本没有限制,可以以任意次序调用 malloc 和 free。malloc 在必要时调用操作系统以获取更多的 存储空间。这些程序说明了通过一种与系统无关的方式编写与系统有关的代码时应考虑的问题,同时也展示了结构、联合和 typedef 的实际应用。

填空题:

在这些程序中,我们展示了通过一种与系统无关的方式编写与系统有关的代码时应考虑的问题,同时也展示了结构、联合和_____的 actual application。

答案:

结构","
 本节将要编写的版本没有限制， 可以以任意次序调用 malloc 和 free。malloc 在必要时调用操作系统以获取更多的      。这些程序说明了通过一种与系统无关的方式编写与系统有关的代码时应考虑的问题，同时也展示了结构、联合和 typedef 的实际应用。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
malloc 并不是从一个在编译时就确定的固定大小的数组中分配存储空间， 而是在需要时向操作系统申请空间。因为程序中的某些地方可能不通过 malloc 调用申请空间（也就是说， 通过其它方式申请空间），所以，malloc 管理的空间不一定是连续的。这样，空闲存储空间以空闲块链表的方式组织，每个块包含一个长度、 一个指向下一块的指针以及一个指向自身存储空间的指针。这些块按照存储地址的升序组织，最后一块（最高地址）指向第一块",malloc 并不是从一个在编译时就确定的固定大小的数组中分配存储空间， 而是在需要时向操作系统申请空间。因为程序中的某些地方可能不通过 malloc 调用申请空间（也就是说， 通过其它方式申请空间），所以，malloc 管理的空间不一定是      的。这样，空闲存储空间以      的方式组织，每个块包含一个长度、 一个指向下一块的指针以及一个指向自身存储空间的指针。这些块按照存储地址的升序组织，最后一块（最高地址）指向第一块,"一个指向空闲存储空间链表的指针。

下面是一个简单的例子，假设我们有一个数组 a，它的初始地址是 0x1000，长度为 10 个字节，我们想通过 malloc 分配 20 个字节的空间，来存储一些数据。

首先，我们需要为数组 a 的每个元素分配 10 字节的空间，因此会分配 100 字节的空间。操作系统会为这 100 字节的空间分配一个块，该块包含一个长度为 10 字节的指针以及一个指向下一个空闲块的指针（也就是 0x100000）。这样，空闲存储空间以空闲块链表的方式组织，每个块包含一个长度、一个指向下一块的指针以及一个指向自身存储空间的指针。

然后，我们需要为数组 a 的第一个元素分配 10 字节的空间。操作系统会为这 10 字节的空间分配一个块，该块包含一个长度为 10 字节的指针以及一个指向下一个空闲块的指针（也就是 0x100000）。这样，空闲存储空间以空闲块链表的方式组织，每个块包含一个长度、一个指向下一块的指针以及一个指向自身存储空间的指针。

接下来，我们需要为数组 a 的第二个元素分配 10 字节的空间。操作系统会为这 10 字节的空间分配一个块，该块包含一个长度为 10 字节的指针以及一个指向下一个空闲块的指针（也就是 0x100000）。这样，空闲存储空间以空闲块链表的方式组织，每个块包含一个长度、一个指向下一块的指针以及一个指向自身存储空间的指针。

以此类推，直到为数组 a 的第九个元素分配 10 字节的空间。操作系统会为这 10 字节的空间分配一个块，该块包含一个长度为 10 字节的指针以及一个指向下一个空闲块的指针（也就是 0x100000）。这样，空闲存储空间以空闲块链表的方式组织，每个块包含一个长度、一个指向下一块的指针以及一个指向自身存储空间的指针。

最后，","
 malloc 并不是从一个在编译时就确定的固定大小的数组中分配存储空间， 而是在需要时向操作系统申请空间。因为程序中的某些地方可能不通过 malloc 调用申请空间（也就是说， 通过其它方式申请空间），所以，malloc 管理的空间不一定是      的。这样，空闲存储空间以      的方式组织，每个块包含一个长度、 一个指向下一块的指针以及一个指向自身存储空间的指针。这些块按照存储地址的升序组织，最后一块（最高地址",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
当有申请请求时， malloc 将扫描空闲块链表， 直到找到一个足够大的块为止。该算法称为“首次适应”（first fit）；与之相对的算法是“最佳适应”（best fit），它寻找满足条件的最小块。如果该块恰好与请求的大小相符合，则将它从链表中移走并返回给用户。如果该块太大， 则将它分成两部分：大小合适的块返回给用户，剩下的部分留在空闲块链表中。如果找不到一个足够大的块，则向操作系统申请一个大块并加入到空闲块链表中。",当有申请请求时， malloc 将扫描空闲块链表， 直到找到一个足够大的块为止。该算法称为“首次适应”（first fit）；与之相对的算法是“最佳适应”（best fit），它寻找满足条件的最小块。如果该块恰好与      相符合，则将它从链表中移走并返回给用户。如果该块太大， 则将它分成两部分：大小合适的块返回给用户，剩下的部分留在      中。如果找不到一个足够大的块，则向操作系统申请一个大块并加入到空闲块链表中。,"一个新的块。

首次适应算法和最佳适应算法都是用来分配内存的。首次适应算法在内存分配时尽可能地寻找较大的空闲块，而最佳适应算法在内存分配时尽可能地寻找较小的空闲块。

首次适应算法：$$\text{void*} \text{malloc}(size_t \text{size});$$

最佳适应算法：$$\text{void*} \text{calloc}(size_t \text{size}, size_t \text{align});$$","
 当有申请请求时， malloc 将扫描空闲块链表， 直到找到一个足够大的块为止。该算法称为“首次适应”（first fit）；与之相对的算法是“最佳适应”（best fit），它寻找满足条件的最小块。如果该块恰好与      相符合，则将它从链表中移走并返回给用户。如果该块太大， 则将它分成两部分：大小合适的块返回给用户，剩下的部分留在      中。如果找不到一个足够大的块，则向操作系统申请。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
释放过程也是首先搜索空闲块链表，以找到可以插入被释放块的合适位置。如果与被释放块相邻的任一边是一个空闲块，则将这两个块合成一个更大的块，这样存储空间不会有太 多的碎片。因为空闲块链表是以地址的递增顺序链接在一起的，所以很容易判断相邻的块是否空闲。",释放过程也是首先搜索空闲块链表，以找到可以插入      的合适位置。如果与被释放块相邻的任一边是一个空闲块，则将这两个块合成一个更大的块，这样存储空间不会有太多的碎片。因为空闲块链表是以地址的      顺序链接在一起的，所以很容易判断相邻的块是否空闲。,"
 以下是一道根据文本内容出的填空题：

释放过程也是首先搜索空闲块链表，以找到可以插入被释放块的合适位置。如果与被释放块相邻的任一边是一个空闲块，则将这两个块合成一个更大的块，这样存储空间不会有太多的碎片。因为空闲块链表是以地址的递增顺序链接在一起的，所以很容易判断相邻的块是否空闲。

填空题：在释放过程中，__空闲块链表__，以找到可以插入被释放块的合适位置。如果与被释放块相邻的任一边是一个空闲块，则将这两个块合成一个更大的块，这样存储空间不会有太多的碎片。因为空闲块链表是以地址的递增顺序链接在一起的，所以很容易判断相邻的块是否空闲。","
 释放过程也是首先搜索空闲块链表，以找到可以插入      的合适位置。如果与被释放块相邻的任一边是一个空闲块，则将这两个块合成一个更大的块，这样存储空间不会有太多的碎片。因为空闲块链表是以地址的      顺序链接在一起的，所以很容易判断相邻的块是否空闲。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
我们在第 5 章中曾提出了这样的问题，即确保由 malloc 函数返回的存储空间满足将要保存的对象的对齐要求。虽然机器类型各异， 但是， 每个特定的机器都有一个最受限的类型： 如果最受限的类型可以存储在某个特定的地址中，则其它所有的类型也可以存放在此地址中。",我们在第 5 章中曾提出了这样的问题，即确保由 malloc 函数返回的存储空间满足将要保存的对象的对齐要求。虽然机器类型各异， 但是， 每个特定的机器都有一个      ： 如果      可以存储在某个特定的地址中，则其它所有的类型也可以存放在此地址中。,"
 请根据文本内容，将空格填入正确的内容。

我们在第 **5** 章中曾提出了这样的问题，即确保由 malloc 函数返回的存储空间满足将要保存的对象的对齐要求。虽然机器类型各异，但是，每个特定的机器都有一个最受限的类型：如果最受限的类型可以存储在某个特定的地址中，则其它所有的类型也可以存放在此地址中。","
 我们在第 5 章中曾提出了这样的问题，即确保由 malloc 函数返回的存储空间满足将要保存的对象的对齐要求。虽然机器类型各异， 但是， 每个特定的机器都有一个      ： 如果      可以存储在某个特定的地址中，则其它所有的类型也可以存放在此地址中。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
空闲块包含一个指向链表中下一个块的指针、 一个块大小的记录和一个指向空闲空间本身的指针。位于块开始处的控制信息称为“头部“。为了简化块的对齐，所有块的大小都必 须是头部大小的整数倍， 且头部已正确地对齐。这是通过一个联合实现的，该联合包含所需 的头部结构以及一个对齐要求最受限的类型的实例",空闲块包含一个指向链表中下一个块的指针、 一个块大小的记录和一个      。位于块开始处的控制信息称为“头部“。为了简化块的对齐，所有块的大小都必须是头部大小的      ， 且头部已正确地对齐。这是通过一个联合实现的，该联合包含所需的头部结构以及一个对齐要求最受限的类型的实例,"
 以下是一个关于空闲块的描述，其中某些部分需要用方括号填充：

空闲块包含一个指向链表中下一个块的指针、一个块大小的记录和一个指向空闲空间本身的指针。位于块开始处的控制信息称为“头部”。为了简化块的对齐，所有块的大小都必须是头部大小的整数倍，且头部已正确地对齐。这是通过一个联合实现的，该联合包含所需头部结构以及一个对齐要求最受限的类型的实例是【空闲块对齐联合】。","
 空闲块包含一个指向链表中下一个块的指针、 一个块大小的记录和一个      。位于块开始处的控制信息称为“头部“。为了简化块的对齐，所有块的大小都必须是头部大小的      ， 且头部已正确地对齐。这是通过一个联合实现的，该联合包含所需 的头部结构以及一个对齐要求最受限的类型的实例",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数 morecore 用于向操作系统请求存储空间，其实现细节因系统的不同而不同。因为 向系统请求存储空间是一个开销很大的操作，因此， 我们不希望每次调用 malloc 函数时都执行该操作，基于这个考虑， morecore 函数请求至少 NALLOC 个单元。这个较大的块将根 据需要分成较小的块。在设置完 size 字段之后，morecore 函数调用 free 函数把多余的存储空间插入到空闲区域中。",_函数 morecore 用于向操作系统      ，其实现细节因系统的不同而不同。因为向系统请求存储空间是一个开销很大的操作，因此，我们不希望每次调用 malloc 函数时都执行该操作，基于这个考虑， morecore 函数请求至少      个单元。这个较大的块将根 据需要分成较小的块。在设置完 size 字段之后，morecore 函数调用 free 函数把多余的存储空间插入到空闲区域中。,"
 morecore 函数用于向操作系统请求存储空间，其实现细节因系统的不同而不同。因为向系统请求存储空间是一个开销很大的操作，因此，我们不希望每次调用 malloc 函数时都执行该操作，基于这个考虑，morecore 函数请求至少 NALLOC 个单元。这个较大的块将根据需要分成较小的块。在设置完 size 字段之后，morecore 函数调用 free 函数把多余的存储空间插入到空闲区域中。

填空题：morecore 函数请求至少______个单元。

答案：NALLOC","
 _函数 morecore 用于向操作系统      ，其实现细节因系统的不同而不同。因为向系统请求存储空间是一个开销很大的操作，因此，我们不希望每次调用 malloc 函数时都执行该操作，基于这个考虑， morecore 函数请求至少      个单元。这个较大的块将根 据需要分成较小的块。在设置完 size 字段之后，morecore 函数调用 free 函数把多余的存储空间插入到空闲区域中。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
我们最后来看一下 free 函数。它从 freep 指向的地址开始，逐个扫描空闲块链表，寻找可以插入空闲块的地方。该位置可能在两个空闲块之间，也可能在链表的末尾。在任何一 种情况下，如果被释放的块与另一空闲块相邻，则将这两个块合并起来。合并两个块的操作 很简单，只需要设置指针指向正确的位置，并设置正确的块大小就可以了。",请根据以下文本内容进行出题：我们最后来看一下 free 函数。它从 freep 指向的地址开始，逐个扫描空闲块链表，寻找可以      的地方。该位置可能在两个空闲块之间，也可能在链表的末尾。在任何一 种情况下，如果被释放的块与另一空闲块相邻，则将这两个块合并起来。合并两个块的操作很简单，只需要设置      指向正确的位置，并设置正确的块大小就可以了。,"
 free 函数从 ```freep`` 指向的地址开始，逐个扫描空闲块链表，寻找可以插入空闲块的地方。该位置可能在两个空闲块之间，也可能在链表的末尾。在任何一种情况下，如果被释放的块与另一空闲块相邻，则将这两个块合并起来。合并两个块的操作很简单，只需要设置指针指向正确的位置，并设置正确的块大小就可以了。","
 请根据以下文本内容进行出题：我们最后来看一下 free 函数。它从 freep 指向的地址开始，逐个扫描空闲块链表，寻找可以      的地方。该位置可能在两个空闲块之间，也可能在链表的末尾。在任何一 种情况下，如果被释放的块与另一空闲块相邻，则将这两个块合并起来。合并两个块的操作很简单，只需要设置      指向正确的位置，并设置正确的块大小就可以了。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
虽然存储分配从本质上是与机器相关的，但是，以上的代码说明了如何控制与具体机器相关的部分，并将这部分程序控制到最少量。typedef 和 union 的使用解决了地址的对齐（假 定 sbrk 返回的是合适的指针） 问题。类型的强制转换使得指针的转换是显式进行的， 这样做甚至可以处理设计不够好的系统接口问题。虽然这里所讲的内容只涉及到存储分配，但是，这种通用方法也适用于其它情况。",虽然存储分配从本质上是与机器相关的，但是，以上的代码说明了如何控制与具体机器相关的部分，并将这部分程序控制到最少量。typedef 和 union 的使用解决了      的对齐（假 定 sbrk 返回的是合适的指针） 问题。类型的强制转换使得      是显式进行的， 这样做甚至可以处理设计不够好的系统接口问题。虽然这里所讲的内容只涉及到存储分配，但是，这种通用方法也适用于其它情况。,"
 以下是一道根据文本内容出的填空题：

虽然存储分配从本质上是与机器相关的，但是，以上的代码说明了如何控制与具体机器相关的部分，并将这部分程序控制到最少量。typedef 和 union 的使用解决了地址的对齐（假 定 sbrk 返回的是合适的指针） 问题。类型的强制转换使得指针的转换是显式进行的， 这样做甚至可以处理设计不够好的系统接口问题。虽然这里所讲的内容只涉及到存储分配，但是，这种通用方法也适用于其它情况。

填空题：虽然存储分配从本质上是与机器相关的，但是，以上的代码说明了如何控制与具体机器相关的部分，并将这部分程序控制到最少量。typedef 和 union 的使用解决了地址的对齐（假 定 sbrk 返回的是合适的指针） 问题。类型的强制转换使得指针的转换是显式进行的， 这样做甚至可以处理设计不够好的系统接口问题。虽然这里所讲的内容只涉及到存储分配，但是，这种通用方法也适用于其它情况。

空格一：解决了地址的对齐问题
空格二：指针的转换是显式进行的
","
 虽然存储分配从本质上是与机器相关的，但是，以上的代码说明了如何控制与具体机器相关的部分，并将这部分程序控制到最少量。typedef 和 union 的使用解决了      的对齐（假 定 sbrk 返回的是合适的指针） 问题。类型的强制转换使得      是显式进行的， 这样做甚至可以处理设计不够好的系统接口问题。虽然这里所讲的内容只涉及到存储分配，但是，这种通用方法也适用于其它情况。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
变量和常量是程序处理的两种基本数据对象,声明语句说明变量的名字及类型,也可以指定变量的初值,运算符指定将要进行的操作。",____和____是程序处理的两种基本数据对象,"
 以下哪个选项是正确的C语言声明变量的方式?

A. 声明变量 + 赋初值;
B. 声明变量;
C. 赋初值 + 声明变量;
D. 声明变量 + 操作。","
 ____和____是程序处理的两种基本数据对象",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
结构是一个或多个变量的集合，这些变量可能为不同的类型，为了处理的方便而将这些变量组织在一个名字之下。",_结构是一个或多个      的集合，这些变量可能为不同的类型，为了处理的方便而将这些变量组织在一个名字之下。,"
 结构是一个或多个变量的集合，这些变量可能为不同的类型，为了处理的方便而将这些变量组织在一个名字之下。","
 _结构是一个或多个      的集合，这些变量可能为不同的类型，为了处理的方便而将这些变量组织在一个名字之下。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
ANSI 标准在结构方面最主要的变化是定义了结构的赋值操作——结构可以拷贝、赋值、传递给函数，函数也可以返回结构类型的返回值。多年以前，这一操作就已经被大多数的编译器所支持，但是，直到这一标准才对其属性进行了精确定义。在 ANSI 标准中，自动结构和数组现在也可以进行初始化。",ANSI 标准在结构方面最主要的变化是定义了结构的      操作——结构可以拷贝、赋值、传递给函数，函数也可以返回结构类型的返回值。多年以前，这一操作就已经被大多数的编译器所支持，但是，直到这一标准才对其属性进行了精确定义。在 ANSI 标准中，自动结构和数组现在也可以进行      。_,"
 以下是一道根据给定文本的填空题:

ANSI 标准在结构方面最主要的变化是定义了结构的赋值操作,使得结构可以拷贝、赋值、传递给函数,函数也可以返回结构类型的返回值。多年以前,这一操作就已经被大多数的编译器所支持,但是,直到这一标准才对其属性进行了精确定义。在 ANSI 标准中,自动结构和数组现在也可以进行初始化。

填空题:

ANSI 标准在结构方面最主要的变化是定义了结构的赋值操作,使得结构可以拷贝、赋值、传递给函数,函数也可以返回结构类型的返回值。多年以前,这一操作就已经被大多数的编译器所支持,但是,直到这一标准才对其属性进行了精确定义。在 ANSI 标准中,自动结构和数组现在也可以进行初始化。

答案:

结构可以拷贝、赋值、传递给函数,函数也可以返回结构类型的返回值。","
 ANSI 标准在结构方面最主要的变化是定义了结构的      操作——结构可以拷贝、赋值、传递给函数，函数也可以返回结构类型的返回值。多年以前，这一操作就已经被大多数的编译器所支持，但是，直到这一标准才对其属性进行了精确定义。在 ANSI 标准中，自动结构和数组现在也可以进行      。_",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
结构中定义的变量称为成员。",_结构中定义的变量称为      。,"
 结构中定义的变量称为______。","
 _结构中定义的变量称为      。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
结构成员、结构标记和普通变量（即非成员）可以采用相同的名字，它们之间不会冲突，因为通过上下文分析总可以对它们进行区分。另外，不同结构中的成员可以使用相同的名字，但是，从编程风格方面来说，通常只有密切相关的对象才会使用相同的名字。",结构成员、结构标记和普通变量（即非成员）可以采用相同的名字，它们之间不会冲突，因为通过      总可以对它们进行区分。另外，不同结构中的成员可以使用相同的名字，但是，从编程风格方面来说，通常只有      的对象才会使用相同的名字。_,"
 结构成员、结构标记和普通变量（即非成员）可以采用相同的名字，因为通过上下文分析总可以对它们进行区分。另外，不同结构中的成员也可以使用相同的名字，但是，从编程风格方面来说，通常只有密切相关的对象才会使用相同的名字。","
 结构成员、结构标记和普通变量（即非成员）可以采用相同的名字，它们之间不会冲突，因为通过      总可以对它们进行区分。另外，不同结构中的成员可以使用相同的名字，但是，从编程风格方面来说，通常只有      的对象才会使用相同的名字。_",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在表达式中，可以通过下列形式引用某个特定结构中的成员：结构名.成员。其中的结构成员运算符“.”将结构名与成员名连接起来。",_在表达式中，可以通过下列形式引用某个特定结构中的成员：      其中的结构成员运算符“      ”将结构名与成员名连接起来。,"
 请根据以下文本内容出一道填空题:

在表达式中，可以通过下列形式引用某个特定结构中的成员：结构名.成员。其中的结构成员运算符“.”将结构名与成员名连接起来。

题目：在下面的结构体中，如何通过成员运算符“.”引用成员变量x？

```c
typedef struct {
    int x;
} MyStruct;
```

答案：MyStruct.x","
 _在表达式中，可以通过下列形式引用某个特定结构中的成员：      其中的结构成员运算符“      ”将结构名与成员名连接起来。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
结构的合法操作只有几种：作为一个整体复制和赋值，通过&运算符取地址，访问其成员。",结构的合法操作只有几种：作为一个整体复制和      ，通过      运算符取地址，访问其成员。_,"
 结构体的合法操作只有几种：作为一个整体复制和赋值，通过\*运算符取地址，访问其成员。","
 结构的合法操作只有几种：作为一个整体复制和      ，通过      运算符取地址，访问其成员。_",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
结构之间不可以进行比较。可以用一个常量成员值列表初始化结构，自动结构也可以通过赋值进行初始化。",结构之间      进行比较。可以用一个常量成员值列表初始化结构，自动结构也可以通过      进行初始化。_,"
 结构之间不可以进行比较。可以用一个常量成员值列表初始化结构，自动结构也可以通过赋值进行初始化。

填空题：结构之间不可以进行比较。可以用一个常量成员值列表初始化结构，自动结构也可以通过______进行初始化。

答案：赋值","
 结构之间      进行比较。可以用一个常量成员值列表初始化结构，自动结构也可以通过      进行初始化。_",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在对点结构体进行算数操作的函数中，其参数和返回值都是结构类型。之所以直接将相加所得的结果赋值给 p1，而没有使用显式的临时变量存储，是为了强调结构类型的参数和其它类型的参数一样，都是通过值传递的。",在对点结构体进行算数操作的函数中，其参数和返回值都是      类型。之所以直接将相加所得的结果赋值给 p1，而没有使用显式的临时变量存储，是为了强调结构类型的参数和其它类型的参数一样，都是通过      传递的。_,"
 请根据以下文本内容出一道填空题:

在对点结构体进行算数操作的函数中,其参数和返回值都是结构类型。之所以直接将相加所得的结果赋值给 p1,而没有使用显式的临时变量存储,是为了强调结构类型的参数和其它类型的参数一样,都是通过值传递的。

空格处应填入的词语是:直接将相加所得的结果赋值给 p1。","
 在对点结构体进行算数操作的函数中，其参数和返回值都是      类型。之所以直接将相加所得的结果赋值给 p1，而没有使用显式的临时变量存储，是为了强调结构类型的参数和其它类型的参数一样，都是通过      传递的。_",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
如果传递给函数的结构很大，使用指针方式的效率通常比复制整个结构的效率要高。",如果传递给函数的结构很大，使用      方式的效率通常比复制整个结构的效率要高。_,"
 下面是一道根据给定文本的填空题:

如果传递给函数的结构很大,使用指针方式的效率通常比复制整个结构的效率要高。

题目:在上述文本中,空格处的词语是______。","
 如果传递给函数的结构很大，使用      方式的效率通常比复制整个结构的效率要高。_",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
结构指针类似于普通变量指针。",结构指针类似于      指针。_,"
 结构指针类似于普通变量指针，其值为一个整数，该整数存放在一个指向结构体变量的指针中。结构指针用来指向一个结构体变量，并通过该指针访问其中的成员。","
 结构指针类似于      指针。_",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
将 pp 定义为一个指向 struct point 类型对象的指针。(*pp).x 中的圆括号是必需的，因为结构成员运算符“.”的优先级比“*”的优先级高。",_将 pp 定义为一个指向 struct point 类型对象的指针。(*pp).x 中的圆括号是必需的，因为结构成员运算符“      ”的优先级比“       ”的优先级高。,"
 将 pp 定义为一个指向 struct point 类型对象的指针。(*pp).x 中的圆括号是必需的，因为结构成员运算符“.”的优先级比“*”的优先级高。

填空题：

将 pp 定义为一个指向 struct point 类型对象的指针。(*pp).x 中的圆括号是必需的，因为结构成员运算符“.”的优先级比“*”的优先级高。

答案：因为结构成员运算符“.”的优先级比“*”的优先级高","
 _将 pp 定义为一个指向 struct point 类型对象的指针。(*pp).x 中的圆括号是必需的，因为结构成员运算符“      ”的优先级比“       ”的优先级高。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
表达式*pp.x 的含义等价于*(pp.x)，因为 x 不是指针，所以该表达式是非法的。",_表达式*pp.x 的含义等价于       ，因为       ，所以该表达式是非法的。,"
 表达式*pp.x 的含义等价于*(pp.x)，因为 x 不是指针，所以该表达式是非法的。

填空题：将下面的非法表达式中的括号去掉，使表达式合法。

```
表达式*pp.x 的含义等价于*(pp.x)，因为 x 不是指针，所以该表达式是非法的。

表达式*pp.x 的含义等价于*(pp.x)，因为 x 是指针，所以该表达式是合法的。
```","
 _表达式*pp.x 的含义等价于       ，因为       ，所以该表达式是非法的。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
例如：(++p)->len 将先执行 p 的加 1 操作，再对 len 执行操作；而(p++)->len 则先对 len 执行操作，然后再将 p 加 1（该表达式中的括号可以省略）。",例如：(++p)->len 将先执行       操作，再对      执行操作；而(p++)->len 则先对        执行操作，然后再      （该表达式中的括号可以省略）。_,"
 以下是一道根据给定文本的填空题:

给定一个指针 p 指向一个字符串,写一个表达式,使得先将 p 所指的 character 加 1,然后再将 p 所指的 character 位置(即指针 p 所指向的位置)加到字符串 len 的前面,即将 p 所指向的位置向前移动 len 个字符。

答案:(*(p+1))->len","
 例如：(++p)->len 将先执行       操作，再对      执行操作；而(p++)->len 则先对       执行操作，然后再       加 1（该表达式中的括号可以省略）。_",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
*p->str 读取的是指针 str 所指向的对象的值；*p->str++先读取指针str 指向的对象的值，然后再将 str 加 1（与*s++相同）；(*p->str）++将指针 str 指向的对象的值加 1；*p++->str 先读取指针 str 指向的对象的值，然后再将 p 加 1。",*p->str 读取的是指针 str 所指向的对象的值；*p->str++先读取指      的值，然后再      （与*s++相同）；(*p->str）++将指针 str 指向的对象的值加 1；*p++->str 先读取      的值，然后再      。_,"
 请根据以下文本内容完成填空题：

*p->str 读取的是指针 str 所指向的对象的值；**p->str++先读取指针 str 指向的对象的值，然后再将 str 加 1（与*s++相同）；***p->str++将指针 str 指向的对象的值加 1；*****p++->str 先读取指针 str 指向的对象的值，然后再将 p 加 1。

根据文本内容，以下哪个选项是正确的？

A. *p->str = str
B. **p->str++ = str
C. ***p->str++ = str
D. *****p++->str = str","
 *p->str 读取的是指针 str 所指向的对象的值；*p->str++先读取指      的值，然后再      （与*s++相同）；(*p->str）++将指针 str 指向的对象的值加 1；*p++->str 先读取      的值，然后再      。_",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
这种结构的初始化方法同前面所述的初始化方法类似——在定义后面通过一个用圆括号括起来的初值表进行初始化",这种结构的初始化方法同前面所述的初始化方法类似——在定义后面通过一个用      括起来的初值表进行初始化_,"
 下面是一道根据所给文本内容出的填空题:

这种结构的初始化方法同前面所述的初始化方法类似——在定义后面通过一个用圆括号括起来的初值表进行初始化。

答案:在定义后面通过一个用圆括号括起来的初值表进行初始化。","
 这种结构的初始化方法同前面所述的初始化方法类似——在定义后面通过一个用      括起来的初值表进行初始化_",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
C 语言提供了一个编译时（compile-time）一元运算符 sizeof，它可用来计算任一对象的长度。",_C 语言提供了一个编译时（compile-time）一元运算符       ，它可用来计算任一对象的长度。,"
 C语言提供了一个编译时（compile-time）一元运算符sizeof，它可用来计算任一对象的长度。

题目：下面哪个选项是正确的sizeof运算符的语法？

A. sizeof(表达式)
B. sizeof(变量)
C. sizeof()
D. size()","
 _C 语言提供了一个编译时（compile-time）一元运算符      ，它可用来计算任一对象的长度。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
sizeof 对象以及sizeof(类型名)将返回一个整型值，它等于指定对象或类型占用的存储空间字节数。",sizeof 对象以及sizeof(类型名)将返回一个      ，它等于指定对象或类型占用的存储空间字节数。_,"
 下面是一个关于sizeof和类型名的填空题：

sizeof 对象以及 sizeof(类型名) 将返回一个整型值，它等于指定对象或类型占用的存储空间字节数。这个值可以通过以下方式计算：__________。

提示：sizeof 是一个编译时运算符，用于计算对象或类型占用的存储空间字节数。","
 sizeof 对象以及sizeof(类型名)将返回一个      ，它等于指定对象或类型占用的存储空间字节数。_",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
&tab[-1]和&tab[n]都超出了数组 tab 的范围。前者是绝对非法的，而对后者的间接引用也是非法的。但是，C 语言的定义保证数组末尾之后的第一个元素（即&tab[n]）的指针算术运算可以正确执行。",&tab[-1]和&tab[n]都超出了数组 tab 的范围。前者是绝对非法的，而对后者的      引用也是非法的。但是，C 语言的定义保证数组      之后的第一个元素（即&tab[n]）的指针算术运算可以正确执行。_,"
 题目：在 C 语言中，对数组 tab 末尾之后的第一个元素（即 ``` ``` &tab[n] ``` `）的指针算术运算______正确执行。","
 &tab[-1]和&tab[n]都超出了数组 tab 的范围。前者是绝对非法的，而对后者的      引用也是非法的。但是，C 语言的定义保证数组      之后的第一个元素（即&tab[n]）的指针算术运算可以正确执行。_",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
假定我们需要处理一个更一般化的问题：统计输入中所有单词的出现次数。一种解决方法是，在读取输入中任意单词的同时，就将它放置到正确的位置，从而始终保证所有单词是按顺序排列的。虽然这可以不用通过在线性数组中移动单词来实现，但它仍然会导致程序执行的时间过长。我们可以使用一种称为二叉树的数据结构来取而代之。",_假定我们需要处理一个更一般化的问题：统计输入中所有单词的出现次数。一种解决方法是，在读取输入中任意单词的同时，就将它放置到正确的位置，从而始终保证所有单词是      的。虽然这可以不用通过在线性数组中移动单词来实现，但它仍然会导致程序执行的时间过长。我们可以使用一种称为       的数据结构来取而代之。,"
 问题：在上述文本中，作者提到了一种用于解决统计单词出现次数的问题的方法，这种方法是_____。

选项：
A. 线性数组
B. 二叉树
C. 栈
D. 队列","
 _假定我们需要处理一个更一般化的问题：统计输入中所有单词的出现次数。一种解决方法是，在读取输入中任意单词的同时，就将它放置到正确的位置，从而始终保证所有单词是      的。虽然这可以不用通过在线性数组中移动单词来实现，但它仍然会导致程序执行的时间过长。我们可以使用一种称为      的数据结构来取而代之。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
二叉树任何节点最多拥有两个子树，也可能只有一个子树或一个都没有。对节点的所有操作要保证，任何节点的左子树只包含按字典序该节点中单词的那些单词，右子树只包含按字典序该节点中单词的那些单词",_二叉树任何节点最多拥有      子树，也可能只有一个子树或一个都没有。对节点的所有操作要保证，任何节点的左子树只包含按字典序      该节点中单词的那些单词，右子树只包含按字典序      该节点中单词的那些单词,"
 以下是一道根据给定文本内容的填空题:

二叉树中,任何节点最多拥有两个子树,也可能只有一个子树或一个都没有。对节点的所有操作要保证,任何节点的左子树只包含按字典序该节点中单词的那些单词,右子树只包含按字典序该节点中单词的那些单词。

下面是一个可能的填空题:

空格处应填入:二叉树是一种特殊的树,它的每个节点最多拥有两个子树,也可能只有一个子树或一个都没有。对节点的所有操作要保证,任何节点的左子树只包含按字典序该节点中单词的那些单词,右子树只包含按字典序该节点中单词的那些单词。","
 _二叉树任何节点最多拥有      子树，也可能只有一个子树或一个都没有。对节点的所有操作要保证，任何节点的左子树只包含按字典序      该节点中单词的那些单词，右子树只包含按字典序      该节点中单词的那些单词",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
要查找一个新单词是否已经在树中，可以从根节点开始，比较新单词与该节点中的单词。若匹配，则得到肯定的答案。若新单词小于该节点中的单词，则在左子树中继续查找，否则在右子树中查找。如在搜寻方向上无子树，则说明新单词不在树中，并且，当前的空位置就是存放新加入单词的正确位置。",要查找一个新单词是否已经在树中，可以从      开始，比较新单词与该节点中的单词。若匹配，则得到肯定的答案。若新单词小于该节点中的单词，则在      中继续查找，否则在      中查找。如在搜寻方向上无子树，则说明新单词不在树中，并且，      就是存放新加入单词的正确位置。_,"
 以下是一道根据上述文本内容出的填空题:

要查找一个新单词是否已经在树中，可以从根节点开始，比较新单词与该节点中的单词。若匹配，则得到肯定的答案。若新单词小于该节点中的单词，则在左子树中继续查找，否则在右子树中查找。如在搜寻方向上无子树，则说明新单词不在树中，并且，当前的空位置就是存放新加入单词的正确位置。

填空题:

填空题: 

要查找一个新单词是否已经在树中，可以从_____开始，比较新单词与该节点中的单词。若匹配，则得到肯定的答案。若新单词小于该节点中的单词，则在左子树中继续查找，否则在右子树中查找。如在搜寻方向上无子树，则说明新单词不在树中，并且，当前的空位置就是存放新加入单词的正确位置。","
 要查找一个新单词是否已经在树中，可以从      开始，比较新单词与该节点中的单词。若匹配，则得到肯定的答案。若新单词小于该节点中的单词，则在      中继续查找，否则在      中查找。如在搜寻方向上无子树，则说明新单词不在树中，并且，      就是存放新加入单词的正确位置。_",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
因为从任意节点出发的查找都要按照同样的方式查找它的一个子树，所以该过程是递归的。",因为从任意节点出发的查找都要按照同样的方式查找它的一个子树，所以该过程是      的。_,"
 以下是一道填空题:

因为从任意节点出发的查找都要按照同样的方式查找它的一个子树,所以该过程是______。

答案:递归。","
 因为从任意节点出发的查找都要按照同样的方式查找它的一个子树，所以该过程是      的。_",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
调用 malloc 函数得到的存储空间可以通过调用 free 函数释放以重用。",_调用 malloc 函数得到的存储空间可以通过调用      函数释放以重用。,"
 以下是一个与该文本内容相关的填空题:

void *malloc(size_t size);

答案:size 是一个用来指定要分配的存储空间的指针大小(以字节为单位)。","
 _调用 malloc 函数得到的存储空间可以通过调用      函数释放以重用。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
表查找采用的是散列查找方法——将输入的名字转换为一个小的非负整数，该整数随后将作为一个指针数组的下标。数组的每个元素指向某个链表的表头，链表中的各个块用于描述具有该散列值的名字。如果没有名字散列到该值，则数组元素的值为 NULL",_表查找采用的是      查找方法——将输入的名字转换为一个小的非负整数，该整数随后将作为一个      的下标。数组的每个元素指向某个链表的表头，链表中的各个块用于描述具有该散列值的名字。如果没有名字散列到该值，则数组元素的值为          ,"
 以下是一道根据给定文本内容的填空题:

在散列查找中,将输入的名字转换为一个小的非负整数,该整数随后将作为一个指针数组的下标。数组的每个元素指针到一个链表的表头,链表中的各个块用于描述具有该散列值的名字。如果没有名字散列到该值,则数组元素的值为 NULL。

空格处应填:指针数组的下标

答案:指针数组的下标","
 _表查找采用的是      查找方法——将输入的名字转换为一个小的非负整数，该整数随后将作为一个      的下标。数组的每个元素指向某个链表的表头，链表中的各个块用于描述具有该散列值的名字。如果没有名字散列到该值，则数组元素的值为      ",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
散列函数 hash 在 lookup 和 install 函数中都被用到，它通过一个 for 循环进行计算，每次循环中，它将上一次循环中计算得到的结果值经过变换（即乘以 31）后得到的新值同字符串中当前字符的值相加(*s + 31 * hashval)，然后将该结果值同数组长度执行取模操作，其结果即是该函数的返回值。这并不是最好的散列函数，但比较简短有效。",_散列函数 hash 在 lookup 和 install 函数中都被用到，它通过一个      进行计算，每次循环中，它将上一次循环中计算得到的结果值经过变换（即乘以 31）后得到的新值同字符串中当前字符的值相加(*s + 31 * hashval)，然后将该结果值同数组长度执行      操作，其结果即是该函数的返回值。这并不是最好的散列函数，但比较简短有效。,"
 散列函数 hash 在 lookup 和 install 函数中都被用到，它通过一个 for 循环进行计算，每次循环中，它将上一次循环中计算得到的结果值经过变换（即乘以 31）后得到的新值同字符串中当前字符的值相加(*s + 31 * hashval)，然后将该结果值同数组长度执行取模操作，其结果即是该函数的返回值。这并不是最好的散列函数，但比较简短有效。

空缺部分：散列函数 hash 的返回值是______。","
 _散列函数 hash 在 lookup 和 install 函数中都被用到，它通过一个      进行计算，每次循环中，它将上一次循环中计算得到的结果值经过变换（即乘以 31）后得到的新值同字符串中当前字符的值相加(*s + 31 * hashval)，然后将该结果值同数组长度执行       操作，其结果即是该函数的返回值。这并不是最好的散列函数，但比较简短有效。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
注意，typedef 中声明的类型在变量名的位置出现，而不是紧接在关键字 typedef 之后。typedef 在语法上类似于存储类 extern、static 等。我们在这里以大写字母作为typedef 定义的类型名的首字母，以示区别。",注意，typedef 中声明的类型在      的位置出现，而不是紧接在关键字 typedef 之后。typedef 在语法上类似于存储类       、       等。我们在这里以大写字母作为typedef 定义的类型名的首字母，以示区别。_,"
 根据以上文本内容，以下是一道填空题：

在 C 语言中，typedef 用于声明的类型在变量名的位置是_____，而不是紧接在关键字 typedef 之后。","
 注意，typedef 中声明的类型在      的位置出现，而不是紧接在关键字 typedef 之后。typedef 在语法上类似于存储类       、       等。我们在这里以大写字母作为typedef 定义的类型名的首字母，以示区别。_",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
从任何意义上讲，typedef 声明并没有创建一个新类型，它只是为某个已存在的类型增加了一个新的名称而已。typedef 声明也没有增加任何新的语义：通过这种方式声明的变量与通过普通声明方式声明的变量具有完全相同的属性。",从任何意义上讲，typedef 声明并没有创建一个新类型，它只是为某个已存在的类型增加了一个      而已。typedef 声明也没有增加任何新的语义：通过这种方式声明的变量与通过普通声明方式声明的变量具有      的属性。_,"
 根据以上文本内容，以下是一个关于typedef声明的填空题：

typedef 声明并没有__________，它只是为某个已存在的类型增加了一个新的名称而已。typedef声明也没有__________，通过这种方式声明的变量与通过普通声明方式声明的变量具有完全相同的属性。

答案：声明类型、增加新语义","
 从任何意义上讲，typedef 声明并没有创建一个新类型，它只是为某个已存在的类型增加了一个      而已。typedef 声明也没有增加任何新的语义：通过这种方式声明的变量与通过普通声明方式声明的变量具有      的属性。_",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
实际上，typedef类似于#define 语句，但由于 typedef 是由编译器解释的，因此它的文本替换功能要超过预处理器的能力。",实际上，typedef类似于      语句，但由于 typedef 是由      解释的，因此它的文本替换功能要超过预处理器的能力。_,"
 下面是一个相应的填空题:

实际上,typedef类似于#define语句,但由于typedef是由编译器解释的,因此它的文本替换功能要超过预处理器的能力。

空格处应填入与typedef类似的功能,即用于定义一个类型别名,如下所示:

typedef int (*func_t)(int);","
 实际上，typedef类似于      语句，但由于 typedef 是由      解释的，因此它的文本替换功能要超过预处理器的能力。_",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
联合是可以（在不同时刻）保存不同类型和长度的对象的变量，编译器负责跟踪对象的长度和对齐要求。",_联合是可以（在不同时刻）保存不同类型和长度的对象的      ，       负责跟踪对象的长度和对齐要求。,"
 联合是可以（在不同时刻）保存不同类型和长度的对象的变量，编译器负责跟踪对象的长度和对齐要求。

题目：联合可以用来（ ）对象。

答案：保存","
 _联合是可以（在不同时刻）保存不同类型和长度的对象的      ，       负责跟踪对象的长度和对齐要求。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
联合提供了一种方式，以在单块存储区中管理不同类型的数据，而不需要在程序中嵌入任何同机器有关的信息。它类似于 Pascal 语言中的变体记录。",联合提供了一种方式，以在      中管理不同类型的数据，而不需要在      中嵌入任何同机器有关的信息。它类似于 Pascal 语言中的变体记录。_,"
 联合提供了一种方式，以在单块存储区中管理不同类型的数据，而不需要在程序中嵌入任何同机器有关的信息。它类似于 Pascal 语言中的____记录。","
 联合提供了一种方式，以在      中管理不同类型的数据，而不需要在      中嵌入任何同机器有关的信息。它类似于 Pascal 语言中的变体记录。_",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
联合可以使用在结构和数组中，反之亦可。访问结构中的联合（或反之）的某一成员的表示法与嵌套结构相同。",联合可以使用在      和      中，反之亦可。访问结构中的联合（或反之）的某一成员的表示法与      相同。_,"
 下面是一个关于C语言的填空题：

联合可以使用在结构和数组中，反之亦可。访问结构中的联合（或反之）的某一成员的表示法与______相同。","
 联合可以使用在      和      中，反之亦可。访问结构中的联合（或反之）的某一成员的表示法与      相同。_",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
实际上，联合就是一个结构，它的所有成员相对于基地址的偏移量都为 0，此结构空间要大到足够容纳最“宽”的成员，并且，其对齐方式要适合于联合中所有类型的成员。",_实际上，联合就是一个      ，它的所有成员相对于基地址的偏移量都为      ，此结构空间要大到足够容纳最“宽”的成员，并且，其对齐方式要适合于联合中      的成员。,"
 请根据以下文本内容完成填空题：实际上，联合就是一个结构，它的所有成员相对于基地址的偏移量都为0，此结构空间要大到足够容纳最“宽”的成员，并且，其对齐方式要适合于联合中所有类型的成员。

空格处应填：0","
 _实际上，联合就是一个      ，它的所有成员相对于基地址的偏移量都为      ，此结构空间要大到足够容纳最“宽”的成员，并且，其对齐方式要适合于联合中      的成员。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
对联合允许的操作与对结构允许的操作相同：作为一个整体单元进行赋值、复制、取地址及访问其中一个成员。联合只能用其第一个成员类型的值进行初始化",对联合允许的操作与对      允许的操作相同：作为一个整体单元进行赋值、复制、取地址及访问其中一个成员。联合只能用其      成员类型的值进行初始化_,"
 请根据上述文本内容，完成以下填空题：

对联合允许的操作与对结构允许的操作相同，包括以下几个方面：作为一个整体单元进行赋值、复制、取地址及访问其中一个成员。联合只能用其第一个成员类型的值进行初始化。

答案：作为一个整体单元进行赋值、复制、取地址及访问其中一个成员。联合只能用其第一个成员类型的值进行初始化。","
 对联合允许的操作与对      允许的操作相同：作为一个整体单元进行赋值、复制、取地址及访问其中一个成员。联合只能用其      成员类型的值进行初始化_",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
C 语言提供了一种直接定义和访问一个字中的位字段的能力，而不需要通过按位逻辑运算符。位字段（bit-field），或简称字段，是“字”中相邻位的集合。“字”（word）是单个的存储单元，它同具体的实现有关。",_C 语言提供了一种直接定义和访问一个字中的位字段的能力，而不需要通过      。位字段（bit-field），或简称字段，是“字”中相邻位的集合。“字”（word）是单个的      ，它同具体的实现有关。,"
 C语言提供了一种直接定义和访问一个字中的位字段的能力，而不需要通过按位逻辑运算符。位字段（bit-field），或简称字段，是“字”中相邻位的集合。“字”（word）是单个的存储单元，它同具体的实现有关。

下面是填空题：

C语言提供了一种直接定义和访问一个字中的位字段的能力，而不需要通过按位逻辑运算符。位字段（bit-field），或简称字段，是______中相邻位的集合。“字”（word）是单个的存储单元，它同具体的实现有关。","
 _C 语言提供了一种直接定义和访问一个字中的位字段的能力，而不需要通过      。位字段（bit-field），或简称字段，是“字”中相邻位的集合。“字”（word）是单个的      ，它同具体的实现有关。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
字段的所有属性几乎都同具体的实现有关。",字段的所有属性几乎都同      有关。字段是否能覆盖字边界由      定义。_,"
 字段的所有属性几乎都同具体的实现有关。

空格处应填：与具体实现有关","
 字段的所有属性几乎都同      有关。字段几乎都同      有关。字段几乎都同______有关。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
字段是否能覆盖字边界由具体的实现定义。字段可以不命名，无名字段（只有一个冒号和宽度）起填充作用。特殊宽度 0 可以用来强制在下一个字边界上对齐。",字段可以不命名，无名字段（只有一个冒号和宽度）起      作用。特殊宽度 0 可以用来       。_,"
 以下是一道填空题:

字段是否能覆盖字边界由具体的实现定义。字段可以不命名,无名字段(只有一个冒号和宽度)起填充作用。特殊宽度 0 可以用来强制在下一个字边界上对齐。

空格处应填:由具体的实现定义。","
 字段可以不命名，无名字段（只有一个冒号和宽度）起      作用。特殊宽度 0 可以用来      。_",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
变量和常量是程序处理的两种基本数据对象,声明语句说明变量的名字及类型,也可以指定变量的初值,运算符指定将要进行的操作。表达式则把变量与常量组合起来生成新的值。","声明语句说明变量的名字及类型,也可以指定变量的____,运算符指定将要进行的操作。","
 以下是一个关于变量的填空题:

声明语句用来说明变量的名字及类型,也可以用来指定变量的初值,______操作指定将要进行的操作。表达式则把变量与常量组合起来生成新的值。","
 声明语句说明变量的名字及类型,也可以指定变量的____,运算符指定将要进行的操作。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
ANSI标准对语言的基本类型与表达式做了许多小的修改与增补。所有整型都包括signed(带符号)和unsigned(无符号)两种形式,且可以表示无符号常量与十六进制字符常量。浮点运算可以以单精度进行,还可以使用更高精度的long double类型运算。字符串常量可以在编译时连接。ANSIC还支持枚举类型,该语言特性经过了长期的发展才形成。对象可以声明为const(常量)类型,表明其值不能修改。该标准还对算术类型之间的自动强制转换规则进行了扩充,以适合于更多的数据类型。","ANSI标准对语言的基本类型与表达式做了许多小的修改与增补。所有整型都包括____和____两种形式,且可以表示无符号常量与十六进制字符常量。","
 请根据上述文本内容，将下面的句子中的空缺部分用正确的词语填写：

ANSI标准对语言的基本类型与表达式做了许多小的修改与增补。所有整型都包括______和______两种形式,且可以表示无符号常量与十六进制字符常量。浮点运算可以以单精度进行,还可以使用更高精度的______类型运算。字符串常量可以在编译时连接。ANSIC还支持______类型，该语言特性经过了长期的发展才形成。对象可以声明为______类型，表明其值不能修改。该标准还对算术类型之间的自动强制转换规则进行了扩充,以适合于更多的数据类型。

答案：

 signed 無符号 unsigned long double char enum

constant 常量 object

该标准还对算术类型之间的自动强制转换规则进行了扩充,以适合于更多的数据类型。","
 ANSI标准对语言的基本类型与表达式做了许多小的修改与增补。所有整型都包括____和____两种形式,且可以表示无符号常量与十六进制字符常量。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
名字是由字母和数字组成的序列,但其第一个字符必须为字母。下划线被看做是字母,通常用于命名较长的变量名,以提高其可读性。由于例程的名字通常以下划线开头,因此变量名不要以下划线开头。大写字母与小写字母是有区别的,所以,x与x是两个不同的名字。在传统的C语言用法中,变量名使用小写字母,符号常量名全部使用大写字母。","名字是由字母和数字组成的序列,但其第一个字符必须为____。","
 以下划线通常用于命名较长的变量名，以提高其可读性。由于例程的名字通常以下划线开头，因此变量名不要以下划线开头。大写字母与小写字母是有区别的，所以，x与x是两个不同的名字。在传统的C语言用法中，变量名使用小写字母，符号常量名全部使用大写字母。","
 名字是由字母和数字组成的序列,但其第一个字符必须为____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
对于内部名而言,至少前31个字符是有效的。函数名与外部变量名包含的字符数目可能小于31,这是因为汇编程序和加载程序可能会使用这些外部名,而语言本身是无法控制加载和汇编程序的。对于外部名,ANSI标准仅保证前6个字符的惟一性,并且不区分大小写。类似于if、else、int、float等关键字是保留给语言本身使用的,不能把它们用做变量名。所有关健字中的字符都必须小写。选择的变量名要能够尽量从字面上表达变量的用途,这样做不容易引起混淆。局部变量一般使用较短的变量名(尤其是循环控制变量),外部变量使用较长的名字。","对于内部名而言,至少前____个字符是有效的。","
 下面哪个字符是有效的内部名的前缀?                                           

A. `i` B. `if` C. `f` D. `_` 

答案:D","
 对于内部名而言,至少前____个字符是有效的。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
C 语言只提供了下列几种基本数据类型：char字符型,占用一个字节,可以存放本地字符集中的一个字符int 整型,通常反映了所用机器中整数的最自然长度float单精度浮点型double双精度浮点型。此外,还可以在这些基本数据类型的前面加上一些限定符。short 与 long 两个限定符 用于限定整型：short int sh;long int counter;在上述这种类型的声明中,关键字 int 可以省略。通常很多人也习惯这么做。","C语言提供了几种基本数据类型,其中____占用一个字节,可以存放本地字符集中的一个字符。","
 C语言只提供了下列几种基本数据类型：char字符型,占用一个字节,可以存放本地字符集中的一个字符int 整型,通常反映了所用机器中整数的最自然长度float单精度浮点型double双精度浮点型。此外,还可以在这些基本数据类型的前面加上一些限定符。short 与 long 两个限定符 用于限定整型：short int sh;long int counter;在上述这种类型的声明中,关键字 int 可以省略。通常很多人也习惯这么做。

填空题：C语言中，下列哪个数据类型可以表示本地字符集中的一个字符？

A. short
B. float
C. char
D. int","
 C语言提供了几种基本数据类型,其中____占用一个字节,可以存放本地字符集中的一个字符。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
C 语言只提供了下列几种基本数据类型：char字符型,占用一个字节,可以存放本地字符集中的一个字符int 整型,通常反映了所用机器中整数的最自然长度float单精度浮点型double双精度浮点型。此外,还可以在这些基本数据类型的前面加上一些限定符。 short 与 long 两个限定符 用于限定整型：short int sh;long int counter;在上述这种类型的声明中,关键字 int 可以省略。通常很多人也习惯这么做。","在类型声明中,关键字int通常可以____。","
 C语言只提供了下列几种基本数据类型：char字符型,占用一个字节,可以存放本地字符集中的一个字符int 整型,通常反映了所用机器中整数的最自然长度float单精度浮点型double双精度浮点型。此外,还可以在这些基本数据类型的前面加上一些限定符。 short 与 long 两个限定符 用于限定整型：short int sh;long int counter;在上述这种类型的声明中,关键字 int 可以省略。通常很多人也习惯这么做。

填空题：C语言中，short和long是用于限定______类型的。

答案：整型","
 在类型声明中,关键字int通常可以____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
short 与 long 两个限定符的引入可以为我们提供满足实际需要的不同长度的整型数。 int 通常代表特定机器中整数的自然长度。 short 类型通常为 16 位, 1ong 类型通常为 32 位, int 类型可以为 16 位或 32 位。各编译器可以根据硬件特性自主选择合适的类型长度, 但要遵循下列限制： short 与 int 类型至少为 16 位,而 long 类型至少为 32 位,并且 short 类型不得长于 int 类型,而 int 类型不得长于 long 类型。",short与long两个限定符的引入可以为我们提供满足实际需要的不同长度的____数。,"
 根据上述文本，以下哪个选项是正确的？

A. short 类型通常为 8 位
B. long 类型通常为 16 位
C. int 类型可以为 8 位或 16 位
D. int 类型至少为 32 位","
 short与long两个限定符的引入可以为我们提供满足实际需要的不同长度的____数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
类型限定符 signed 与 unsigned 可用于限定 char 类型或任何整型。unsigned 类型 的数总是正值或 0,并遵守算术模 2n 定律,其中 n 是该类型占用的位数。例如,如果 char 对 象占用 8 位,那么 unsigned char 类型变量的取值范围为 0~255,而 signed char 类型 变量的取值范围则为-128~127（在采用对二的补码的机器上）。不带限定符的 char 类型对象 是否带符号则取决于具体机器,但可打印字符总是正值。",类型限定符signed与unsigned可用于限定____类型或任何整型。,"
 下面是一个关于类型限定符 signed 和 unsigned 的填空题：

在 C 语言中，类型限定符 signed 和 unsigned 用于限定 char 类型或任何整型。对于 unsigned 类型的数，它总是正值或 0，并遵守算术模 2n 定律，其中 n 是该类型占用的位数。例如，如果 char 对象占用 8 位，那么 unsigned char 类型变量的取值范围为 0~255，而 signed char 类型变量的取值范围则为 -128~127（在采用对二的补码的机器上）。关于不带限定符的 char 类型对象，是否带符号则取决于具体机器，但可打印字符总是正值。

下面是一个填空题：

使用 __attribute__((aligned(n))) 类型限定符 signed 和 unsigned 可以用于限定 int 类型变量，其中 n 是该类型占用的位数。对于 unsigned 类型的数，它总是正值或 0，并遵守算术模 2n 定律，其中 n 是该类型占用的位数。例如，如果 int 对象占用 4 位，那么 unsigned int 类型变量的取值范围为 0~255，而 signed int 类型变量的取值范围则为 -128~127（在采用对二的补码的机器上）。关于不带限定符的 int 类型对象，是否带符号则取决于具体机器，但可打印字符总是正值。

空格处应填写：使用 __attribute__((aligned(n))) 类型限定符 signed 和 unsigned 可以用于限定 int 类型变量，其中 n 是该类型占用的位数。对于 unsigned 类型的数，它总是正值或 0，并遵守算术模 2n 定律，其中 n 是该类型占用的位数。例如，如果 int 对象占用 4 位，那么 unsigned int 类型变量的取值范围为 0~255，而 signed int 类型变量的取值范围则为 -128~127（在采用对二的补码的机器上）。关于不带限定符的 int 类型对象，是否带符号则取决于具体机器，但可打印字符总是正值。","
 类型限定符 signed 和 unsigned 可用于限定____类型或任何整型。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
long double 类型表示高精度的浮点数。同整型一样,浮点型的长度也取决于具体的实现。float、double 与 long double 类型可以表示相同的长度, 也可以表示两种或三种不同的长度。有关这些类型长度定义的符号常量以及其它与机器和编译器有关的属性可以在标准头文 件<limits.h>与<float.h>中找到,这些内容将在附录 B 中讨论。",long double类型表示____的浮点数。,"
 根据上述文本内容，以下哪个选项是正确的？

A. long double 类型表示高精度的浮点数，同整型一样，浮点型的长度也取决于具体的实现。
B. float 和 double 类型可以表示相同的长度，也可以表示两种或三种不同的长度。
C. long double 类型表示低精度的浮点数。
D. double 类型表示高精度的浮点数。","
 long double类型表示____的浮点数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
long double 类型表示高精度的浮点数。同整型一样,浮点型的长度也取决于具体的实 现。 float、double 与 long double 类型可以表示相同的长度, 也可以表示两种或三种不同的长度。有关这些类型长度定义的符号常量以及其它与机器和编译器有关的属性可以在标准头文 件<limits.h>与<float.h>中找到,这些内容将在附录 B 中讨论。","float、double与long double类型可以表示相同的长度,也可以表示两种或____不同的长度。","
 以下哪个选项是正确的？

A. long double 类型表示高精度的浮点数，浮点型的长度取决于具体的实现。
B. float 和 double 类型可以表示相同的长度，也可以表示两种或三种不同的长度。
C. long double 类型表示高精度的浮点数，浮点型的长度可以在标准头文件<limits.h>中找到。
D. float、double 和 long double 类型可以表示相同的长度，浮点型的长度与机器和编译器有关。","
 float、double与long double类型可以表示相同的长度,也可以表示两种或____不同的长度。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
类似于  1234 的整数常量属于  int 类型。 long 类型的常量以字母  l 或 L 结尾,如 123456789L。如果一个整数太大以至于无法用 int 类型表示时,也将被当作 long 类型处 理。无符号常量以字母 u 或 U 结尾。后缀 ul 或 UL 表明是 unsigned long 类型。浮点数常量中包含一个小数点（如 123.4）或一个指数（如 1e-2）,也可以两者都有。 没有后缀的浮点数常量为 double 类型。后缀 f 或 F 表示 float 类型,而后缀 l 或 L 则表 示 long double 类型。",类似于1234的整数常量属于____类型。,"
 请根据以上文本内容，将以下整数常量属于哪个类型？

整数常量：-1234

答案：int","
 类似于1234的整数常量属于____类型。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
类似于  1234 的整数常量属于  int 类型。 long 类型的常量以字母  l 或 L 结尾,如 123456789L。如果一个整数太大以至于无法用 int 类型表示时,也将被当作 long 类型处 理。无符号常量以字母 u 或 U 结尾。后缀 ul 或 UL 表明是 unsigned long 类型。浮点数常量中包含一个小数点（如 123.4）或一个指数（如 1e-2）,也可以两者都有。 没有后缀的浮点数常量为 double 类型。后缀 f 或 F表示 float 类型,而后缀 l 或 L 则表 示 long double 类型。","浮点数常量中包含一个小数点（如123.4）或一个指数（如1e-2）,也可以两者都有。没有后缀的浮点数常量为____类型。后缀f或F表示____类型,而后缀l或L则表示____类型。","。

以下是一些例子:

int a = 1234;   // 整数常量
long b = 123456789L;   // 整数常量
long u = 123456789U;   // 整数常量
double c = 123.4;   // 浮点数常量
float d = 1e-2;   // 浮点数常量
double e = 12345.678;   // 浮点数常量
long double f = 12345.678L;   // long double 常量","
 浮点数常量中包含一个小数点（如123.4）或一个指数（如1e-2）,也可以两者都有。没有后缀的浮点数常量为____类型。后缀f或F表示____类型,而后缀l或L则表示____类型",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
整型数除了用十进制表示外, 还可以用八进制或十六进制表示。带前缀 0 的整型常量表 示它为八进制形式； 前缀为 0x 或 0X,则表示它为十六进制形式。例如,  十进制数 31 可以写 成八进制形式 037,也可以写成十六进制形式 0x1f 或 0X1F。八进制与十六进制的常量也可 以使用后缀 L 表示 long 类型,使用后缀 U 表示 unsigned 类型。例如,  0XFUL 是一个 unsigned long 类型（无符号长整型）  的常量,  其值等于十进制数 15。","整型数除了用十进制表示外,还可以用____或____表示。","
 以下哪个选项是正确的 C 语言表达式，表示一个无符号长整型常量 0XFUL 的值等于十进制数 15？

A. 0xFUL
B. 0XFUL
C. 037
D. 0x1f

正确答案：B. 0XFUL","
 0XFUL 是一个____的常量,其值等于十进制数____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
整型数除了用十进制表示外, 还可以用八进制或十六进制表示。带前缀 0 的整型常量表 示它为八进制形式； 前缀为 0x 或 0X,则表示它为十六进制形式。例如,  十进制数 31 可以写 成八进制形式 037,也可以写成十六进制形式 0x1f 或 0X1F。八进制与十六进制的常量也可 以使用后缀 L 表示 long 类型使用后缀 U 表示 unsigned 类型。例如,  0XFUL 是一个 unsigned long 类型（无符号长整型）  的常量,  其值等于十进制数 15。","0XFUL 是一个____的常量,其值等于十进制数____。","
 请根据上述文本,将以下整型数转换为相应的十六进制形式:

- 十进制数 31
- 十进制数 12345
- 八进制数 037
- 十六进制数 0x1F
- 十六进制数 0XFUL

答案:

- 十进制数 31 转换为十六进制形式为 1F
- 十进制数 12345 转换为十六进制形式为 7545
- 八进制数 037 转换为十六进制形式为 1F
- 十六进制数 0x1F 转换为十进制形式为 31
- 十六进制数 0XFUL 转换为十进制形式为 15","
 0XFUL 是一个____的常量,其值等于十进制数____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
一个字符常量是一个整数, 书写时将一个字符括在单引号中, 如, 'x'。字符在机器字符 集中的数值就是字符常量的值。例如, 在 ASCII 字符集中,字符'0'的值为 48,它与数值 0 没有关系。如果用字符'0'代替这个与具体字符集有关的值（比如 48）,那么, 程序就无需关 心该字符对应的具体值, 增加了程序的易读性。字符常量一般用来与其它字符进行比较,但 也可以像其它整数一样参与数值运算","一个字符常量是一个整数,书写时将一个字符括在____中","
 下面是一个符合要求的填空题：

在 C 语言中，一个字符常量是一个_______，它由一个字符括在单引号中表示。例如，'x'。在机器字符集中，字符的数值就是字符常量的值。例如，在 ASCII 字符集中，字符'0'的值为_______。如果用字符'0'代替这个与具体字符集有关的值（比如 48），那么程序就无需关心该字符对应的具体值，增加了程序的易读性。字符常量一般用来与其它字符进行比较，但也可以像其它整数一样参与数值运算。

请将空缺部分填写完整。","
 一个字符常量是一个整数,书写时将一个字符括在____中",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
某些字符可以通过转义字符序列（例如,换行符n）表示为字符和字符串常量。转义字 符序列看起来像两个字符,但只表示一个字符。另外,我们可以用'ooo'表示任意的字节大小的位模式。其中,  ooo 代表 1~3 个八进制数字（0 …7）。这种位模式还 可以用'xhh'表示,其中,  hh 是一个或多个十六进制数字（0 …9 ,a …f,A …F）。因此,我们可以按照下 列形式书写语句：* ASCII vertical tab ** ASCII bell character *上述语句也可以用十六进制的形式书写为：* ASCII vertical tab **ASCII bell character *ANSI C 语言中的全部转义字符序列如下所示：a 响铃符  反斜杠b 回退符 ? 问号f 换页符 ' 单引号n 换行符 '' 双引号r 回车符 ooo 八进制数t 横向制表符 xhh 十六进制数v 纵向制表符字符常量'0'表示值为 0 的字符, 也就是空字符（null）。我们通常用'0'的形式代替 0, 以强调某些表达式的字符属性,但其数字值为 0。",转义字 符序列表示____个字符, 退格符 t 制表符  空格符  8 八进制数字 0 十六进制数字 A 字母 1 数字 9 字母 F 字母 2 数字 8 字母 3 字母 7 字母 4 数字 6 字母 5 字母 7 字母 8 字母 9 字母 0 数字 1 数字 2 数字 3 字母 4 数字 5 字母 6 数字 7 字母 8 字母 9 字母 0 数字 1 数字 2 数字 3 字母 4 数字 5 字母 6 数字 7 字母 8 字母 9 字母 0 数字 1 数字 2 数字 3 字母 4 数字 5 字母 6 数字 7 字母 8 字母 9 字母 0 数字 1 数字 2 数字 3 字母 4 数字 5 字母 6 数字 7 字母 8 字母 9 字母 0 数字 1 数字 2 数字 3 字母 4 数字 5 字母 6 数字 7 字母 8 字母 9 字母 0 数字 1 数字 2 数字 3 字母 4 数字 5 字母 6 数字 7 字母 8 字母 9 字母 0 数字 1 数字 2 数字 3 字母 4 数字 5 字母 6 数字 7 字母 8 字母 9 字母 0 数字 1 数字 2 数字 3 字母 4 数字 5 字母 6 数字 7 字母 8 字母 9 字母 0 数字 1 数字 2 数字 3 字母 4 数字 5 字母 6 数字 7 字母 8 字母 9 字母 0 数字 1 数字 2 数字 3 字母 4 数字 5 字母 6 数字 7 字母 8 字母 9 字母 0 数字 1 数字 2 数字 3 字母 4 数字 5 字母 6 数字 7 ,"
 转义字 符序列表示",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
某些字符可以通过转义字符序列（例如,换行符n）表示为字符和字符串常量。转义字 符序列看起来像两个字符,但只表示一个字符。另外,我们可以用'ooo'表示任意的字节大小的位模式。其中,  ooo 代表 1~3 个八进制数字（0 …7）。这种位模式还 可以用'xhh'表示,其中,  hh 是一个或多个十六进制数字（0 …9 ,a …f,A …F）。因此,我们可以按照下 列形式书写语句：* ASCII vertical tab ** ASCII bell character *上述语句也可以用十六进制的形式书写为：* ASCII vertical tab **ASCII bell character *ANSI C 语言中的全部转义字符序列如下所示：a 响铃符  反斜杠b 回退符 ? 问号f 换页符 ' 单引号n 换行符 '' 双引号r 回车符 ooo 八进制数t 横向制表符 xhh 十六进制数v 纵向制表符字符常量'0'表示值为 0 的字符, 也就是空字符（null）。我们通常用'0'的形式代替 0, 以强调某些表达式的字符属性,但其数字值为 0",可以用 'ooo' 表示任意的字节大小的____,"车符  方括号[] 请根据以上文本,填入以下空白处
 可以用 'ooo' 表示任意的",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
某些字符可以通过转义字符序列（例如,换行符n）表示为字符和字符串常量。转义字 符序列看起来像两个字符,但只表示一个字符。另外,我们可以用'ooo'表示任意的字节大小的位模式。其中,  ooo 代表 1~3 个八进制数字（0 …7）。这种位模式还 可以用'xhh'表示,其中,  hh 是一个或多个十六进制数字（0 …9 ,a …f,A …F）。因此,我们可以按照下 列形式书写语句：* ASCII vertical tab ** ASCII bell character *上述语句也可以用十六进制的形式书写为：* ASCII vertical tab **ASCII bell character *ANSI C 语言中的全部转义字符序列如下所示：a 响铃符  反斜杠b 回退符 ? 问号f 换页符 ' 单引号n 换行符'' 双引号r 回车符 ooo 八进制数t 横向制表符 xhh 十六进制数v 纵向制表符字符常量'0'表示值为 0 的字符, 也就是空字符（null）。我们通常用'0'的形式代替 0, 以强调某些表达式的字符属性,但其数字值为 0","ANSI C 语言中的转义字符序列如何表示,响铃符____,反斜杠____,回退符____,问号____",""" 右引号  注意: 在 ANSI C 语言中,转义字符序列的转义序列是固定的,因此,在书写程序时,只需要记住 这些转义序列即可。","
 ANSI C 语言中的转义字符序列如何表示,响铃符____,反斜杠____",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
常量表达式是仅仅只包含常量的表达式。这种表达式在编译时求值,而不在运行时求值。 它可以出现在常量可以出现的任何位置。","常量表达式是仅仅只包含____的表达式。这种表达式在编译时求值,而不在运行时求值。","
 常量表达式是仅仅只包含常量的表达式。这种表达式在编译时求值,而不在运行时求值。 它可以出现在常量可以出现的任何位置。

下面是一个关于常量表达式的填空题:

在C语言中,常量表达式__________。这种表达式在编译时求值,而不在运行时求值。","
 常量表达式是仅仅只包含____的表达式。这种表达式在编译时求值,而不在运行时求值。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
字符串常量也叫字符串字面值,是用双引号括起来的 0  个或多个字符组成的字符序列。","字符串常量也叫____,是用____括起来的0个或多个字符组成的字符序列。","
 以下是一道填空题:

字符串常量也叫字符串字面值,是用双引号括起来的 0个或多个字符组成的字符序列。

填空题:

将下面的字符串字面值用双引号括起来:

__________

答案:字符串常量也叫字符串字面值,是用双引号括起来的 0个或多个字符组成的字符序列。","
 字符串常量也叫____,是用____括起来的0个或多个字符组成的字符序列。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
双引号不是字符串的一部分,它只用于限定字符串。字符常量中使用的转义字 符序列同样也可以用在字符串中。在字符串中使用''表示双引号字符。编译时可以将多个字 符串常量连接起来, 例如,下列形式：'hello,' ' world'等价于'hello, world'字符串常量的连接为将较长的字符串分散在若干个源文件行中提供了支持。","双引号不是字符串的一部分,它只用于____字符串。字符常量中使用的转义字符序列同样也可以用在字符串中。在字符串中使用''表示____字符。","
 请从下面的选项中选择一个正确的答案，用双引号括起来的字符序列表示字符串常量。

A. ''hello,'
B. ""hello, world""
C. ""hello, ""
D. ''hello world'

正确答案是：B. ""hello, world""","
 双引号不是字符串的一部分,它只用于____字符串。字符常量中使用的转义字符序列同样也可以用在字符串中。在字符串中使用''表示____字符。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
从技术角度看,字符串常量就是字符数组。字符串的内部表示使用一个空字符'0'作为  串的结尾,  因此。存储字符串的物理存储单元数比括在双引号中的字符数多一个。这种表示  方法也说明,C 语言对字符串的长度没有限制,但程序必须扫描完整个字符串后才能确定字符  串的长度。标准库函数 strlen(s)可以返回字符串参数 s 的长度,但长度不包括末尾的 '0'。 下面是我们设计的 strlen 函数的一个版本：标准头文件<string.h>中声明了 strlen 和其它字符串函数。","从技术角度看,字符串常量就是____。字符串的内部表示使用一个空字符'0'作为串的结尾,因此,存储字符串的物理存储单元数比括在双引号中的字符数____。","
 空格处应填：字符数组。","
 从技术角度看,字符串常量就是____。字符串的内部表示使用一个空字符'0'作为串的结尾,因此,存储字符串的物理存储单元数比括在双引号中的字符数____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
枚举常量是另外一种类型的常量。枚举是一个常量整型值的列表,不同枚举中的名字必须互不相同。同一枚举中不同的名字可以具有相同的值。枚举为建立常量值与名字之间的关联提供了一种便利的方式。相对于#define 语句来说,它的优势在于常量值可以自动生成。尽管可以声明 enum 类型的变量,但编译器不检查这种类  型的变量中存储的值是否为该枚举的有效值。不过,枚举变量提供这种检查,因此枚举比  #define 更具优势。此外,调试程序可以以符号形式打印出枚举变量的值。",枚举常量是另外一种类型的常量。枚举是一个常量整型值的____。,"
 下面是针对这段文本的填空题:

枚举常量是另外一种类型的常量。枚举是一个常量整型值的列表,不同枚举中的名字必须互不相同。同一枚举中不同的名字可以具有相同的值。枚举为建立常量值与名字之间的关联提供了一种便利的方式。相对于#define语句来说,它的优势在于常量值可以自动生成。尽管可以声明enum类型的变量,但编译器不检查这种类型的变量中存储的值是否为该枚举的有效值。不过,枚举变量提供这种检查,因此枚举比#define更具优势。此外,调试程序可以以符号形式打印出枚举变量的值。

空格处应填入的内容分别为:

1. 枚举常量是另外一种类型的常量。
2. 枚举是一个常量整型值的列表。
3. 不同枚举中的名字必须互不相同。
4. 同一枚举中不同的名字可以具有相同的值。
5. 枚举为建立常量值与名字之间的关联提供了一种便利的方式。
6. 相对于#define语句来说,它的优势在于常量值可以自动生成。
7. 尽管可以声明enum类型的变量,但编译器不检查这种类型的变量中存储的值是否为该枚举的有效值。
8. 不过,枚举变量提供这种检查,因此枚举比#define更具优势。
9. 此外,调试程序可以以符号形式打印出枚举变量的值。","
 枚举常量是另外一种类型的常量。枚举是一个常量整型值的____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
枚举常量是另外一种类型的常量。枚举是一个常量整型值的列表,不同枚举中的名字必须互不相同。同一枚举中不同的名字可以具有相同的值。枚举为建立常量值与名字之间的关联提供了一种便利的方式。相对于#define 语句来说,它的优势在于常量值可以自动生成。尽管可以声明 enum 类型的变量,但编译器不检查这种类  型的变量中存储的值是否为该枚举的有效值。不过,枚举变量提供这种检查,因此枚举比  #define 更具优势。此外,调试程序可以以符号形式打印出枚举变量的值",不同枚举中的名字必须互不相同。同一枚举中不同的名字可以具有____的值。,"
 请根据以下文本内容出一道填空题:

枚举常量是另外一种类型的常量。枚举是一个常量整型值的列表,不同枚举中的名字必须互不相同。同一枚举中不同的名字可以具有相同的值。枚举为建立常量值与名字之间的关联提供了一种便利的方式。相对于#define语句来说,它的优势在于常量值可以自动生成。尽管可以声明enum类型的变量,但编译器不检查这种类型的变量中存储的值是否为该枚举的有效值。不过,枚举变量提供这种检查,因此枚举比#define更具优势。此外,调试程序可以以符号形式打印出枚举变量的值。

空格处的词语是:

枚举常量是另外一种类型的常量。枚举是一个常量整型值的列表,不同枚举中的名字必须互不相同。同一枚举中不同的名字可以具有相同的值。枚举为建立常量值与名字之间的关联提供了一种便利的方式。相对于#define语句来说,它的优势在于常量值可以自动生成。尽管可以声明enum类型的变量,但编译器不检查这种类型的变量中存储的值是否为该枚举的有效值。不过,枚举变量提供这种检查,因此枚举比#define更具优势。此外,调试程序可以以符号形式打印出枚举变量的值。

空格处的词语是:关联","
 不同枚举中的名字必须互不相同。同一枚举中不同的名字可以具有____的值。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
所有变量都必须先声明后使用,尽管某些变量可以通过上下文隐式地声明。 一个声明指 定一种变量类型,后面所带的变量表可以包含一个或多个该类型的变量。例如：int lower, upper, step;char c, 1ine[1000];一个声明语句中的多个变量可以拆开在多个声明语句中声明。上面的两个声明语句也可以等 价地写成下列形式：int lower;int upper;int step;char c;char line[1000];按照这种形式书写代码需要占用较多的空间,但便于向各声明语句中添加注释,也便于以后修改。","所有变量都必须先____后使用,尽管某些变量可以通过上下文隐式地声明。","
 以下是一个符合要求的填空题：

在C语言中，声明语句中的变量表可以包含一个或多个变量，这些变量______。一个声明语句中的多个变量可以拆开在多个声明语句中声明，这样的写法可以______，便于向各声明语句中添加注释，也便于以后修改。

答案：

在C语言中，声明语句中的变量表可以包含一个或多个变量，这些变量可以是不同类型的。一个声明语句中的多个变量可以拆开在多个声明语句中声明，这样的写法可以减少代码的复杂度，便于向各声明语句中添加注释，也便于以后修改。","
 所有变量都必须先____后使用,尽管某些变量可以通过上下文隐式地声明。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
还可以在声明的同时对变量进行初始化。在声明中,如果变量名的后面紧跟一个等号以 及一个表达式,该表达式就充当对变量进行初始化的初始化表达式。如果变量不是自动变量,则只能进行一次初始化操作,从概念上讲,应该是在程序开始 执行之前进行,并且初始化表达式必须为常量表达式。每次进入函数或程序块时,显式初始 化的自动变量都将被初始化一次, 其初始化表达式可以是任何表达式。默认情况下,外部变 量与静态变量将被初始化为 0。未经显式初始化的自动变量的值为未定义值（即无效值）。","还可以在声明的同时对变量进行初始化。在声明中,如果变量名的后面紧跟一个等号以及一个表达式,该表达式就充当对变量进行初始化的____。","
 在C语言中，变量名后面紧跟一个等号以及一个表达式，这个表达式被称为______表达式，用于对变量进行初始化。","
 还可以在声明的同时对变量进行初始化。在声明中,如果变量名的后面紧跟一个等号以及一个表达式,该表达式就充当对变量进行初始化的____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
任何变量的声明都可以使用 const 限定符限定。该限定符指定变量的值不能被修改。 对 数组而言,const 限定符指定数组所有元素的值都不能被修改：const double e = 2.71828182845905;const限定符也可配合数组参数使用,它表明函数不能修改数组元素的值：int strlen(const char[]);如果试图修改 const 限定符限定的值,其结果取决于具体的实现。",任何变量的声明都可以使用____限定符限定。该限定符指定变量的值不能被修改。,"
 以下是一道根据给定文本的填空题：

const double e = 2.71828182845905;
const限定符也可配合数组参数使用,它表明函数不能修改数组元素的值：int strlen(const char[]);
如果试图修改 const 限定符限定的值,其结果取决于具体的实现。

请从以下选项中选择正确的答案：

A. 无法修改
B. 可修改
C. 取决于实现

正确答案：C. 取决于实现","
 任何变量的声明都可以使用____限定符限定。该限定符指定变量的值不能被修改。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
二元算术运算符包括： +、-、*、、%（取模运算符）。整数除法会截断结果中的小数部 分。表达式x % y的结果是 x 除以 y 的余数,当 x 能被 y 整除时,其值为 0。例如,如果某一年的年份能被 4  整除但不能被 100 整除,那么这一年就是闰年,此外,能被 400 整除的年份也是闰年。因此, 可以用下列语句判断闰年：取模运算符%不能应用于 float 或 double 类型。在有负操作数的情况下,整数除法截 取的方向以及取模运算结果的符号取决于具体机器的实现,这和处理上溢或下溢的情况是一 样的。",整数除法会截断结果中的____部分。,"
 以下是一道根据文本内容填空的题目：

在C语言中，对于浮点数类型的运算，取模运算符%用来表示________。","
 表达式x % y的结果是x除以y的____,当x能被y整除时,其值为____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
二元算术运算符包括： +、-、*、、%（取模运算符）。整数除法会截断结果中的小数部 分。表达式x % y的结果是 x 除以 y 的余数,当 x 能被 y 整除时,其值为 0。例如,如果某一年的年份能被 4  整除但不能被 100整除,那么这一年就是闰年,此外,能被 400 整除的年份也是闰年。因此, 可以用下列语句判断闰年：取模运算符%不能应用于 float 或 double 类型。在有负操作数的情况下,整数除法截 取的方向以及取模运算结果的符号取决于具体机器的实现,这和处理上溢或下溢的情况是一 样的。","表达式x % y的结果是x除以y的____,当x能被y整除时,其值为____。","
 以下是一道填空题：

在 C 语言中，对于浮点数类型，取模运算符(__)不能应用于除法运算。","
 表达式x % y的结果是x除以y的____,当x能被y整除时,其值为____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
二元运算符+和-具有相同的优先级,它们的优先级比运算符 *、和%的优先级低,而运 算符*、和%的优先级又比一元运算符+和-的优先级低。算术运算符采用从左到右的结合规 则。","二元运算符+和-具有相同的优先级,它们的优先级比运算符 、和%的优先级____,而运算符、和%的优先级又比一元运算符+和-的优先级____。","
 请问，在二元运算符中，哪个运算符的优先级最低？

A. +
B. -
C. *
D. %","
 二元运算符+和-具有相同的优先级,它们的优先级比运算符 、和%的优先级____,而运算符、和%的优先级又比一元运算符+和-的优先级____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
关系运算符包括下列几个运算符：>     >=   <     <=它们具有相同的优先级。优先级仅次于它们的是相等性运算符：== !=关系运算符的优先级比算术运算符低。因此,表达式 i < lim - 1等价于 i < (lim - 1)。",关系运算符包括下列几个运算符：____。,"
 关系运算符包括下列几个运算符：____    >    ____    >    ____    >    ____
它们具有相同的优先级。优先级仅次于它们的是相等性运算符：____   !=    ____
关系运算符的优先级比算术运算符低。因此,表达式____等价于____。

答案：<     >     <     >","
 关系运算符包括下列几个运算符：____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
逻辑运算符 &&与||有一些较为特殊的属性, 由&&与||连接的表达式按从左到右的顺序进 行求值,并且,在知道结果值为真或假后立即停止计算。绝大多数 C 语言程序运用了这些属 性。","逻辑运算符 && 与 || 连接的表达式按____进行求值,并且,在知道结果值为真或假后____停止计算。","
 请根据以下文本内容出一道填空题:

逻辑运算符 && 和 || 有一些特殊的属性。由 && 和 || 连接的表达式按从左到右的顺序进行求值,并且,在知道结果值为真或假后立即停止计算。绝大多数 C 语言程序运用了这些属性。

空格处应填入:逻辑运算符。","
 逻辑运算符 && 与 || 连接的表达式按____进行求值,并且,在知道结果值为真或假后____停止计算。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
运算符 &&的优先级比||的优先级高,但两者都比关系运算符和相等性运算符的优先级低。 因此,表达式i<lim-1 && (c = getchar()) != 'n' && c!= EOF就不需要另外加圆括号。但是,由于运算符!=的优先级高于赋值运算符的优先级,因此,在 表达式(c = getchar()) != '’n'中,就需要使用圆括号,这样才能达到预期的目的：先把函数返回值赋值给  c,然后再将  c 与'n'进行比较。根据定义,在关系表达式或逻辑表达式中,如果关系为真,则表达式的结果值为数值 1； 如果为假,则结果值为数值 0。","运算符 &&的优先级比||的优先级____,但两者都比关系运算符和相等性运算符的优先级____。","
 运算符 && 的优先级比 || 的优先级高,但两者都比关系运算符和 相等性运算符的优先级低。 因此,表达式 i<lim-1 && (c = getchar())!= 'n' && c!= EOF 就不需要另外加圆括号。但是,由于运算符!= 的优先级高于赋值运算符的优先级,因此,在 表达式 (c = getchar())!= '’n' 中,就需要使用圆括号,这样才能达到预期的目的:先把函数返回值赋值给 c,然后再将 c 与'n'进行比较。根据定义,在 关系表达式或逻辑表达式中,如果关系为真,则表达式的结果值为数值 1; 如果为假,则结果值为数值 0。

填空题:

表达式 (c = getchar())!= '’n' 中,需要使用圆括号,这样才能达到预期的目的:先把函数返回值赋值给 c,然后再将 c 与'n'进行比较。根据定义,在 关系表达式或逻辑表达式中,如果关系为真,则表达式的结果值为数值 1; 如果为假,则结果值为数值 0。

空格处应填: &&","
 运算符 &&的优先级比||的优先级____,但两者都比关系运算符和相等性运算符的优先级____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
逻辑非运算符!的作用是将非 0 操作数转换为 0,将操作数 0 转换为 1。该运算符通常用 于下列类似的结构中：if (!valid)一般不采用下列形式：if (valid == 0)当然,很难评判上述两种形式哪种更好。类似于!valid 的用法读起来更直观一些（'如果不是有效的'）,但对于一些更复杂的结构可能会难于理解。","逻辑非运算符!的作用是将非 0 操作数转换为____,将操作数 0 转换为____。","
 逻辑非运算符!的作用是将非 0 操作数转换为 0,将操作数 0 转换为 1。该运算符通常用于下列类似的结构中：if (!valid)","
 逻辑非运算符!的作用是将非 0 操作数转换为____,将操作数 0 转换为____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
当一个运算符的几个操作数类型不同时,就需要通过一些规则把它们转换为某种共同的类型。一般来说,自动转换是指把'比较窄的'操作数转换为'比较宽的'操作数,并且不丢失信息的转换,例如,在计算表达式 f+i 时,将整型变量 i 的值自动转换为浮点型（这里 的变量 f 为浮点型）。不允许使用无意义的表达式,例如,不允许把 float 类型的表达式作为下标。针对可能导致信息丢失的表达式,编译器可能会给出警告信息,比如把较长的整型 值赋给较短的整型变量,把浮点型值赋值给整型变量,等等,但这些表达式并不非法。","自动转换通常是指将'比较窄的'操作数转换为____,并且不丢失信息的转换。","
 以下哪个运算符的操作数类型不同时需要进行自动转换？

```c
int + float
int * float
float + int
int * float
```","
 自动转换通常是指将'比较窄的'操作数转换为____,并且不丢失信息的转换。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
由于 char 类型就是较小的整型,因此在算术表达式中可以自由使用 char 类型的变量, 这就为实现某些字符转换提供了很大的灵活性, 比如,下面的函数 atoi 就是一例, 它将一串 数字转换为相应的数值：我们在第 1 章讲过,  表达式s[i] - '0'能够计算出  s[i]中存储的字符所对应的数字值, 这是因为 '0'、 'l'等在字符集中对应的数 值是一个连续的递增序列。","char 类型可以在算术表达式中自由使用,因为它就是较小的____。","
 由于 char 类型就是较小的整型,因此在算术表达式中可以自由使用 char 类型的变量, 这就为实现某些字符转换提供了很大的灵活性, 比如,下面的函数 atoi 就是一例, 它将一串 数字转换为相应的数值：我们在第 1 章讲过,  表达式 s[i] - '0' 能够计算出  s[i]中存储的字符所对应的数字值, 这是因为 '0'、 'l' 等在字符集中对应的值是一个连续的递增序列。

空格处的值为：__。","
 char 类型可以在算术表达式中自由使用,因为它就是较小的____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数 lower 是将 char 类型转换为 int 类型的另一个例子, 它将 ASCII 字符集中的字符 映射到对应的小写字母。如果待转换的字符不是大写字母, lower 函数将返回字符本身。上述这个函数是为 ASCII 字符集设计的。在 ASCII 字符集中,  大写字母与对应的小写字母作 为数字值来说具有固定的间隔,并且每个字母表都是连续的——也就是说,在 A~Z 之间只有 字母。但是,后面一点对 EBCDIC 字符集是不成立的,因此这一函数作用在 EBCDIC 字符集 中就不仅限于转换字母的大小写。",函数 lower 的设计是为____字符集而设计的。,"
 请根据以下文本内容出一道填空题:

函数 lower 是将 char 类型转换为 int 类型的另一个例子, 它将 ASCII 字符集中的字符 映射到对应的小写字母。如果待转换的字符不是大写字母, lower 函数将返回字符本身。上述这个函数是为 ASCII 字符集设计的。在 ASCII 字符集中,  大写字母与对应的小写字字母作 为数字值来说具有固定的间隔,并且每个字母表都是连续的——也就是说,在 A~Z 之间只有 字母。但是,后面一点对 EBCDIC 字符集是不成立的,因此这一函数作用在 EBCDIC 字符集 中就不仅限于转换字母的大小写。

填空题:

在 ASCII 字符集中, 大写字母与对应的小写字字母作 为数字值来说具有固定的间隔,并且每个字母表都是连续的, 也就是说,在 A~Z 之间只有 ___。

答案:4","
 函数 lower 的设计是为____字符集而设计的。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
C 语言中, 很多情况下会进行隐式的算术类型转换。一般来说,如果二元运算符（具有两 个操作数的运算符称为二元运算符,比如+或*）的两个操作数具有不同的类型,那么在进行 运算之前先要把'较低'的类型提升为'较高'的类型, 运算的结果为较高的类型。","在C语言中,如果二元运算符的两个操作数具有不同的类型,那么在进行运算之前先____,运算的结果为____类型。","
 C语言中,很多情况下会进行隐式的算术类型转换。一般来说,如果二元运算符的两个操作数具有不同的类型,那么在进行运算之前先要把'较低'的类型提升为'较高'的类型, 运算的结果为较高的类型。

下面是一个例子:

假设有一个表达式 `3 + 2 * 4`

首先,编译器需要确定乘法和加法之间的优先级。在这个例子中,乘法和加法都是二元运算符,但是它们之间的优先级是相同的,都是乘法优先于加法。

因此,编译器会先计算 `2 * 4`,得到结果为 8。然后,将结果 8 提升为整数类型,然后再计算 `3 + 8`,得到结果为 11。

所以,表达式 `3 + 2 * 4` 的结果为 11。","
 在C语言中,如果二元运算符的两个操作数具有不同的类型,那么在进行运算之前先____,运算的结果为____类型。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
最后,在任何表达式中都可以使用一个称为强制类型转换的一元运算符强制进行显式类型转换。在下列语句中,表达式将按照上述转换规则被转换为类型名指定的类型：(类型名) 表达式我们可以这样来理解强制类型转换的准确含义：在上述语句中,表达式首先被赋值给类型名 指定的类型的某个变量,然后再用该变量替换上述整条语句。例如,库函数  sqrt 的参数为 double 类型, 如果处理不当,结果可能会无意义（sqrt 在<math.h>中声明）。因此,如果 n 是整数,可以使用 sqrt((double)n)在把 n 传递给函数 sqrt 之前先将其转换为 double 类型。注意,强制类型转换只是生成一 个指定类型的 n 的值, n 本身的值并没有改变。强制类型转换运算符与其它一元运算符具有相 同的优先级,表 2-1 对运算符优先级进行了总结。",在任何表达式中都可以使用一个称为____转换的一元运算符强制进行显式类型转换,进行说明。,"
 在任何表达式中都可以使用一个称为____转换的一元运算符强制进行显式类型",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在通常情况下, 参数是通过函数原型声明的。这样,当函数被调用时,声明将对参数进行自动强制转换。","在通常情况下,参数是通过函数原型声明的。这样,当函数被调用时,声明将对参数进行自动__________。","
 在通常情况下, 参数是通过函数原型声明的。这样,当函数被调用时,声明将对参数进行自动强制转换。

填空题:

在通常情况下, ______ 参数是通过函数原型声明的。这样,当函数被调用时,声明将对参数进行自动强制转换。

答案:参数","
 在通常情况下,参数是通过函数原型声明的。这样,当函数被调用时,声明将对参数进行自动__________。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
标准库中包含一个可移植的实现伪随机数发生器的函数 rand 以及一个初始化种子数的 函数 srand。前一个函数 rand 使用了强制类型转换。",标准库中包含一个可移植的实现伪随机数发生器的函数 ______ 以及一个初始化种子数的 函数 ______。 ______使用了强制类型转换。,"
 题目：标准库中包含一个可移植的实现伪随机数发生器的函数____和一个初始化种子数的函数____。前一个函数____使用了强制类型转换。

答案：rand, srand, rand","
 标准库中包含一个可移植的实现伪随机数发生器的函数 ______ 以及一个初始化种子数的 函数 ______。 ______使用了强制类型转换。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
++与--这两个运算符特殊的地方主要表现在：  它们既可以用作前缀运算符（用在变量前 面,如 ++n）。也可以用作后缀运算符（用在变量后面,如 n++）。在这两种情况下,  其效果都 是将变量 n 的值加 1。但是,它们之间有一点不同。表达式++n 先将 n 的值递增 1,然后再使 用变量 n 的值,而表达式 n++则是先使用变量 n 的值,然后再将 n 的值递增 1。","表达式++n 先____,然后再____,而表达式 n++则是先____,然后再____。","
 请根据以下文本内容出一道填空题:

++与--这两个运算符特殊的地方主要表现在:  它们既可以用作前缀运算符(用在变量前面,如 ++n),也可以用作后缀运算符(用在变量后面,如 n++)。在这两种情况下,它们的效果都是将变量n的值加1。但是,它们之间有一点不同。表达式++n 先将n的值递增1,然后再使用变量n的值,而表达式n++则是先使用变量n的值,然后再将n的值递增1。

填空题:

++与--这两个运算符特殊的地方主要表现在:  它们既可以用作前缀运算符(用在变量前面,如 ++n),也可以用作后缀运算符(用在变量后面,如 n++)。在这两种情况下,它们的效果都是将变量n的值加1。但是,它们之间有一点不同。表达式++n 先将n的值递增1,然后再使用变量n的值,而表达式n++则是先使用变量n的值,然后再将n的值递增1。

空格:  
+  
-","
 表达式++n 先____,然后再____,而表达式 n++则是先____,然后再____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在不需要使用任何具体值且仅需要递增变量的情况下,前缀方式和后缀方式的效果相同。","在____情况下,前缀方式和后缀方式的效果相同。","
 请根据以下文本内容出一道填空题:

在不需要使用任何具体值且仅需要递增变量的情况下,前缀方式和后缀方式的效果相同。

问题:以下哪个选项可以替换掉空格,使得句子意思完整且正确?

A. 前缀和
B. 后缀和
C. 前缀求和
D. 后缀求和","
 在____情况下,前缀方式和后缀方式的效果相同。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
C 语言提供了 6 个位操作运算符。这些运算符只能作用于整型操作数, 即只能作用于带符 号或无符号 char、short、int、long 类型",C 语言提供了 ___ 个位操作运算符。这些运算符只能作用于 ___ 操作数。,"
 C语言提供了6个位操作运算符，这些运算符只能作用于整型操作数，即只能作用于带符号或无符号char、short、int、long类型。

题目：下面哪个选项是正确的 C 语言位操作运算符？

A. &
B. |
C. ^
D. ~","
 C 语言提供了 ___ 个位操作运算符。这些运算符只能作用于 ___ 操作数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数调用、嵌套赋值语句、自增与自减运算符都有可能产生'副作用 '——在对表达式  求值的同时,修改了某些变量的值。在有副作用影响的表达式中,其执行结果同表达式中的  变量被修改的顺序之间存在着微妙的依赖关系","在有副作用影响的表达式中,其执行结果同表达式中的变量被修改的____之间存在着微妙的依赖关系。","
 函数调用、嵌套赋值语句、自增与自减运算符都有可能产生'副作用'——在对表达式求值的同时,修改了某些变量的值。在有副作用影响的表达式中,其执行结果同表达式中的变量被修改的顺序之间存在着微妙的依赖关系。

空格处应填入:变量被修改的顺序之间存在着微妙的依赖关系。","
 在有副作用影响的表达式中,其执行结果同表达式中的变量被修改的____之间存在着微妙的依赖关系。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
数组下标 i 是引用旧值还是引用新值？对这种情况编译器的解释可能不同,并因此 产生不同的结果。C 语言标准对大多数这类问题有意未作具体规定。表达式何时会产生这种副 作用（对变量赋值）,将由编译器决定, 因为最佳的求值顺序同机器结构有很大关系。","表达式何时会产生这种副作用,将由编译器决定,因为最佳的求值顺序同____有很大关系。","
 数组下标 i 是引用旧值还是引用新值？对这种情况编译器的解释可能不同，并因此产生不同的结果。C 语言标准对大多数这类问题有意未作具体规定。表达式何时会产生这种副作用（对变量赋值），将由编译器决定，因为最佳的求值顺序同机器结构有很大关系。

答案：对变量赋值","
 表达式何时会产生这种副作用,将由编译器决定,因为最佳的求值顺序同____有很大关系。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在 UNIX 操作系统中,首先必须在某个文件中建立这个源程序,并以' .c'作为文件的扩展名,例如 hello.c,然 后再通过下列命令进行编译：cc hello.c如果源程序没有什么错误（例如漏掉字符或拼错字符）,编译过程将顺利进行,并生成一个可 执行文件 a.out。然后,我们输入：a.out即可运行 a.out,打印出下列信息：hello, world","在 UNIX 操作系统中,首先必须在某个文件中建立这个源程序,并以____作为文件的扩展名","
 在 UNIX 操作系统中,首先必须在某个文件中建立这个源程序,并以'.c'作为文件的扩展名,例如 hello.c,然 后再通过下列命令进行编译： **cc hello.c** 如果源程序没有什么错误(例如漏掉字符或拼错字符),编译过程将顺利进行,并生成一个可 执行文件 a.out。然后,我们输入： **a.out** 即可运行 a.out,打印出下列信息： **hello, world**","
 在 UNIX 操作系统中,首先必须在某个文件中建立这个源程序,并以____作为文件的扩展名",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
 一个 C 语言程序,无论其大小如何,都是由函数和变量组成 的。函数中包含一些语句,以指定所要执行的计算操作；变量则用于存储计算过程中使用的 值。 C 语言中的函数类似于 Fortran 语言中的子程序和函数,  与 Pascal 语言中的过程和函数也 很类似。","一个 C 语言程序,无论其大小如何,都是由____和____组成的。","
 下面是一个关于C语言程序的填空题：

一个 C 语言程序,无论其大小如何,都是由函数和变量组成的。函数中包含一些语句,以指定所要执行的计算操作;变量则用于存储计算过程中使用的 值。C 语言中的函数类似于 Fortran 语言中的子程序和函数, 与 Pascal 语言中的过程和函数也 很类似。

填空题：

C 语言中的函数类似于 Fortran 语言中的________和函数, 与 Pascal 语言中的________也很类似。

答案：子程序 和 过程","
 一个 C 语言程序,无论其大小如何,都是由____和____组成的。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数之间进行数据交换的一种方法是调用函数向被调用函数提供一个值（称为参数）列 表。函数名后面的一对圆括号将参数列表括起来。调用函数时, 只需要使用函数名加上用圆括号括起来的参数表即可。","函数之间进行数据交换的一种方法是调用函数向被调用函数提供一个值,称为____。","
 以下是一个关于C语言的填空题：

函数之间进行数据交换的一种方法是调用函数向被调用函数提供一个值（称为参数）______。函数名后面的一对圆括号将参数列表括起来。调用函数时，只需要使用函数名加上用圆括号括起来的参数表即可。

答案：值（称为参数）","
 函数之间进行数据交换的一种方法是调用函数向被调用函数提供一个值,称为____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在 C 语言中,所有变量都必须先声明后使用。声明通常放在函数起始处,在任何可执行 语句之前。声明用于说明变量的属性, 它由一个类型名和一个变量表组成"," 在 C 语言中,所有变量都必须先____后使用。声明通常放在函数起始处,在任何可执行语句之前。","
 在 C 语言中,所有变量都必须先声明后使用。声明通常放在函数起始处,在任何可执行语句之前。声明用于说明变量的属性,它由一个类型名和一个变量表组成。","
  在 C 语言中,所有变量都必须先____后使用。声明通常放在函数起始处,在任何可执行语句之前。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
int 与 float 类型的取值范围取决于具体的机器。对于 int 类型, 通常为 16 位,其取值范围在-32768~32767 之间,也有用 32 位表示的 int 类型。  float 类  型通常是 32 位,它至少有 6 位有效数字,取值范围一般在 10-38~1038 之间。"," 对于 int 类型,通常为 ____ 位,其取值范围在 ____ 之间","
 以下哪个选项正确地描述了 int 和 float 类型的取值范围？

A. int 类型的取值范围为 -32768 到 32767，有效数字为 32 位
B. float 类型的取值范围为 10 到 38000，有效数字为 6 位
C. int 类型的取值范围为 -32768 到 32767，有效数字为 16 位
D. float 类型的取值范围为 -10000 到 10000，有效数字为 32 位","
  对于 int 类型,通常为 ____ 位,其取值范围在 ____ 之间",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
while 循环语句的 执行 方式是 这样 的：  首先测 试圆括 号中 的条件 ；如 果条 件为真 (fahr<=upper),则执行循环体（括在花括号中的 3 条语句）；然后再重新测试圆括号中的 条件,如果为真,则再次执行循环体；当圆括号中的条件测试结果为假(fahr>upper)时,  循环结束,  并继续执行跟在 while 循环语句之后的下一条语句。在本程序中, 循环语句后没 有其它语句,因此整个程序的执行终止。"," while 循环语句的执行方式中,首先测试圆括号中的条件；如果____,则执行循环体。当____时,循环结束。","
 请根据以下文本内容出一道填空题:

while 循环语句的 执行 方式是 这样 的：  首先测 试圆括號中 的条件 ;如 果条 件为真 (fahr<=upper),则执行循环体（括在花括号中的 3 条语句）；然后再重新测试圆括号中的 条件,如果为真,则再次执行循环体；当圆括号中的条件测试结果为假(fahr>upper)时,  循环结束,  并继续执行跟在 while 循环语句之后的下一条语句。在本程序中, 循环语句后没 有其它语句,因此整个程序的执行终止。

请从以下选项中选择正确的答案：

1. 如果圆括号中的条件为真 (fahr<=upper)，则执行循环体（括在花括号中的 3 条语句）。
2. 如果圆括号中的条件为假 (fahr>upper)，则执行循环体（括在花括号中的 3 条语句）。
3. 循环体（括在花括号中的 3 条语句）不会执行。

正确答案：1. 如果圆括号中的条件为真 (fahr<=upper)，则执行循环体（括在花括号中的 3 条语句）。","
  while 循环语句的执行方式中,首先测试圆括号中的条件；如果____,则执行循环体。当____时,循环结束。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
ANSI 标准定义了 printf 函数的行为, 因此,对每个符合该标准的 编译器和库来说,该函数的属性都是相同的。"," ANSI 标准定义了 printf 函数的行为, 因此,对每个符合该标准的 编译器和库来说,该函数的____都是相同的。","
 以下哪个选项是正确的?

```c
printf 函数的行为是由 ANSI 标准定义的,因此在符合该标准的编译器和库中,该函数的属性都是相同的。
```

选项:

A. 对,这是正确的。
B. 错误,因为不同编译器和库可能对 printf 函数的行为有不同的实现。
C. 部分正确,但需要补充的是,该函数的输出内容和默认值可能因编译器和库而异。
D. 没有选项是正确的。","
  ANSI 标准定义了 printf 函数的行为, 因此,对每个符合该标准的 编译器和库来说,该函数的____都是相同的。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
 scanf 函数类似于 printf 函数, 但它用于读输 入数据而不是写输出数据。"," scanf 函数用于____,printf 函数用于____。","
 请从以下选项中选择正确的答案，并用C语言代码完成填空题。

选项：
A. scanf(""%d"", &a);
B. printf(""The value of a is: %d"", a);
C. scanf(""%d"", a);
D. printf(""%d"", a);

题目：scanf 函数类似于 printf 函数, 但它用于读输 入数据而不是写输出数据。请从给定的选项中选择正确的选项，并用 C 语言代码完成填空题。

正确答案：________","
  scanf 函数用于____,printf 函数用于____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
如果在 printf 语句的第一个参数的 %d 中指明打印宽度,则打印的数字会在打印区域内右对齐。"," 如果在 printf 语句中____,则打印的数字会在打印区域内右对齐。","
 以下是一个与此相关的填空题：

在 C 语言中，如果在 `printf` 语句的第一个参数的 `%d` 中指明打印宽度，那么打印的数字会在打印区域内右对齐。错误的表述是______。

正确答案：左对齐","
  如果在 printf 语句中____,则打印的数字会在打印区域内右对齐。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
如果某个算术运算符的所有操作数均为整型, 则执行整型运算。但是,如果某个算术运算符有一个浮点型操作数和一个整型操作数,则在开始运算之前整型操作数将会被转换为浮  点型。"," 如果某个算术运算符的所有操作数均为整型,则执行____。","
 下面是一个可能的填空题:

给定一个算术运算符为一个字符串,其中包含两个操作数,一个是浮点型操作数,一个是整型操作数,请根据题目的描述,输出该算术运算符执行后的结果。

例如:

运算符: ""+ 3.14""

输出结果: 

答案: 3.14 + 3","
  如果某个算术运算符的所有操作数均为整型,则执行____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
printf 中的转换说明%3.0f 表明待打印的浮点数（即 fahr）至少占 3 个字符宽, 且不 带小数点和小数部分；  %6.1f 表明另一个待打印的数（celsius）至少占 6 个字符宽,  且小 数点后面有 1 位数字。", printf 中的转换说明%3.0f 表明待打印的浮点数（即 fahr）至少占____。,"
 请根据以下文本内容出一道填空题：

printf 中的转换说明%3.0f 表明待打印的浮点数（即 fahrenheit）至少占 3 个字符宽, 且不带小数点和小数部分；  %6.1f 表明另一个待打印的数（celsius）至少占 6 个字符宽,  且小 数点后面有 1 位数字。

【问题】
%3.0f 的含义是：

【答案】
%3.0f 的含义是：

待打印的浮点数（即 fahrenheit）至少占 3 个字符宽, 且不带小数点和小数部分。","
  printf 中的转换说明%3.0f 表明待打印的浮点数（即 fahr）至少占____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
格式说明可以省略宽度与精度,例如,%6f 表示待打印的浮点数至少有 6 个字符宽；%.2f 指定待打印的浮点数的小数点后有两位小数,但宽度没有限制；  %f 则仅仅要求按照浮点数打印该数。", %6f 表示待打印的浮点数至少有____字符宽。,"
 以下哪个格式可以省略宽度与精度？

A. %6f
B. %%.2f
C. %f","
  %6f 表示待打印的浮点数至少有____字符宽。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
%o 表示八进制数；  %x 表示十六进制数；  %c 表示字符；  %s 表示字符串；  %%表示百分号（%）本身。", ____表示八进制数； ____表示十六进制数；____表示字符； ____表示字符串；____表示百分号（%）本身。,"
 请从以下选项中选择正确的表示方式：

A. %o
B. %x
C. %c
D. %s

选项描述：
A. 表示八进制数
B. 表示十六进制数
C. 表示字符
D. 表示字符串","
  ____表示八进制数； ____表示十六进制数；____表示字符； ____表示字符串；____表示百分号（%）本身。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在实际编程过程中, 可以选择 whi1e 与 for 中的任意一种循环语句, 主要要看使用哪一 种更清晰。  for 语句比较适合初始化和增加步长都是单条语句并且逻辑相关的情形,因为它 将循环控制语句集中放在一起,且比 while 语句更紧凑。"," 在实际编程过程中, 可以选择 whi1e 与 for 中的任意一种循环语句, 主要要看使用哪一 种更清晰。                    ____比较适合初始化和增加步长都是单条语句并且逻辑相关的情形","
 在实际编程过程中, 可以选择 whi1e 与 for 中的任意一种循环语句, 主要要看使用哪一 种更清晰。  for 语句比较适合初始化和增加步长都是单条语句并且逻辑相关的情形,因为它 将循环控制语句集中放在一起,且比 while 语句更紧凑。

空格处应填入:for。","
  在实际编程过程中, 可以选择 whi1e 与 for 中的任意一种循环语句, 主要要看使用哪一 种更清晰。                      ____比较适合初始化和增加步长都是单条语句并且逻辑相关的情形",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
符号常量名通常用大写字母拼写,这样可以很容易与用小写字母拼写的变量名相区别。", 符号常量名通常用____拼写,"
 符号常量名通常用大写字母拼写,这样可以很容易与用小写字母拼写的变量名相区别。

题目:在C语言中,符号常量名______。

选项:

A. 可以用小写字母拼写
B. 必须用大写字母拼写
C. 可以用大写字母或小写字母拼写
D. 必须用小写字母拼写","
  符号常量名通常用____拼写",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
标准库提供的输入输出模型非常简单。无论文本从何处输入,输出到何处,其输入 输出都是按照字符流的方式处理。文本流是由多行字符构成的字符序列,而每行字符则由 0 个或多个字符组成,行末是一个换行符。标准库负责使每个输入输出流都能够遵守这一模 型。使用标准库的 C 语言程序员不必关心在程序之外这些行是如何表示的。"," 标准库提供的输入输出模型非常简单。无论文本从何处输入,输出到何处,其输入输出都是按照____的方式处理。","
 以下哪个选项能够最准确地描述标准库提供的输入输出模型?

A. 文本输入输出按照字符流的方式处理,每行由0个或多个字符组成,行末是一个换行符。
B. 标准库负责使每个输入输出流都能够遵守这一模式,但不必关心在程序之外这些行是如何表示的。
C. 文本流是由多行字符构成的字符序列,而每行字符则由0个或多个字符组成,行末是一个换行符,但标准库不负责表示这些行。
D. 标准库提供的输入输出模型非常复杂,需要程序员关心每行字符是如何表示的。","
  标准库提供的输入输出模型非常简单。无论文本从何处输入,输出到何处,其输入输出都是按照____的方式处理。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
每次调用时, getchar 函数从文本流中读入下一个输入字符, 并将其作为结果值返回。也就是说,  在执行语句c = getchar()    之后,变量 c 中将包含输入流中的下一个字符。这种字符通常是通过键盘输入的。"," 每次调用时, getchar 函数从文本流中读入____。","
 getchar()函数从文本流中读入下一个输入字符,并将其作为结果值返回。在执行语句c = getchar()之后,变量c 中将包含输入流中的下一个字符,这个字符通常是通过键盘输入的。因此,getchar()是用来获取输入流中下一个字符的函数。","
  每次调用时, getchar 函数从文本流中读入____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
字符在键盘、屏幕或其它的任何地方无论以什么形式表现,它在机器内部都是以位模式 存储的。 char 类型专门用于存储这种字符型数据,  当然任何整型（int）也可以用于存储字 符型数据。因为某些潜在的重要原因, 我们在此使用 int 类型。"," 字符在键盘、屏幕或其它的任何地方无论以什么形式表现,它在机器内部都是以____存储的。","
 以下哪个选项是正确的？

A. 字符在机器内部以位模式存储。
B. char 类型用于存储整型数据。
C. int 类型专门用于存储字符型数据。
D. 任何整型（int）都可以用于存储字符型数据。","
  字符在键盘、屏幕或其它的任何地方无论以什么形式表现,它在机器内部都是以____存储的。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在没有输入时, getchar 函数将返回一个特殊值, 这个特殊值与任何实际字符都不同。这个  值称为 EOF（end of file,文件结束）。我们在声明变量 c 的时候,必须让它大到足以存  放 getchar 函数返回的任何值。这里之所以不把 c 声明成 char 类型, 是因为它必须足够大, 除了能存储任何可能的字符外还要能存储文件结束符 EOF。因此, 我们将 c 声明成 int 类型。"," 在没有输入时, getchar 函数将返回一个特殊值, 这个特殊值与任何实际字符都不同。这个值称为 ____。","
 下面是针对上述文本内容的填空题：

在没有输入时, getchar 函数将返回一个特殊值, 这个特殊值与任何实际字符都不同。这个值称为 EOF（______）。我们在声明变量 c 的时候,必须让它大到足以存放 getchar 函数返回的任何值。这里之所以不把 c 声明成 char 类型, 是因为它必须足够大, 除了能存储任何可能的字符外还要能存储文件结束符 EOF。因此, 我们将 c 声明成 int 类型。","
  在没有输入时, getchar 函数将返回一个特殊值, 这个特殊值与任何实际字符都不同。这个值称为 ____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
++与--这  两个运算符既可以作为前缀运算符（如++nc）,也可以作为后缀运算符（如 nc++）"," ++与--这  两个运算符既可以作为 ____ 运算符,也可以作为____ 运算符。","
 请根据以下文本内容出一道填空题:

++与--这  两个运算符既可以作为前缀运算符(如++nc),也可以作为后缀运算符(如 nc++).

空格处应填入什么?

答案:

这两个运算符既可以作为前缀运算符(如++nc),也可以作为后缀运算符(如 nc++).

空格处应填入""或""(OR)。","
  ++与--这  两个运算符既可以作为____运算符,也可以作为____运算符。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
该字符计数程序使用 long 类型的变量存放计数值,而没有使用 int 类型的变量。long 整型数（长整型）至少要占用 32 位存储单元。在某些机器上 int 与 long 类型的长度相同, 但在一些机器上, int 类型的值可能只有 16 位存储单元的长度（最大值为 32767）,这样,相 当小的输入都可能使 int 类型的计数变量溢出。转换说明%ld 告诉 printf 函数其对应的参 数是 long 整型。"," long 整型数（长整型）至少要占用  ____ 存储单元。在某些机器上 int 与 long 类型的长度相同, 但在一些机器上, int 类型的值可能只有 ____ 存储单元的长度。","
 下面是针对该文本内容的填空题：

在某些机器上,int类型的值可能只有16位存储单元的长度（最大值为____）。这样，相当小的输入都可能使int类型的计数变量溢出。","
  long 整型数（长整型）至少要占用  ____ 存储单元。在某些机器上 int 与 long 类型的长度相同, 但在一些机器上, int 类型的值可能只有 ____ 存储单元的长度。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
双等于号==是 C 语言中表示'等于'关系的运算符（类似于 Pascal 中的单等于号=及 Fortran 中的.EQ.）。由于 C 语言将单等于号=作为赋值运算符,因此使用双等于号==表示相等的逻辑 关系,  以示区分。"," C 语言中表示相等的逻辑 关系的运算符是  ____,作为赋值运算符的是____ 。","
 请根据以下文本内容出一道填空题:

双等于号==是 C 语言中表示'等于'关系的运算符（类似于 Pascal 中的单等于号=及 Fortran 中的.EQ.）。由于 C 语言将单等于号=作为赋值运算符,因此使用双等于号==表示相等的逻辑 关系,  以示区分。

题目:在 C 语言中,用于表示“等于”关系的运算符是____。

答案:双等于号==","
  C 语言中表示相等的逻辑 关系的运算符是  ____,作为赋值运算符的是____ 。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
单引号中的字符表示一个整型值,该值等于此字符在机器字符集中对应的数值,我们称  之为字符常量。但是, 它只不过是小的整型数的另一种写法而已。"," 单引号中的字符表示一个整型值,该值等于此字符在机器字符集中对应的数值,我们称之为____ 。","
 单引号中的字符表示一个整型值,该值等于此字符在机器字符集中对应的数值,我们称它为____常量。但是,它只不过是小的整型数的另一种写法而已。","
  单引号中的字符表示一个整型值,该值等于此字符在机器字符集中对应的数值,我们称之为____ 。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
nl = nw = nc = 0;将把其中的 3 个变量 nl、nw 与 nc 都设置为 0。这种用法很常见,但要注意这样一个事实： 在兼有值与赋值两种功能的表达式中, 赋值结合次序是由右至左。"," 在兼有值与赋值两种功能的表达式中, 赋值结合次序是____ 。","
 nl = nw = nc = 0;将把其中的______、______与______都设置为0。这种用法很常见,但要注意这样一个事实： 在兼有值与赋值两种功能的表达式中, 赋值结合次序是由右至左。

答案：nl、nw、nc","
  在兼有值与赋值两种功能的表达式中, 赋值结合次序是____ 。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
运算符||代表 OR（逻辑或）,所以下列语句 if (c == ' ' || c== 'n' || c == 't')的意义是'如果 c 是空格,    或 c 是换行符,或 c 是制表符'（前面讲过,  转义字符序列t 是 制表符的可见表示形式）。", 语句 if (c == ' ' || c== 'n' || c == 't')的意义是____ 。,"
 请根据以下文本内容出一道填空题:

运算符||代表 OR（逻辑或）,所以下列语句 if (c =='' || c== 'n' || c == 't')的意义是'如果 c 是空格,    或 c 是换行符,或 c 是制表符'（前面讲过,  转义字符序列t 是 制表符的可见表示形式）。

题目：下列语句 if (c =='' || c== 'n' || c == 't') 的意义是 '如果 c 是空格, 或者 c 是换行符, 或者 c 是制表符'（前面讲过, 转义字符序列t 是 制表符的可见表示形式）。

填空：if (c =='' \|\| c== 'n' \|\| c == 't') 的意义是 '如果 c 是空格, 或者 c 是换行符, 或者 c 是制表符'（前面讲过, 转义字符序列t 是 制表符的可见表示形式）。","
  语句 if (c =='' || c== 'n' || c == 't')的意义是____ 。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
运算符 &&代表 AND（逻辑与）,它仅比||高一个优先级。"," 运算符 &&代表____ ,它优先级比 || ____。","
 运算符 && 代表 AND（逻辑与），它仅比 || 高一个优先级。

空格处应填：AND。","
  运算符 &&代表____,它优先级比 || ____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
if-else 中的两条语句有且仅有一条语句被执行。如果表达式的值为真,  则执行 语句 1,否则执行语句 2。这两条语句都既可以是单条语句, 也可以是括在花括号内的语句序 列。在单词计数程序中, else 之后的语句仍是一个 if 语句,该 if 语句控制了包含在花括 号内的两条语句。", if-else 中的两条语句有____被执行。,"
 以下是一道根据所给文本的填空题:

在 if-else 语句中,如果表达式的值为真,则执行语句1,否则执行语句2。这两条语句都既可以是一个单条语句,也可以是括在花括号内的语句序列。在单词计数程序中,else 之后的语句仍是一个 if 语句,该 if 语句控制了包含在花括号内的两条语句。

空格处应填:else","
  if-else 中的两条语句有____被执行。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在 C 语言中, 数组下标总是从 0 开始,  因此该数组的 10 个元素分别为 ndigit[0]、ndiglt[1]、…、ndigit[9],这可以通过初始 化和打印数组的两个 for 循环语句反映出来。"," 在 C 语言中, 数组下标总是从____开始。","
 在 C 语言中, 数组下标总是从 0 开始, 因此该数组的 10 个元素分别为 ndigit[0]、ndiglt[1]、…、ndigit[9],这可以通过初始 化和打印数组的两个 for 循环语句反映出来。

填空题:

在 C 语言中, 数组下标总是从 0 开始, 因此该数组的 10 个元素分别为______、______、……、______。

答案:ndigit[0]、ndigit[1]、…、ndigit[9]。","
  在 C 语言中, 数组下标总是从____开始。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
由定义可知,char 类型的字符是小整型, 因此 char 类型的变量和常量在算术表达式中 等价于 int 类型的变量和常量。这样做既自然又方便,例如,  c - '0'是一个整型表达式, 如果存储在 c 中的字符是'0'~'9',其值将为 0~9,因此可以充当数组 ndigit 的合法下 标。"," 由定义可知,char 类型的字符是____型,因此 char 类型的变量和常量在算术表达式中 等价于____类型的变量和常量。","
 以下哪个选项是正确的?

```c
c - '0' 是一个整型表达式。
c + '0' 是一个整型表达式。
c * '0' 是一个整型表达式。
c / '0' 是一个整型表达式。
```

对于给定的文本，正确的选项是：

```c
c - '0' 是一个整型表达式。
```","
  由定义可知,char 类型的字符是____型,因此 char 类型的变量和常量在算术表达式中 等价于____类型的变量和常量。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
switch 语句提供了编写多路分支程序的另一种方式, 它特别适合于判 定某个整型或字符表达式是否与一个常量集合中的某个元素相匹配的情况。", switch 语句提供了编写____的方式。,"
 下面是一个关于switch语句的填空题:

switch (expression) {
    case constant1:
        // code to be executed if expression is equal to constant1
        break;
    case constant2:
        // code to be executed if expression is equal to constant2
        break;
    //...
    default:
        // code to be executed if expression doesn't match any constants
}","
  switch 语句提供了编写____的方式。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数定义可以以任意次序出现在一个源文件或多个源文件中, 但同一函数不能分割存放 在多个文件中。如果源程序分散在多个文件中,那么, 在编译和加载时,就需要做更多的工 作,但这是操作系统的原因, 并不是语言的属性决定的。我们暂且假定将 main 和 power 这 两个函数放在同一文件中,这样前面所学的有关运行 C 语言程序的知识仍然有效。"," 函数定义可以以任意次序出现在____中, 但同一函数不能____。","
 函数定义可以以任意次序出现在一个源文件或多个源文件中, 但同一函数不能分割存放 在多个文件中。如果源程序分散在多个文件中,那么, 在编译和加载时,就需要做更多的 工作,但这是操作系统的原因, 并不是语言的属性决定的。我们暂且假定将 main 和 power 这 两个函数放在同一文件中, 这样前面所学的有关运行 C 语言程序的知识仍然有效。

空格处应填入:可以。","
  函数定义可以以任意次序出现在____中, 但同一函数不能____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
我们通常把函数定义中圆括号内列表中出现的变量称为形式参数,而把函数调用中与形 式参数对应的值称为实际参数。"," 我们通常把函数定义中圆括号内列表中出现的变量称为____,而把函数调用中与形 式参数对应的值称为。","
 以下是一道填空题:

形式参数是函数定义中圆括号内列表中出现的变量,而实际参数是函数调用中与形式参数对应的值。","
  我们通常把函数定义中圆括号内列表中出现的变量称为____,而把函数调用中与形 式参数对应的值称为。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数不一定都有返回值。不带表达式的 return 语句将把控制权返回给调用者, 但不返回有 用的值。这等同于在到达函数的右终结花括号时,函数就'到达了尽头'。主调函数也可以忽 略函数返回的值。", 函数不一定都有返回值。不带表达式的 return 语句将把____返回给调用者。,"
 以下哪个选项描述了不带表达式的 `return` 语句的作用？

A. 它将控制权返回给调用者，但不返回任何值
B. 它将控制权返回给调用者，并返回一个有用的值
C. 它不会返回任何值，但不会结束函数
D. 它将返回一个有用的值，但不会结束函数","
  函数不一定都有返回值。不带表达式的 return 语句将把____返回给调用者。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
读者可能已经注意到,main 函数的末尾有一个 return 语句。由于 main 本身也是函数, 因此也可以向其调用者返回一个值,该调用者实际上就是程序的执行环境。 一般来说,  返回  值为 0 表示正常终止,返回值为非 0 表示出现异常情况或出错结束条件。为简洁起见,前面  的 main 函数都省略了 return 语句,但我们将在以后的 main 函数中包含 return 语句,   以提醒大家注意,程序还要向其执行环境返回状态。","  一般来说,main 函数返回值为 ____表示正常终止,返回值为____表示出现异常情况或出错结束条件。","
 在这段文本中，填空题可以填写为：“返回值为0表示正常终止，返回值为非0表示出现异常情况或出错结束条件。”","
   一般来说,main 函数返回值为 ____表示正常终止,返回值为____表示出现异常情况或出错结束条件。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
出现在 main 函数之前的声明语句 int power(int m, int n);表明 power 函数有两个 int 类型的参数,并返回一个 int 类型的值。这种声明称为函数原 型,它必须与 power 函数的定义和用法一致。如果函数的定义、用法与函数原型不一致,将 出现错误。",  出现在 main 函数之前的声明语句称为____。,"
 下面是一道填空题:

出现在 main 函数之前的声明语句 int power(int m, int n);表明 power 函数有两个 int 类型的参数,并返回一个 int 类型的值。这种声明称为函数原型,它必须与 power 函数的定义和用法一致。如果函数的定义、用法与函数原型不一致,将 出现错误。

填空题:

int power(int m, int n); 

在这里,应该填入与函数原型一致的声明。例如:

int power(int m, int n) {
    // function implementation
    return result;
}","
   出现在 main 函数之前的声明语句称为____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数原型与函数声明中参数名不要求相同。事实上,函数原型中的参数名是可选的,这 样上面的函数原型也可以写成以下形式  int power(int, int);但是,合适的参数名能够起到很好的说明性作用,因此我们在函数原型中总是指明参数 名。",  函数原型与函数声明中参数名____。,"
 题目:下面哪个选项是正确的 C 语言函数原型?

A. power(int, int);
B. power(int);
C. power(int, int);
D. power(int,);","
   函数原型与函数声明中参数名____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在 ANSIC 中定义的函数原型语法中,编译器可以很容易检测出函数调用中参数数目和类 型方面的错误。 ANSI C 仍然支持旧式的函数声明与定义,这样至少可以有一个过渡阶段。但 我们还是强烈建议读者：在使用新式的编译器时,最好使用新式的函数原型声明方式。","  在 ANSIC 中定义的函数原型语法中,编译器可以很容易检测出____方面的错误。","
 在 ANSIC 中定义的函数原型语法中,编译器可以很容易地检测出函数调用中参数数目和类型方面的错误。ANSI C 仍然支持旧式的函数声明与定义,这样至少可以有一个过渡阶段。但我們还是强烈建议读者:在使用新式的编译器时,最好使用新式的函数原型声明方式。

填空题:

在 ANSIC 中定义的函数原型语法中,编译器可以很容易地检测出函数调用中参数数目和类型方面的错误。ANSI C 仍然支持旧式的函数声明与定义,这样至少可以有一个过渡阶段。但我们还是强烈建议读者:在使用新式的编译器时,最好使用新式的函数原型声明方式。

空格处应填入:prototype。","
   在 ANSIC 中定义的函数原型语法中,编译器可以很容易检测出____方面的错误。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在 C 语言中,所有函数参数都是'通过值'传递的。也就是说, 传递给被调用函数的  参数值存放在临时变量中,而不是存放在原来的变量中。这与其它某些语言是不同的,比如, Fortran 等语言是'通过引用调用',Pascal 则采用 var 参数的方式,在这些语言中,被调用的函数必须访问原始参数,而不是访问参数的本地副本。","  在 C 语言中,传递给被调用函数的  参数值存放在____中。","
 在 C 语言中,所有函数参数都是'通过值'传递的。也就是说,传递给被调用函数的参数值存放在临时变量中,而不是存放在原来的变量中。这与其它某些语言是不同的,比如, Fortran 等语言是'通过引用调用',Pascal 则采用 var 参数的方式,在这些语言中,被调用的函数必须访问原始参数,而不是访问参数的本地副本。

填空题:在 C 语言中,函数参数的传递方式是____值传递。","
   在 C 语言中,传递给被调用函数的  参数值存放在____中。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
最主要的区别在于, 在 C 语言中, 被调用函数不能直接修改主调函数中变量的值,而只 能修改其私有的临时副本的值。","  在 C 语言中, 被调用函数不能直接修改____的值,而只 能修改其____的值。","
 在 C 语言中,被调用函数不能直接修改主调函数中变量的值,而只能修改其私有的临时副本的值。","
   在 C 语言中, 被调用函数不能直接修改____的值,而只 能修改其____的值。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
必要时, 也可以让函数能够修改主调函数中的变量。这种情况下,调用者需要向被调用函数提供待设置值的变量的地址（从技术角度看,地址就是指向变量的指针）,而被调用函数  则需要将对应的参数声明为指针类型,并通过它间接访问变量。","  为了让函数能够修改主调函数中的变量, 调用者需要向被调用函数提供待____。","
 以下是一道填空题:

在C语言中,当需要让函数修改主调函数中的变量时,调用者需要向被调用函数提供待设置值的变量的____(地址),从技术角度看,地址就是指向变量的指针。而被调用函数则需要将对应的参数声明为指针类型,并通过它间接访问变量。","
   为了让函数能够修改主调函数中的变量, 调用者需要向被调用函数提供待设置值的变量的____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
如果是数组参数,情况就有所不同了。当把数组名用作参数时,传递给函数的值是数组 起始元素的位置或地址——它并不复制数组元素本身。在被调用函数中,可以通过数组下标 访问或修改数组元索的值。","  当把数组名用作参数时,传递给函数的值是____的位置或地址。","
 如果是数组参数,情况就有所不同了。当把数组名用作参数时,传递给函数的值是数组起始元素的位置或地址——它并不复制数组元素本身。在被调用函数中,可以通过数组下标访问或修改数组元索的值。

空格处应填入:数组名","
   当把数组名用作参数时,传递给函数的值是____的位置或地址。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
getline 函数把字符'0'（即空字符,其值为 0）插入到它创建的数组的末尾, 以标记 字符串的结束。这一约定已被 C 语言采用：当在 C 语言程序中出现类似于''hello0 ''的字符串常量时, 它将以字符数组的形式存储,数组的各元素分别存储字符串的各个字符, 并以'0'标志字符串的结束。","  当在 C 语言程序中出现类似于''hello0 ''的字符串常量时, 它将以____的形式存储,并以____标志字符串的结束。","
 下面是一个符合题目要求的 C 语言代码示例：

```c
#include <stdio.h>
#include <string.h>

int main() {
    char str[100];
    printf(""请输入一个字符串（以空字符'0'结尾）："");
    fgets(str, sizeof(str), stdin);
    str[strcspn(str, ""\n"")] = '\0'; // 去掉输入字符串末尾的换行符

    // 插入'0'字符以标记字符串的结束
    str[strlen(str) - 1] = '0';

    printf(""处理后的字符串为：%s\n"", str);
    return 0;
}
```

此代码首先定义了一个字符数组`str`，然后使用`fgets`函数读取用户输入的字符串。接着，使用`strcspn`函数去掉字符串末尾的换行符。最后，将字符串的最后一个元素设置为'0'，以标记字符串的结束。","
   当在 C 语言程序中出现类似于''hello0 ''的字符串常量时, 它将以____的形式存储,并以____标志字符串的结束。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
main 函数中的变量（如 line、longest 等）是 main 函数的私自变量或局部变量。由 于它们是在 main 函数中声明的, 因此其它函数不能直接访问它们。其它函数中声明的变量也 同样如此。例如, getline 函数中声明的变量 i 与 copy 函数中声明的变量 i 没有关系。函 数中的每个局部变量只在函数被调用时存在,在函数执行完毕退出时消失。这也是其它语言通常把这类变量称为自动变最的原因。以后我们使用'自动变量'代表'局部变量'。",  main 函数中的变量是main 函数的____变量。,"
 以下哪个选项是正确的？

A. ""line"" 是 main 函数的私有变量。
B. ""longest"" 是 main 函数的局部变量。
C. ""i"" 是 getline 函数的局部变量。
D. ""i"" 是 copy 函数的局部变量。

正确答案：B. ""longest"" 是 main 函数的局部变量。","
   main 函数中的变量是main 函数的____变量。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
由于自动变量只在函数调用执行期间存在,因此,在函数的两次调用之间,  自动变量不保留前次调用时的赋值, 且在每次进入函数时都要显式为其赋值。如果自动变量没有赋值,  则其中存放的是无效值。","  由于自动变量只在函数调用执行期间存在,在函数的两次调用之间自动变量不保留____。","
 下面是一个关于自动变量的填空题：

由于自动变量只在函数调用执行期间存在，因此，在函数的两次调用之间，自动变量不保留前次调用时的赋值，______. 如果自动变量没有赋值，则其中存放的是无效值。

答案：如果自动变量没有赋值，则其中存放的是无效值。","
   由于自动变量只在函数调用执行期间存在,在函数的两次调用之间自动变量不保留____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
程序语言中的控制流语句用于控制各计算操作执行的次序。在前面的例子中,我们曾经使用了一些最常用的控制流结构。本章将更详细地讲述控制流语句。",  程序语言中的____语句用于控制各计算操作执行的次序。,"
 以下是一道填空题:

在程序语言中,控制流语句用于控制各计算操作执行的次序,包括__________、__________和__________等结构。","
   程序语言中的____语句用于控制各计算操作执行的次序。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在x = 0、i++或这样的表达式之后加上一个分号（；）,它们就变成了 语句。例如：x = 0;i++；printf（...）;在C语言中,分号是语句结束符,而Pascal等语言却把分号用作语句之间的分隔符。","  在C语言中,分号是____,而Pascal等语言却把分号用作____。","
 在上述文本中，空格处应填：printf。

题目：在x = 0、i++或这样的表达式之后加上一个分号（；）,它们就变成了 语句。例如：x = 0;i++；printf（____）;在C语言中,分号是语句结束符,而Pascal等语言却把分号用作语句之间的分隔符。","
   在C语言中,分号是____,而Pascal等语言却把分号用作____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
用一对花括号' {'与' }'把一组声明和语句括在一起就构成了一个复合语句（也叫作 程序块）,复合语句在语法上等价于单条语句。函数体中被花括号括起来的语句便是明显一例。 if、else, while与for之后被花括号括住的多条语句也是类似的例子。（在任何程序块中 都可以声明变量,笫4章将对此进行讨论。）右花括号用于结束程序块,其后不需要分号。",  用一对花括号' {'与' }'把一组声明和语句括在一起就构成了一个____。,"
 以下是一道填空题:

在C语言中,一对花括号' {'和'} '用来表示一个________,它可以包含多条语句,等价于单条语句。在复合语句中,花括号内的语句通常被称为__________。例如,if、else、while和for之后被花括号括住的多条语句被称为__________。","
   用一对花括号' {'与' }'把一组声明和语句括在一起就构成了一个____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
这种if语句序列是编写多路判定最常用的方法。其中的各表 达式将被依次求值,一旦某个表达式结果为真,则执行与之相关的语句,并终止整个语句序 列的执行。同样,其中各语句既可以是单条语句,也可以是用花括号括住的复合语句。",  这种if语句序列是编写____最常用的方法。,"
 以下哪个选项是正确的if语句序列?

A. { if (x > 0) {printf(""x is positive"");} else {printf(""x is not positive"");} }
B. { if (x > 0) {printf(""x is positive"");} else if (x < 0) {printf(""x is not positive"");} }
C. { if (x > 0) {printf(""x is positive"");} else {printf(""x is not positive"");} if (x < 0) {printf(""x is negative"");} }
D. { if (x > 0) {printf(""x is positive"");} else if (x < 0) {printf(""x is not positive"");} if (x == 0) {printf(""x is zero"");} }","
   这种if语句序列是编写____最常用的方法。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在折半查找时,首先将输入值x与数组v的中间元素进行比较。如果x小于中间元素的 值,则在该数组的前半部分查找；否则,在该数组的后半部分查找。在这两种情况下,下一 步都是将x与所选部分的中间元素进行比较。这个过程一直进行下去,直到找到指定的值或 查找范围为空。","  在折半查找时,首先将输入值与数组的____进行比较。","
 以下是一道根据给定文本内容出的填空题:

在折半查找时,首先将输入值 $x$ 与数组 $v$ 的中间元素进行比较。如果 $x$ 小于中间元素的 $值$,则在该数组的前半部分查找;否则,在该数组的后半部分查找。在这两种情况下,下一步都是将 $x$ 与所选部分的中间元素进行比较。这个过程一直进行下去,直到找到指定的值或查找范围为空。

空格中应填入的值为:

$x$ 与所选部分的中间元素进行比较后,如果 $x$ 小于该中间元素的 $值$,则继续在数组的前半部分查找;否则,继续在数组的后半部分查找。这个过程一直进行下去,直到找到指定的值或查找范围为空。","
   在折半查找时,首先将输入值与数组的____进行比较。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
每一个分支都由一个或多个整数值常量或常量表达式标记。如果某个分支与表达式的值匹配, 则从该分支开始执行。各分支表达式必须互不相同。如果没有哪一分支能匹配表达式,则执行标记为default的分支。default分支是可选的。如果没有default分支也没有其它分支与表达式的值匹配,则该switch语句不执行任何动作。各分支及default分支的排列次序是任意的。","  在switch语句中,____执行标记为default的分支。","
 请根据以下文本内容出一道填空题:

每一个分支都由一个或多个整数值常量或常量表达式标记。如果某个分支与表达式的值匹配, 则从该分支开始执行。各分支表达式必须互不相同。如果没有哪一分支能匹配表达式,则执行标记为default的分支。default分支是可选的。如果没有default分支也没有其它分支与表达式的值匹配,则该switch语句不执行任何动作。各分支及default分支的排列次序是任意的。

填空题:

下面哪个分支表达式可以匹配到值10?

A. int x = 10;
B. int x = 20;
C. int x = 30;
D. int x = 40;","
   在switch语句中,____执行标记为default的分支。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
break语句将导致程序的执行立即从switch语句中退出。在switch语句中,case 的作用只是一个标号,因此,某个分支中的代码执行完后,程序将进入下一分支继续执行, 除非在程序中显式地跳转。跳出switch语句最常用的方法是使用break语句与return语 句。break语句还可强制控制从while、for与do循环语句中立即退出,对于这一点,我 们稍后还将做进一步介绍。", 跳出switch语句最常用的方法是____。,"
 break语句将导致程序的执行立即从switch语句中退出。在switch语句中,case 的作用只是一个标号,因此,某个分支中的代码执行完后,程序将进入下一分支继续执行, 除非在程序中显式地跳转。跳出switch语句最常用的方法是使用break语句与return语句。break语句还可强制控制从while、for与do循环语句中立即退出,对于这一点,我们稍后还将做进一步介绍。

填空题:

break语句将导致程序的执行立即从______中退出。在switch语句中,case 的作用只是一个______。除非在程序中显式地______,否则程序将进入下一分支继续执行。","
  跳出switch语句最常用的方法是____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
请根据以下文本内容进行出题：每一个分支都由一个或多个整数值常量或常量表达式标记。如果某个分支与表达式的值匹配, 则从该分支开始执行。各分支表达式必须互不相同。如果没有哪一分支能匹配表达式,则执行标记为default的分支。default分支是可选的。如果没有default分支也没有其它分支与表达式的值匹配,则该switch语句不执行任何动作。各分支及default分支的排列次序是任意的。"," 在switch语句中,如果没有default分支也没有其它分支与表达式的值匹配,则____。","
 请根据以下文本内容完成填空题：每一个分支都由一个或多个整数值常量或常量表达式标记。如果某个分支与表达式的值匹配，则从该分支开始执行。各分支表达式必须互不相同。如果没有哪一分支能匹配表达式，则执行标记为default的分支。default分支是可选的。如果没有default分支也没有其它分支与表达式的值匹配，则该switch语句不执行任何动作。各分支及default分支的排列次序是任意的。

switch（__builtin_popcount（表达式）） {
    case 0:
        // 分支1
        break;
    case 1:
        // 分支2
        break;
    case 2:
        // 分支3
        break;
    //...
    default:
        // default分支
        break;
}","
  在switch语句中,如果没有default分支也没有其它分支与表达式的值匹配,则____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
依次执行各分支的做法有优点也有缺点。好的一面是它可以把若干个分支组合在一起完 成一个任务,如上例中对数字的处理。但是,正常情况下为了防止直接进入下一个分支执行, 每个分支后必须以一个break语句结束。从一个分支直接进入下一个分支执行的做法并不健 全,这样做在程序修改时很容易出错。除了一个计算需要多个标号的情况外,应尽量减少从 一个分支直接进入下一个分支执行这种用法,在不得不使用的情况下应该加上适当的程序注 释。", 依次执行各分支的做法有优点是____。,"
 依次执行各分支的做法有优点也有缺点。好的一面是它可以把若干个分支组合在一起完 成一个任务,如上例中对数字的处理。但是,正常情况下为了防止直接进入下一个分支执行,每个分支后必须以一个break语句结束。从一个分支直接进入下一个分支执行的做法并不健 格,这样做在程序修改时很容易出错。除了一个计算需要多个标号的情况外,应尽量减少从 一个分支直接进入下一个分支执行这种用法,在不得不使用的情况下应该加上适当的程序注 释。

填空题:

依次执行各分支的做法有优点也有缺点。好的一面是它可以把若干个分支组合在一起完 成一个任务,如上例中对数字的处理。但是,正常情况下为了防止直接进入下一个分支执行,每个分支后必须以一个break语句结束。从一个分支直接进入下一个分支执行的做法并不健 格,这样做在程序修改时很容易出错。除了一个计算需要多个标号的情况外,应尽量减少从 一个分支直接进入下一个分支执行这种用法,在不得不使用的情况下应该加上适当的程序注 释。

空格处应填:break","
  依次执行各分支的做法有优点是____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
for (i = 0; i < n; i++) 这是C语言处理数组前n个元素的一种习惯性用法,它类似于Fortran语言中的DO循环或 Pascal语言中的for循环。但是,这种类比并不完全准确,因为在C语言中,for循环语句 的循环变量和上限在循环体内可以修改,并且当循环因某种原因终止后循环变量i的值仍然 保留。因为for语句的各组成部分可以是任何表达式,所以for语句并不限于通过算术级数 进行循环控制。尽管如此,牵强地把一些无关的计算放到for语句的初始化和变量递增部分 是一种不好的程序设计风格,该部分放置循环控制运算更合适。"," for (i = 0; i < n; i++) 是C语言处理数组前n个元素的一种习惯性用法,它类似于____语言中的DO循环或____语言中的for循环。","
 for (i = 0; i < n; i++) 
    {
        // 相关计算
        //...
        
        // 循环控制
        if (/* 循环条件 */) 
        {
            i++;
        }
    }","
  for (i = 0; i < n; i++) 是C语言处理数组前n个元素的一种习惯性用法,它类似于____语言中的DO循环或____语言中的for循环。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
请根据以下文本内容进行出题：应该慎用逗号运算符。逗号运算符最适用于关系紧密的结构中,比如上面的reverse函 数内的for语句,对于需要在单个表达式中进行多步计算的宏来说也很适合。逗号表达式还适用于reverse函数中元素的交换,这样,元素的交换过程便可以看成是一个单步操作。"," 应该慎用逗号运算符。逗号运算符最适用于关系紧密的结构中,比如上面的____函数内的____语句,对于需要在单个表达式中进行多步计算的宏来说也很适合。","
 请根据以下文本内容完成填空题：应该慎用逗号运算符。逗号运算符最适用于关系紧密的结构中,比如上面的reverse函数内的for语句,对于需要在单个表达式中进行多步计算的宏来说也很适合。逗号表达式还适用于______内的元素交换，这样，元素的交换过程便可以看成是一个单步操作。

答案：reverse","
  应该慎用逗号运算符。逗号运算符最适用于关系紧密的结构中,比如上面的____函数内的____语句,对于需要在单个表达式中进行多步计算的宏来说也很适合。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
请根据以下文本内容进行出题：请根据以下文本内容进行出题：当循环的后面部分比较复杂时,常常会用到continue语句。这种情况下,如果不使用 continue语句,则可能需要把测试颠倒过来或者缩进另一层循环,这样做会使程序的嵌套更深。"," 当循环的后面部分比较复杂时,常常会用到____语句。这种情况下,如果不使用 continue 语句,则可能需要把测试颠倒过来或者缩进另一层循环,这样做会使程序的____更深。","
 根据文本内容，以下是一道填空题：

当循环的后面部分比较复杂时，常常会用到______语句。这种情况下，如果不使用 continue 语句，则可能需要把测试颠倒过来或者缩进另一层循环，这样做会使程序的嵌套更深。

答案：continue","
  当循环的后面部分比较复杂时,常常会用到____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
C语言提供了可随意滥用的goto语句以及标记跳转位置的标号。从理论上讲,goto语 句是没有必要的,实践中不使用goto语句也可以很容易地写出代码。至此,本书中还没有使用goto语句。但是,在某些场合下goto语句还是用得着的。最常见的用法是终止程序在某些深度嵌套的结构中的处理过程,例如一次跳出两层或多层循环。这种情况下使用break语句是不能达到目的的,它只能从最内层循环退出到上一级的循环。", C语言提供了可随意滥用的____语句以及标记跳转位置的____。,"
 C语言提供了可随意滥用的goto语句以及标记跳转位置的标号。从理论上讲,goto语句是没有必要的,实践中不使用goto语句也可以很容易地写出代码。至此,本书中还没有使用goto语句。但是,在某些场合下goto语句还是用得着的。最常见的用法是终止程序在某些深度嵌套的结构中的处理过程,例如一次跳出两层或多层循环。这种情况下使用break语句是不能达到目的的,它只能从最内层循环退出到上一级的循环。

空格处的词语是:__________","
  C语言提供了可随意滥用的____语句以及标记跳转位置的____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在本书的开篇，我们首先概要地介绍C语言，主要是通过实际的程序引入C语言的基本元素，至于其中的具体细节、规则以及一些例外情况，在此暂时不多做讨论。因此，本章不准备完整、详细地讨论C语言中的一些技术(当然，这里所举的所有例子都是正确的)。我们是希望读者能尽快地编写出有用的程序，为此，本章将重点介绍一些基本概念，比如变量与常量、算术运算、控制流、函数、基本输入/输出等。而对于编写较大型程序所涉及到的一些重要特性，比如指针、结构、C语言中十分丰富的运算符集合、部分控制流语句以及标准库等，本章将暂不做讨论。",______,"
 C语言的开发者是_______。","
 ______",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
学习一门新程序设计语言的惟一途径就是使用它编写程序。对于所有语言的初学者来说，编写的第一个程序几乎都是相同的，即:
请打印出下列内容
hello，world
尽管这个练习很简单，但对于初学语言的人来说，它仍然可能成为一大障碍，因为要实现这个目的，我们首先必须编写程序文本，然后成功地运行编译，并加载、运行，最后输出到某个地方。掌握了这些操作细节以后，其它事情就比较容易了。",______是学习一门新程序设计语言的惟一途径。,"
 学习一门新程序设计语言的惟一途径就是使用它编写程序。对于所有语言的初学者来说，编写的第一个程序几乎都是相同的，即:

void main() {
    printf(""hello，world\n"");
}","
 ______是学习一门新程序设计语言的惟一途径。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#include <stdio.h>
main ( )
{
printf (""hello，world\n"") ;
}
",______是C语言中用于输出内容到屏幕的函数。,"
 请将以下代码中的“#include <stdio.h>”和“printf (""hello，world\n"")”替换为以下内容，以使程序正常运行：

```c
#include <stdio.h>

int main() {
    printf(""hello，world\n"");
    return 0;
}
```","
 ______是C语言中用于输出内容到屏幕的函数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在 UNIX 操作系统中，
首先必须在某个文件中建立这个源程序，并以“ .c”作为文件的扩展名，例如 hello.c，然 后再通过下列命令进行编译：
cc hello.c
如果源程序没有什么错误（例如漏掉字符或拼错字符），编译过程将顺利进行，并生成一个可 执行文件 a.out。然后，我们输入：
a.out
即可运行 a.out，打印出下列信息：
hello, world",______操作系统中，源程序文件的扩展名通常为“.c”。,"
 以下是一道填空题:

在 UNIX 操作系统中,首先必须在某个文件中建立这个源程序,并以“ __”作为文件的扩展名,例如 hello.c,然后再通过下列命令进行编译:

cc hello.c

如果源程序没有什么错误(例如漏掉字符或拼错字符),编译过程将顺利进行,并生成一个可执行文件 __.out。然后,我们输入:

__

即可运行 __,打印出下列信息:

hello, world","
 ______操作系统中，源程序文件的扩展名通常为“.c”。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#include <stdio.h>
包含标准库的信息",______是包含标准库的信息。,"
 请根据以下文本内容完成填空题：

#include <stdio.h>
（此处应填入与标准库相关的内容，如“包含标准库的信息”，“用于输入输出”等）","
 ______是包含标准库的信息的变量类型。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
main()  定义名为 main 的函数，它不接受参数值",______是一个不接受参数值的函数。,"
 请根据以下文本内容出一道填空题:

main() 定义名为 main 的函数，它不接受参数值。

问题：在 C 语言中，main() 函数的参数类型是什么？

答案：void","
 ______是一个不接受参数值的函数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
main(){ }  main 函数的语句都被括在花括号中",______函数的语句都被括在花括号中,"
 main() { 
    // 主函数体
 }","
 ______函数的语句都被括在花括号中",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
printf(""hello, world\n"");  main 函数调用库函数 printf 以显示字符序列；  \n 代表换行符",______函数调用库函数 printf 以显示字符序列,"
 请根据以下文本内容出一道填空题:

void main() {
    printf(""hello, world\n"");  
    printf()  // 这里需要填空，表示库函数
}","
 ______函数调用库函数 printf 以显示字符序列",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
 一个 C 语言程序，无论其大小如何，都是由函数和变量组成 的。函数中包含一些语句，以指定所要执行的计算操作；变量则用于存储计算过程中使用的 值。 C 语言中的函数类似于 Fortran 语言中的子程序和函数，  与 Pascal 语言中的过程和函数也 很类似。",______是一个 C 语言程序的基本组成部分，用于指定所要执行的计算操作。,"
 根据文本内容，以下是一个填空题：

C语言程序由函数和变量组成，函数中包含一些语句以指定要执行的计算操作，变量则用于存储计算过程中使用的值。C语言中的函数类似于Fortran语言中的________和函数，与Pascal语言中的过程和函数也很类似。

答案：子程序和函数","
 ______是一个 C 语言程序的基本组成部分，用于指定所要执行的计算操作。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
通常情况下， 函数的命名没有限制，  但 main 是一 个特殊的函数名——每个程序都从 main 函数的起点开始执行， 这意味着每个程序都必须在某 个位置包含一个 main 函数。
main 函数通常会调用其它函数来帮助完成某些工作，被调用的函数可以是程序设计人员 自己编写的，也可以来自于函数库。",______是每个程序的起点，每个程序都必须在某个位置包含这个函数。,"
 以下是一个关于 C 语言的填空题：

通常情况下，函数的命名没有限制，但 `main` 是一个特殊的函数名——每个程序都从 `main` 函数的起点开始执行，这意味着每个程序都必须在某個位置包含一个 `main` 函数。`main` 函数通常会调用其它函数来帮助完成某些工作，被调用的函数可以是程序设计人员自己编写的，也可以来自于函数库。

空格处应填：main","
 ______是每个程序的起点，每个程序都必须在某个位置包含这个函数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
程序段中的第一行语句
#include <stdio.h>告诉编译器在本程序中包含标准输入/输出库的信息。许多 C 语言源程序的开始处都包 含这一行语句。",______告诉编译器在本程序中包含标准输入/输出库的信息。,"
 请在下面空白处填上合适的语句：

程序段中的第一行语句是：#include <stdio.h> 告诉编译器在本程序中包含标准输入/输出库的信息。许多 C 语言源程序的开始处都包含这一行语句。","
 ______告诉编译器在本程序中包含标准输入/输出库的信息。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数之间进行数据交换的一种方法是调用函数向被调用函数提供一个值（称为参数）列 表。函数名后面的一对圆括号将参数列表括起来。",______是函数之间进行数据交换的一种方法。,"
 以下是一道填空题:

函数之间进行数据交换的一种方法是调用函数向被调用函数提供一个值（称为参数）____。函数名后面的一对圆括号将参数列表括起来。

答案:值","
 ______是函数之间进行数据交换的一种方法。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
调用函数时， 只需要使用函数名加上用圆括号括起来的参数表即可。",______时，只需要使用函数名加上用圆括号括起来的参数表即可。,"
 下面是一个关于C语言的填空题：

调用函数时，______加上用圆括号括起来的参数表即可。

选项：
A. 函数名
B. 参数名
C. 函数参数表
D. 参数顺序","
 ______时，只需要使用函数名加上用圆括号括起来的参数表即可。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
上面这条语句将""hello, world\n""。作为参数调用 printf 函数。printf 是一个用于打印输出的库函数，在此处， 它打印双引号中间的字符串。",______是一个用于打印输出的库函数，在此处，它打印双引号中间的字符串。,"
 下面是一个符合要求的填空题：

在 C 语言中，上面这段代码将 ""hello, world \n"" 作为参数调用 printf 函数，printf 是一个用于打印输出的库函数，在此处，它打印双引号中间的字符串。下面哪个选项是正确的？

A. 错误
B. 正确
C. 部分正确
D. 无法确定","
 ______是一个用于打印输出的库函数，在此处，它打印双引号中间的字符串。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
用双引号括起来的字符序列称为字符串或字符串常量，如""hello, world\n""就是一个 字符串。",______是用双引号括起来的字符序列。,"
 请根据以下文本内容完成填空题:

用双引号括起来的字符序列称为字符串或字符串常量,如______就是一个字符串。

答案:

一个字符串。","
 ______是用双引号括起来的字符序列。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
目前我们仅使用字符串作为 printf 及其它函数的参数。",______是我们目前仅使用的 printf 及其它函数的参数类型。,"
 请根据以下文本内容完成填空题：目前我们仅使用字符串作为 printf 及其它函数的参数。

空格处应填：字符串。","
 ______是我们目前仅使用的 printf 及其它函数的参数类型。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在 C 语言中，字符序列\n 表示换行符，在打印中遇到它时， 输出打印将换行，从下一行 的左端行首开始。如果去掉字符串中的\n（这是个值得一做的练习）， 即使输出打印完成后也不会换行。",______在C语言中表示换行符。,"
 以下是一道填空题:

在 C 语言中,字符序列\_表示换行符,在打印中遇到它时, 输出打印将换行,从下一行的左端开始。如果去掉字符串中的\_,即使输出打印完成后也不会换行。

答案:

在 C 语言中,字符序列\n 表示换行符,在打印中遇到它时, 输出打印将换行,从下一行的左端开始。如果去掉字符串中的\n(这是个值得一做的练习),即使输出打印完成后也不会换行。","
 ______在C语言中表示换行符。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在 printf 函数的参数中， 只能用\n 表示换行符。如果用程序的换行代替\n，例 如：
printf(""hello, world
"");
C 编译器将会产生一条错误信息。printf 函数永远不会自动换行， 这样我们可以多次调用该函数以分阶段得到一个长的输 出行。",______函数的参数中只能用\n表示换行符。,"
 以下是一道填空题:

在 printf 函数的参数中,只能用\n 表示换行符。如果用程序的换行代替\n,例如:

___\_\_\_\_\_\_

printf(""hello, world\n"");
C 编译器将会产生一条错误信息。printf 函数永远不会自动换行,这样我们可以多次调用该函数以分阶段得到一个长的输出行。","
 ______函数的参数中只能用\n表示换行符。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#include <stdio.h>
main()
{
printf(""hello, "");
printf(""world"");
printf(""\n"");
}",______是C语言中用于输出文本的函数。,"
 请将以下代码中的空格部分用合适的字符替换，使得程序能够正常运行并输出""hello, world""。

#include <stdio.h>
main()
{
printf(""hello, "");
printf(""world"");
printf(""\n"");
}","
 ______是C语言中用于输出文本的函数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
\n 只代表一个字符。类似于\n 的转义字符序列为表示无法输入的字符或不可见 字符提供了一种通用的可扩充的机制。除此之外，C 语言提供的转义字符序列还包括： \t 表 示制表符；   \b 表示回退符；  \""表示双引号；  \\表示反斜杠符本身。2.3 节将给出转义字符序 列的完整列表。",______是一种转义字符序列，用于表示无法输入的字符或不可见字符。,"
 C语言提供的转义字符序列还包括：\n 表示换行符；\t 表示制表符；\b 表示回退符；\"" 表示双引号；\\ 表示反斜杠符本身。2.3节将给出转义字符序列的完整列表。

请根据上述文本，将下面的字符序列补充完整：
\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_ 表示换行符；\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_ 表示制表符；\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_ 表示回退符；\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_ 表示双引号；\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_ 表示反斜杠符本身。2.3节将给出转义字符序列的完整列表。","
 ______是一种转义字符序列，用于表示无法输入的字符或不可见字符。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#include <stdio.h>

main()
{
int fahr, celsius;
int lower, upper, step;
lower = 0;     /* 温度表的下限  */
upper = 300;   /* 温度表的上限  */
step = 20;     /* 步长  */
fahr = lower;
while (fahr <= upper) {
celsius = 5 * (fahr-32) / 9;
printf(""%d\t%d\n"", fahr, celsius);
fahr = fahr + step;
}
}",______是温度表的下限。,"
 请根据以下文本内容出一道填空题:

#include <stdio.h>

main()
{
int fahr, celsius;
int lower, upper, step;
lower = 0;     /* 温度表的下限  */
upper = 300;   /* 温度表的上限  */
step = 20;     /* 步长  */
fahr = lower;
while (fahr <= upper) {
celsius = 5 * (fahr-32) / 9;
printf(""%d\t%d\n"", fahr, celsius);
fahr = fahr + step;
}
}

空格部分应填入的值为：

1. lower
2. upper
3. step
4. fahr","
 ______是温度表的下限。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
/*当 fahr=0， 20， …  ， 300 时，分别
打印华氏温度与摄氏温度对照表  */
称为注释，此处，它简单地解释，该程序是做什么用的。包含在/*与*/之间的字符序列将被 编译器忽略。注释可以自由地运用在程序中，使得程序更易于理解。程序中允许出现空格、 制表符或换行符之处，都可以使用注释。",______是程序中允许出现空格、制表符或换行符之处，都可以使用的内容。,"
 请根据以下文本内容出一道填空题:

/*当 fahr=0， 20， …  ， 300 时，分别
打印华氏温度与摄氏温度对照表  */
称为注释，此处，它简单地解释，该程序是做什么用的。包含在/*与*/之间的字符序列将被 编译器忽略。注释可以自由地运用在程序中，使得程序更易于理解。程序中允许出现空格、 制表符或换行符之处，都可以使用注释。

填空题：程序中允许出现空格、制表符或换行符之处，都可以使用______。

答案：注释","
 ______是程序中允许出现空格、制表符或换行符之处，都可以使用的内容。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在 C 语言中，所有变量都必须先声明后使用。声明通常放在函数起始处，在任何可执行 语句之前。声明用于说明变量的属性， 它由一个类型名和一个变量表组成，例如：
int fahr, celsius;
int lower, upper, step;
其中，类型 int 表示其后所列变量为整数，与之相对应的， float 表示所列变量为浮点数（即， 可以带有小数部分的数）。",______在C语言中，所有变量都必须先声明后使用。,"
 以下哪个选项是正确的 C 语言声明语句？

A. int fahr, celsius;
B. float fahr, celsius;
C. int fahr, celsius; int lower, upper, step;
D. float fahr, celsius; int lower, upper, step;","
 ______在C语言中，所有变量都必须先声明后使用。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
int 与 float 类型的取值范围取决于具体的机器。对于 int 类型， 通常为 16 位，其取值范围在-32768~32767 之间，也有用 32 位表示的 int 类型。  float 类  型通常是 32 位，它至少有 6 位有效数字，取值范围一般在 10-38~1038 之间。",______类型的取值范围通常为32位，取值范围一般在10^-38~10^38之间。,"
 下面是一个填空题:

int 与 float 类型的取值范围取决于具体的机器。对于 int 类型，______位表示其取值范围在-32768~32767 之间。对于 float 类型，______位表示其取值范围一般在 10-38~1038 之间。

答案：16 和 6","
 ______类型的取值范围通常为32位，取值范围一般在10^-38~10^38之间。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
除 int 与 float 类型之外，  C 语高还提供了其它一些基本数据类型，例如：
char     字符——一个字节
short    短整型
long     长整型
double   双精度浮点型",______，C语言除了int和float类型之外，还提供了哪些基本数据类型？,"
 C语言中除了int和float类型之外，还提供了其他一些基本数据类型，例如：
char     字符——一个字节
short    短整型
long     长整型
double   双精度浮点型","
 ______，C语言除了int和float类型之外，还提供了哪些基本数据类型？",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
lower = 0;
upper = 300;
step = 20;
fahr = lower;
它们为变量设置初值。各条语句均以分号结束。",______为变量设置初值。,"
 以下是一道填空题:

在给定的代码中,变量fahr的值为____。

答案:fahr的值为0。","
 ______为变量设置初值。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
这是 while 循 环语句的用途：
while (fahr <= upper) {
...
}",______是while循环语句的用途,"
 以下是一道填空题:

这是 while 循 环语句的用途:
while (fahr <= upper) {
______
}","
 ______是while循环语句的用途",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
while 循环语句的 执行 方式是 这样 的：  首先测 试圆括 号中 的条件 ；如 果条 件为真 (fahr<=upper)，则执行循环体（括在花括号中的 3 条语句）；然后再重新测试圆括号中的 条件，如果为真，则再次执行循环体；当圆括号中的条件测试结果为假(fahr>upper)时，  循环结束，  并继续执行跟在 while 循环语句之后的下一条语句。在本程序中， 循环语句后没 有其它语句，因此整个程序的执行终止。",______的执行方式是这样的：首先测试圆括号中的条件；如果条件为真，则执行循环体；然后再重新测试圆括号中的条件，如果为真，则再次执行循环体；当圆括号中的条件测试结果为假时，循环结束，并继续执行跟在while循环语句之后的下一条语句。,"
 以下是一道根据所给文本内容填空的题目：

while 循环语句的执行方式是：首先测试圆括号中的条件；如果条件为真(fahr<=upper)，则执行循环体（括在花括号中的3条语句）；然后再重新测试圆括号中的条件，如果为真，则再次执行循环体；当圆括号中的条件测试结果为假(fahr>upper)时，循环结束，并继续执行跟在 while 循环语句之后的下一条语句。在本程序中，循环语句后没有其他语句，因此整个程序的执行终止。

请填写空缺部分：循环结束，并继续执行跟在 while 循环语句之后的下一条语句。","
 ______的执行方式是：首先测试圆括号中的条件；如果条件为真，则执行循环体；然后再重新测试圆括号中的条件，如果为真，则再次执行循环体；当圆括号中的条件测试结果为假时，循环结束，并继续执行跟在while循环语句之后的下一条语句。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
while 语句的循环体可以是用花括号括起来的一条或多条语句（如上面的温度转换程 序），也可以是不用花括号包括的单条语句，例如：
while (i < j)
i = 2 * i;",______的循环体可以是用花括号括起来的一条或多条语句，也可以是不用花括号包括的单条语句。,"
 以下是一个关于while语句的填空题：

while (______ <______) {
    ______ = 2 * ______;
}","
 ______的循环体可以是用花括号括起来的一条或多条语句，也可以是不用花括号包括的单条语句。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
我们总是把由 while 控制的语句缩进一个制表位， 这样就可以很容易地看  出循环语句中包含哪些语句。这种缩进方式突出了程序的逻辑结构。尽管 C 编译器并不关心  程序的外观形式， 但正确的缩进以及保留适当空格的程序设计风格对程序的易读性非常重要。 我们建议每行只书写一条语句，并在运算符两边各加上一个空格字符， 这样可以使得运算的  结合关系更清楚明了。相比而言，  花括号的位置就不那么重要了。",______的缩进方式突出了程序的逻辑结构。,"
 下面是针对这段文本的填空题：

我们总是把由 while 控制的语句缩进一个制表位， 这样就可以很容易地看  出循环语句中包含哪些语句。这种缩进方式突出了程序的逻辑结构。尽管 C 编译器并不关心  程序的外观形式， 但正确的缩进以及保留适当空格的程序设计风格对程序的易读性非常重要。 我们建议每行只书写一条语句，并在运算符两边各加上一个空格字符， 这样可以使得运算的  结合关系更清楚明了。相比而言，  花括号的位置就不那么重要了。

填空题：在循环语句中，通过正确的缩进以及保留适当空格的程序设计风格对程序的易读性非常重要。","
 ______的缩进方式突出了程序的逻辑结构。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
celsius =  5 * (fahr - 32) / 9：
用于计算与指定华氏温度相对应的摄氏温度值， 并将结果赋值给变量 celsius。在该语句中， 之所以把表达式写成先乘 5 然后再除以 9 而不是直接写成 5 / 9，其原因是在 C 语言及许多  其它语言中，整数除法操作将执行舍位，结果中的任何小数部分都会被舍弃。由于 5 和 9 都  是整数，  5 / 9 相除后经截取所得的结果为 0， 因此这样求得的所有摄氏温度都将为 0。",______是用于计算与指定华氏温度相对应的摄氏温度值的表达式。,"
 请根据以下文本内容出一道填空题：

celsius =  5 * (fahr - 32) / 9：
用于计算与指定华氏温度相对应的摄氏温度值， 并将结果赋值给变量 celsius。在该语句中， 之所以把表达式写成先乘 5 然后再除以 9 而不是直接写成 5 / 9，其原因是在 C 语言及许多  其他语言中，整数除法操作将执行舍位，结果中的任何小数部分都会被舍弃。由于 5 和 9 都  是整数，  5 / 9 相除后经截取所得的结果为 0， 因此这样求得的所有摄氏温度都将为 0。

填空题：

celsius =  ______ * (fahr - 32) / 9","
 ______是用于计算与指定华氏温度相对应的摄氏温度值的表达式。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
printf 是一个通用输出格式化函数， 第 7 章将对此做详细介绍。该函数的第一个参数是待打印的字符串，其中的每个百分号（%） 表示其它的参数（第二个、第三个、 ……参数）之一进行替换的位置， 并指定打印格式。",______是一个通用输出格式化函数。,"
 以下是一道填空题:

printf 是一个通用输出格式化函数,其第一个参数是待打印的字符串,其中的每个百分号(%) 表示其它的参数(第二个、第三个、 ……参数)之一进行替换的位置,并指定打印格式。","
 ______是一个通用输出格式化函数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
printf("" %d\t%d\n"", fahr, celsius);
用于打印两个整数 fahr 与 celsius 的值，并在两者之间留一个制表符的空间（\t）。",______用于打印两个整数 fahr 与 celsius 的值，并在两者之间留一个制表符的空间（\t）。,"
 以下是一道根据给定文本内容填空的题目：

在以下语句中，哪个选项用于在两个整数 fahr 和 celsius 之间留一个制表符的空间（\t）？

A. `printf(""%d\t%d"", fahr, celsius);`
B. `printf(""%d %d"", fahr, celsius);`
C. `printf(""%d\t"", fahr, celsius);`
D. `printf(""%d\t%d\n"", fahr, celsius);`","
 ______用于打印两个整数 fahr 与 celsius 的值，并在两者之间留一个制表符的空间（\t）。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
printf 函数的第一个参数中的各个%分别对应于第二个、第三个、 ……参数，它们在数 目和类型上都必须匹配，否则将出现错误的结果。",______函数的第一个参数中的各个%分别对应于第二个、第三个、 ……参数，它们在数目和类型上都必须匹配，否则将出现错误的结果。,"
 下面是一个填空题：

printf 函数的第一个参数中的各个%分别对应于第二个、第三个、_______参数，它们在数量和类型上都必须匹配，否则将出现错误的结果。

答案：上面的空格处应填写 ""第四个""。","
 ______函数的第一个参数中的各个%分别对应于第二个、第三个、 ……参数，它们在数目和类型上都必须匹配，否则将出现错误的结果。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
printf 函数并不是 C 语言本身的一部分，C 语言本身并没有定义输入/输出 功能。printf 仅仅是标准库函数中一个有用的函数而已，这些标准序函数在 C 语言程序中 通常都可以使用。",______函数并不是C语言本身的一部分，C语言本身并没有定义输入/输出功能。,"
 printf 函数并不是 C 语言本身的一部分，C 语言本身并没有定义输入/输出 功能。printf 仅仅是标准库函数中一个有用的函数而已，这些标准序函数在 C 语言程序中 通常都可以使用。

题目：以下关于 printf 函数的描述哪个是正确的？

A. printf 是 C 语言的一部分
B. printf 函数在 C 语言程序中通常不可用
C. printf 是标准库函数中一个有用的函数
D. C 语言本身没有定义输入/输出功能","
 ______函数并不是C语言本身的一部分，C语言本身并没有定义输入/输出功能。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
 ANSI 标准定义了 printf 函数的行为， 因此，对每个符合该标准的 编译器和库来说，该函数的属性都是相同的。",______定义了 printf 函数的行为。,"
 以下是一道填空题:

___标准定义了 printf 函数的行为,因此,对每个符合该标准的编译器和库来说,该函数的属性都是相同的。","
 ______定义了 printf 函数的行为。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
 scanf 函数类似于 printf 函数， 但它用于读输 入数据而不是写输出数据。",______函数类似于printf函数，但用于读取输入数据而不是写输出数据。,"
 题目：在 C 语言中，用于读输入数据的函数是______。","
 ______函数类似于printf函数，但用于读取输入数据而不是写输出数据。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
如果在 printf 语句的第一个参数的 %d 中指明打印宽度，则打印的数字会在打印区域内右对齐。例如，可以用语句
printf("" %3d %6d\n"", fahr, celsius);
打印 fahr 与 celsius 的值， 这样，fahr 的值占 3 个数字宽，celsius 的值占 6 个数字宽，",______，如果在 printf 语句的第一个参数的 %d 中指明打印宽度，则打印的数字会在打印区域内右对齐。,"
 请根据以下文本内容出一道填空题:

如果在 printf 语句的第一个参数的 %d 中指明打印宽度，则打印的数字会在打印区域内右对齐。例如，可以用语句
printf("" %3d %6d\n"", fahr, celsius);
打印 fahr 与 celsius 的值， 这样，fahr 的值占 3 个数字宽，celsius 的值占 6 个数字宽，

题目：在以下语句中，%d 表示什么？

```
printf("" %d "", 12345);
```

答案：%d 表示整数类型。","
 ______，如果在 printf 语句的第一个参数的 %d 中指明打印宽度，则打印的数字会在打印区域内右对齐。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#include <stdio.h>
/* print Fahrenheit-Celsius table
for fahr = 0, 20, ..., 300; floating-point version */
main()
{
float fahr, celsius;
float lower, upper, step;
lower = 0;     /* lower limit of temperatuire scale */
upper = 300;   /* upper limit */
step = 20;     /* step size */
fahr = lower;
while (fahr <= upper) {
celsius = (5.0/9.0) * (fahr-32.0);
printf(""%3.0f %6.1f\n"", fahr, celsius);
fahr = fahr + step;
}
}",______表格中的温度单位是什么？,"
 以下是一道根据给定文本的填空题:

#include <stdio.h>
/* print Fahrenheit-Celsius table
for fahr = 0, 20,..., 300; floating-point version */
main()
{
float fahr, celsius;
float lower, upper, step;
lower = \_\_\_\_\_\_\_;     /* lower limit of temperatuire scale */
upper = 300;   /* upper limit */
step = 20;     /* step size */
fahr = lower;
while (fahr <= upper) {
celsius = (5.0/9.0) * (fahr-32.0);
printf(""%3.0f %6.1f\n"", fahr, celsius);
fahr = fahr + step;
}
}

答案:lower = 0","
 ______表格中的温度单位是什么？",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在前一个程序中，之所以不能使用 5 / 9 的形式，是因为按整型除法的计算规则，它们相除并舍位后得到的结果为 0。但是，常数中的小数点表 明该常数是一个浮点数，因此， 5.0 / 9.0 是两个浮点数相除，结果将不被舍位。",______的计算规则导致了无法使用 5 / 9 的形式进行计算。,"
 请根据以下文本内容出一道填空题:

在前一个程序中,之所以不能使用 5 / 9 的形式,是因为按整型除法的计算规则,它们相除并舍位后得到的结果为 0。但是,常数中的小数点表明该常数是一个浮点数,因此, 5.0 / 9.0 是两个浮点数相除,结果将不被舍位。

题目:根据文本描述,以下哪个操作符能够正确地执行浮点数相除?

答案选项:

-   /
-   %
-   *
-   ^

正确答案: 

答案解析:根据文本描述,5.0 / 9.0 是两个浮点数相除,结果将不被舍位,因此正确答案是除号(/)。","
 ______的计算规则导致了无法使用 5 / 9 的形式进行计算。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
如果某个算术运算符的所有操作数均为整型， 则执行整型运算。但是，如果某个算术运算符有一个浮点型操作数和一个整型操作数，则在开始运算之前整型操作数将会被转换为浮  点型。例如，在表达式 fahr –  32 中， 32 在运算过程中将被自动转换为浮点数再参与运算。 不过，即使浮点常量取的是整型值，在书写时最好还是为它加上一个显式的小数点，这样可  以强调其浮点性质， 便于阅读。",______操作数和______操作数执行整型运算。,"
 题目：在以下表达式中，哪个算术运算符会导致整型操作数被转换为浮点型？

A. fahr - 32
B. fahr + 32
C. fahr * 32
D. fahr / 32","
 ______操作数和______操作数执行整型运算。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
printf 中的转换说明%3.0f 表明待打印的浮点数（即 fahr）至少占 3 个字符宽， 且不 带小数点和小数部分；  %6.1f 表明另一个待打印的数（celsius）至少占 6 个字符宽，  且小 数点后面有 1 位数字。",______中的转换说明%3.0f表示待打印的浮点数至少占3个字符宽，且不带小数点和小数部分。,"
 请根据以下文本内容出一道填空题:

在 C 语言中，%3.0f 表示格式控制字符串中的数字至少占据 3 个字符宽度，且不包含小数点和小数部分；而 %6.1f 表示另一个格式控制字符串中的数字至少占据 6 个字符宽度，且小数点后面有 1 位数字。这两个格式控制字符串的不足部分用空格填充。

空格  空格  空格  空格  空格  a     b     c     d     e

请在空格处填上合适的字符,使得等式成立。","
 ______中的转换说明%3.0f表示待打印的浮点数至少占3个字符宽，且不带小数点和小数部分。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
格式说明可以省略宽度与精度，例如，%6f 表示待打印的浮点数至少有 6 个字符宽；%.2f 指定待打印的浮点数的小数点后有两位小数，但宽度没有限制；  %f 则仅仅要求按照浮点数打印该数。",______可以省略宽度与精度，例如，%6f 表示待打印的浮点数至少有 6 个字符宽；%.2f 指定待打印的浮点数的小数点后有两位小数，但宽度没有限制； %f 则仅仅要求按照浮点数打印该数。,"
 请根据以下文本内容完成填空题：

格式说明可以省略宽度与精度，例如，%6f 表示待打印的浮点数至少有 6 个字符宽；%.2f 指定待打印的浮点数的小数点后有两位小数，但宽度没有限制；  %f 则仅仅要求按照浮点数打印该数。

空格处应填：__________。","
 ______可以省略宽度与精度，例如，%6f 表示待打印的浮点数至少有 6 个字符宽；%.2f 指定待打印的浮点数的小数点后有两位小数，但宽度没有限制； %f 则仅仅要求按照浮点数打印该数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
%d按照十进制整型数打印",抱歉，根据提供的文本内容无法出题。,"
 以下是一道根据给定文本内容出的C语言填空题:

使用%d格式控制符,可以按照十进制整型数打印出一个整数,其值为INT_MIN到UINT_MAX之间的任意一个整数。请将下面的代码中的空缺部分填写正确,以实现该功能。

```c
int main()
{
    int x = %d; // 按照十进制整型数打印一个整数
    // 下面的代码中空缺的部分需要填写正确,以实现程序功能
    printf(""x = %d\n"", x);
    return 0;
}
```

正确答案:

```c
int main()
{
    int x = INT_MIN; // 按照十进制整型数打印一个整数
    printf(""x = %d\n"", x);
    return 0;
}
```","
 抱歉，根据提供的文本内容，无法出出一道填空题。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
%6d按照十进制整型数打印，至少 6 个字符宽",______是指按照十进制整型数打印，至少 6 个字符宽。,"
 以下是一道填空题:

将以下 C 语言代码中的空格替换为指定的字符,使得按照十进制整型数打印,至少 6 个字符宽。

```c
%6d %*c
```

请填写空格的字符。","
 ______是指按照十进制整型数打印，至少 6 个字符宽。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
%f按照浮点数打印",______按照什么方式打印？,"
 以下是一道填空题:

在C语言中,按照浮点数打印可以使用______函数。

答案:printf","
 ______按照什么方式打印？",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
%6f按照浮点数打印，至少 6 个字符宽",抱歉，由于提供的文本内容不够详细，我无法根据该文本内容进行出题。,"
 下面是一个填空题:

将以下字符串按照浮点数打印,至少 6 个字符宽:

%6f %6d %6c %65 %64 %64","
 抱歉，我无法按照你的要求生成题目。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
%.2f按照浮点数打印，小数点后有两位小数",______按照浮点数打印，小数点后有两位小数,"
 以下是一道填空题:

将以下字符串中的数字替换为相应的浮点数并保留两位小数:

%.2f","
 ______按照浮点数打印，小数点后有两位小数",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
%6.2f按照浮点数打印，至少 6 个字符宽，小数点后有两位小数",______按照浮点数打印，至少 6 个字符宽，小数点后有两位小数,"
 请根据以下文本内容出一道填空题:

将以下字符串按照浮点数打印,保留至少6个字符宽度,小数点后有两位小数:

%6.2f","
 ______按照浮点数打印，至少 6 个字符宽，小数点后有两位小数",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#include <stdio.h>/*打印华氏温度—摄氏温度对照表*/
main()
{
int fahr;
for (fahr = 0; fahr <= 300; fahr = fahr + 20)
printf(""%3d %6.1f\n"", fahr, (5.0/9.0)*(fahr-32));
}",______是打印华氏温度和摄氏温度对照表的C语言程序中的一个变量。,"
 以下是一道根据给定代码的空白处填空的题目：

#include <stdio.h>/*打印华氏温度—摄氏温度对照表*/
main()
{
int fahr;
for (fahr = 0; fahr <= 300; fahr = fahr + 20)
printf(""%3d %6.1f\n"", fahr, (5.0/9.0)*(fahr-32));
}

请根据代码的空白处选择正确的数值填空。

【答案】

int fahr;
for (fahr = 0; fahr <= 300; fahr = fahr + 20)
printf(""%3d %6.1f\n"", fahr, (5.0/9.0)*(fahr-32));","
 ______是打印华氏温度和摄氏温度对照表的C语言程序中的一个变量。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在新引入的 for 语句中，温度 的下限、上限和步长都是常量，而计算摄氏温度的表达式现在变成了 printf 函数的第三个 参数，它不再是一个单独的赋值语句。",______的下限、上限和步长在新引入的 for 语句中都是常量。,"
 请根据以下文本内容出一道填空题:

在新引入的 for 语句中,温度 的下限、上限和步长都是常量,而计算摄氏温度的表达式现在变成了 printf 函数的第三个 参数,它不再是一个单独的赋值语句。

填空题:

在 for 循环中,用于计算摄氏度的表达式现在变成了______函数的第三个参数。","
 ______的下限、上限和步长在新引入的 for 语句中都是常量。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
 在允许使用某种类型变量 值的任何场合，都可以使用该类型的更复杂的表达式。因为 printf 函数的第三个参数必须 是与%6.1f 匹配的浮点值，所以可以在此处使用任何浮点表达式。",______的值可以在printf函数的第三个参数中使用，必须与%6.1f匹配。,"
 在允许使用某种类型变量 值的任何场合，都可以使用该类型的更复杂的表达式。因为 printf 函数的第三个参数必须 是与%6.1f 匹配的浮点值，所以可以在此处使用任何浮点表达式。

空格处应填：浮点值","
 ______的值可以在printf函数的第三个参数中使用，必须与%6.1f匹配。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
for 语句是一种循环语句， 它是对 while 语句的推广。如果将 for 语句与前面介绍的 while 语句比较，  就会发现 for 语句的操作更直观一些。圆括号中共包含 3 个部分， 各部分 之间用分号隔开。",______是一种循环语句，它是对 while 语句的推广。如果将 for 语句与前面介绍的 while 语句比较， 就会发现 for 语句的操作更直观一些。圆括号中共包含 3 个部分， 各部分 之间用分号隔开。,"
 for 语句是一种循环语句，它是对 while 语句的推广。如果将 for 语句与前面介绍的 while 语句比较，  就会发现 for 语句的操作更直观一些。圆括号中共包含 3 个部分， 各部分 之间用分号隔开。

空缺部分应填写：for 语句。","
 ______是一种循环语句，它是对 while 语句的推广。如果将 for 语句与前面介绍的 while 语句比较， 就会发现 for 语句的操作更直观一些。圆括号中共包含 3 个部分， 各部分 之间用分号隔开。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
第一部分
fahr = 0
是初始化部分，仅在进入循环前执行一次。第二部分
fahr <= 300
是控制循环的测试或条件部分。循环控制将对该条件求值， 如果结果值为真（ true），则执行 循环体（本例中的循环体仅包含一个 printf 函数调用语句）。此后将执行第三部分
fahr = fahr + 20
以将循环变量 fahr 增加一个步长， 并再次对条件求值。如果计算得到的条件值为假（faise）， 循环将终止执行。",______是初始化部分，仅在进入循环前执行一次。,"
 根据上述文本内容，以下是一道填空题：

第一部分中，变量fahr的值被设置为0，这一操作称为____。

答案：初始化","
 ______是初始化部分，仅在进入循环前执行一次。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
与 while 语句一样， for 循环语句的循环体可以只有一条语句， 也可以是  用花括号括起来的一组语句。初始化部分（第一部分）、条件部分（第二部分）与增加步长部  分（第三部分）都可以是任何表达式。",______可以用花括号括起来的一组语句。,"
 for 循环语句的循环体可以只有一条语句，也可以是花括号括起来的一组语句。初始化部分（第一部分）、条件部分（第二部分）与增加步长部分（第三部分）都可以是任何表达式。

空格处应填：花括号。","
 ______可以用花括号括起来的一组语句。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在实际编程过程中， 可以选择 whi1e 与 for 中的任意一种循环语句， 主要要看使用哪一 种更清晰。  for 语句比较适合初始化和增加步长都是单条语句并且逻辑相关的情形，因为它 将循环控制语句集中放在一起，且比 while 语句更紧凑。",______语句比较适合初始化和增加步长都是单条语句并且逻辑相关的情形。,"
 以下是一道根据文本内容填空的题目：

在实际编程过程中，可以选择___与___中的任意一种循环语句，主要要看使用哪一种更清晰。

答案：for 语句与 while 语句","
 ______语句比较适合初始化和增加步长都是单条语句并且逻辑相关的情形。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在程序中使用 300、20 等类似 的“幻数”并不是一个好习惯，它们几乎无法向以后阅读该程序的人提供什么信息，而且使 程序的修改变得更加困难。",______在程序中使用“幻数”并不是一个好习惯。,"
 请根据以下文本内容出一道填空题:

在程序中使用 300、20 等类似 的“幻数”并不是一个好习惯,它们几乎无法向以后阅读该程序的人提供什么信息,而且使 程序的修改变得更加困难。

题目: 程序中使用__这样的“幻数”并不是一个好习惯,它们几乎无法向以后阅读该程序的人提供什么信息,而且使程序的修改变得更加困难。

答案: 题目中缺少的单词是 ""幻数""( ill-defined numbers)。","
 ______在程序中使用“幻数”并不是一个好习惯。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
处理这种幻数的一种方法是赋予它们有意义的名字。#define 指 令可以把符号名（或称为符号常量）定义为一个特定的字符串：#define 名字 替换文本",______的一种方法是赋予它们有意义的名字。,"
 请根据以下文本内容出一道填空题:

处理这种幻数的一种方法是赋予它们有意义的名字。#define 指令可以把符号名（或称为符号常量）定义为一个特定的字符串：#define 名字 替换文本。

题目：在下面的#define指令中，将“名字”替换为实际的字符串。

```c
#define 幻数1 ""my_number""
#define 幻数2 ""another_number""
```","
 ______的一种方法是赋予它们有意义的名字。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在该定义之后，程序中出现的所有在#define 中定义的名字（既没有用引号引起来，也不是 其它名字的一部分）都将用相应的替换文本替换。其中，名字与普通变量名的形式相同：它 们都是以字母打头的字母和数字序列； 替换文本可以是任何字符序列，而不仅限于数字。",______中定义的名字在程序中会被相应的替换文本替换。,"
 在该定义之后，程序中出现的所有在#define 中定义的名字（既没有用引号引起来，也不是其它名字的一部分）都将用相应的替换文本替换。其中，名字与普通变量名的形式相同：它们都是以字母打头的字母和数字序列； 替换文本可以是任何字符序列，而不仅限于数字。

空格填空题：    
在上述文本中，程序中出现的所有在#define 中定义的名字（既没有用引号引起来，也不是其它名字的一部分）都将用相应的替换文本替换。其中，名字与普通变量名的形式相同：它们都是以字母打头的字母和数字序列； 替换文本可以是任何字符序列，而不仅限于数字。空格处应填：以字母打头的字母和数字序列。","
 ______中定义的名字在程序中会被相应的替换文本替换。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#include <stdio.h>
#define LOWER  0    /* lower limit of table */
#define UPPER  300  /* upper limit */
#define STEP  20   /* step size */
/* print Fahrenheit-Celsius table */
main()
{
int fahr;
for (fahr = LOWER; fahr <= UPPER; fahr = fahr + STEP)
printf(""%3d %6.1f\n"", fahr, (5.0/9.0)*(fahr-32));
}",______是打印的温度单位。,"
 以下是一道根据给定文本内容的填空题:

#include <stdio.h>
#define LOWER  0    /* lower limit of table */
#define UPPER  300  /* upper limit */
#define STEP  20   /* step size */
/* print Fahrenheit-Celsius table */
main()
{
int fahr;
for (fahr = LOWER; fahr <= UPPER; fahr = fahr + STEP)
printf(""%3d %6.1f\n"", fahr, (5.0/9.0)*(fahr-32));
}

题目要求填写空缺部分:

( ) is the lower limit of the table.
( ) is the upper limit of the table.
( ) is the step size of the table.","
 ______是打印的温度单位。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
其中， LOWER、UPPER 与 STEP 都是符号常量，而非变量，因此不需要出现在声明中。符号常量名通常用大写字母拼写，这样可以很容易与用小写字母拼写的变量名相区别。注意， #define 指令行的末尾没有分号。",______、______ 与 ______ 都是符号常量，而非变量，因此不需要出现在声明中。符号常量名通常用大写字母拼写，这样可以很容易与用小写字母拼写的变量名相区别。注意， #define 指令行的末尾没有分号。,"
 请根据以下文本内容出一道填空题:

在 C 语言中，LOWER、UPPER 和 ______ 都是符号常量，而非变量，因此不需要出现在声明中。符号常量名通常用大写字母拼写，这样可以很容易与用小写字母拼写的变量名相区别。注意，#define 指令行的末尾没有分号。

答案:

UPPER","
 ______、______ 与 ______ 都是符号常量，而非变量，因此不需要出现在声明中。符号常量名通常用大写字母拼写，这样可以很容易与用小写字母拼写的变量名相区别。注意， #define 指令行的末尾没有分号。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
标准库提供的输入/输出模型非常简单。无论文本从何处输入，输出到何处，其输入/ 输出都是按照字符流的方式处理。文本流是由多行字符构成的字符序列，而每行字符则由 0 个或多个字符组成，行末是一个换行符。标准库负责使每个输入/输出流都能够遵守这一模 型。使用标准库的 C 语言程序员不必关心在程序之外这些行是如何表示的。",______是由多行字符构成的字符序列，而每行字符则由0个或多个字符组成。,"
 以下是一道填空题:

标准库提供的输入/输出模型非常简单。无论文本从何处输入,输出到何处,其输入/ 输出都是按照字符流的方式处理。文本流是由多行字符构成的字符序列,而每行字符则由 0 个或多个字符组成,行末是一个换行符。标准库负责使每个输入/输出流都能够遵守这一模型。使用标准库的 C 语言程序员不必关心在程序之外这些行是如何表示的。

空格: standard library提供的输入/输出模型非常简单。无论文本从何处输入,输出到何处,其输入/ 输出都是按照字符流的方式处理。文本流是由多行字符构成的字符序列,而每行字符则由 0 个或多个字符组成,行末是一个换行符。标准库负责使每个输入/输出流都能够遵守这一模型。使用标准库的 C 语言程序员不必关心在程序之外这些行是如何表示的。","
 ______是由多行字符构成的字符序列，而每行字符则由0个或多个字符组成。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
标准库提供了一次读/写一个字符的函数，其中最简单的是 getchar 和 putchar 两个  函数。",______提供了一次读/写一个字符的函数。,"
 下面是一个与题目相关的C语言代码示例：

```c
#include <stdio.h>

int main() {
    char c = getchar();
    putchar(c);
    return 0;
}
```

请根据上述代码，将 `getchar()` 和 `putchar()` 两个函数中的一个填写到空白处，使其符合题目的描述。","
 ______提供了一次读/写一个字符的函数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
每次调用时， getchar 函数从文本流中读入下一个输入字符， 并将其作为结果值返回。也就是说，  在执行语句
c = getchar()
之后，变量 c 中将包含输入流中的下一个字符。这种字符通常是通过键盘输入的。",______函数从文本流中读入下一个输入字符， 并将其作为结果值返回。,"
 请根据以下文本内容出一道填空题:

每次调用时， getchar 函数从文本流中读入下一个输入字符， 并将其作为结果值返回。也就是说，  在执行语句
c = getchar()
之后，变量 c 中将包含输入流中的下一个字符。这种字符通常是通过键盘输入的。

填空题：在执行语句 c = \_\_\_\_() 之后，变量 c 中将包含输入流中的下一个字符。这种字符通常是通过键盘输入的。

答案：c = getchar()","
 ______函数从文本流中读入下一个输入字符， 并将其作为结果值返回。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
每次调用 putchar 函数时将打印一个字符。例如， 语句
putchar()
将把整型变量 c 的内容以字符的形式打印出来，通常是显示在屏幕上。",______函数可以将整型变量以字符的形式打印出来。,"
 以下是一道根据给定文本的填空题:

每次调用 putchar 函数时,会打印一个字符。例如,以下语句中的空格将把整型变量 c 的内容以字符的形式打印出来,通常显示在屏幕上:

```
putchar(c)
```

其中,c 是一个整型变量。","
 ______函数可以将整型变量以字符的形式打印出来。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
putchar 与 printf 这两个函数可以交替调用，输出的次序与调用的次序一致。",______可以交替调用，输出的次序与调用的次序一致。,"
 putchar 与 printf 这两个函数可以交替调用，输出的次序与调用的次序一致。

下面是一个基于这个知识的填空题：

void main() {
    putchar('A');
    printf(""B\n"");
    putchar('C');
    printf(""D\n"");
    putchar('E');
    printf(""F\n"");
}

根据上述代码，下面哪个选项是正确的？

A. putchar('A') -> B -> putchar('C') -> printf(""D\n"") -> putchar('E') -> printf(""F\n"")
B. putchar('A') -> putchar('C') -> printf(""D\n"") -> putchar('E') -> printf(""F\n"") -> B
C. putchar('A') -> putchar('B') -> putchar('D') -> putchar('E') -> printf(""F\n"") -> putchar('C')
D. putchar('A') -> putchar('B') -> putchar('D') -> putchar('E') -> putchar('F') -> printf(""F\n"") -> putchar('C')","
 ______可以交替调用，输出的次序与调用的次序一致。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
借助于 getchar 与 putchar 函数，可以在不了解其它输入/输出知识的情况下编写出 数量惊人的有用的代码。最简单的例子就是把输入一次一个字符地复制到输出，",______函数可以在不了解其它输入/输出知识的情况下编写出数量惊人的有用的代码。,"
 以下是一道根据给定文本的填空题:

借助于 getchar() 和 putchar() 函数,可以在不了解其它输入/输出知识的情况下编写出 数量惊人的有用的代码。最简单的例子就是把输入一次一个字符地复制到输出,__________。

答案:（这里需要填入一个有效的 C 语言语法，例如：把输入的字符打印到屏幕上）","
 ______函数可以在不了解其它输入/输出知识的情况下编写出数量惊人的有用的代码。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
读一个字符
while (该字符不是文件结束指示符)
输出刚读入的字符
读下一个字符",<该文本内容>，你需要出一个：______,"
 请根据以下文本内容出一道填空题:

读一个字符
while (该字符不是文件结束指示符)
输出刚读入的字符
读下一个字符","
 <该文本内容>，你需要出一个：______",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#include <stdio.h>
/* copy input to output; 1st version  */
main()
{
int c;
c = getchar();
while (c != EOF) {
putchar(c);
c = getchar();
}
}",______是将输入复制到输出的C语言程序的第一个版本中的变量类型。,"
 以下是一道关于给定代码的填空题：

#include <stdio.h>
/* copy input to output; 1st version  */
main()
{
int c;
c = __builtin_pop_argument(0);
while (c!= EOF) {
putchar(c);
c = __builtin_pop_argument(0);
}
}","
 ______是将输入复制到输出的C语言程序的第一个版本中的变量类型。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
字符在键盘、屏幕或其它的任何地方无论以什么形式表现，它在机器内部都是以位模式 存储的。 char 类型专门用于存储这种字符型数据，  当然任何整型（int）也可以用于存储字 符型数据。因为某些潜在的重要原因， 我们在此使用 int 类型。",______类型专门用于存储字符型数据。,"
 请根据上述文本内容，将下面的空格填上正确的内容。

字符在键盘、屏幕或其它的任何地方无论以什么形式表现，它在机器内部都是以位模式 \_\_\_\_\_ 存储的。 char 类型专门用于存储这种字符型数据，  当然任何整型（int）也可以用于存储字符型数据。因为某些潜在的重要原因， 我们在此使用 \_\_\_\_\_ 类型。","
 ______类型专门用于存储字符型数据。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在没有输入时， getchar 函数将返回一个特殊值， 这个特殊值与任何实际字符都不同。这个  值称为 EOF（end of file，文件结束）。我们在声明变量 c 的时候，必须让它大到足以存  放 getchar 函数返回的任何值。这里之所以不把 c 声明成 char 类型， 是因为它必须足够大， 除了能存储任何可能的字符外还要能存储文件结束符 EOF。因此， 我们将 c 声明成 int 类型。",______函数在没有输入时返回一个特殊值，这个特殊值称为EOF（end of file，文件结束）。,"
 请根据以下文本内容出一道填空题:

在没有输入时， getchar 函数将返回一个特殊值， 这个特殊值与任何实际字符都不同。这个  值称为 EOF（end of file，文件结束）。我们在声明变量 c 的时候，必须让它大到足以存  放 getchar 函数返回的任何值。这里之所以不把 c 声明成 char 类型， 是因为它必须足够大， 除了能存储任何可能的字符外还要能存储文件结束符 EOF。因此， 我们将 c 声明成 int 类型。

填空题：在上述文本中，getchar 函数返回的值为EOF，所以变量 c 的类型应该是____。

答案：int","
 ______函数在没有输入时返回一个特殊值，这个特殊值称为EOF（end of file，文件结束）。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
EOF 定义在头文件<stdio.h>中，是个整型数，其具体数值是什么并不重要，只要它与 任何 char 类型的值都不相同即可。这里使用符号常量， 可以确保程序不需要依赖于其对应的 任何特定的数值。",______是一个整型数，定义在头文件<stdio.h>中，与任何char类型的值都不相同。,"
 EOF 定义在头文件<stdio.h>中，是个整型数，其具体数值是 $-1$，只要它与 任何 char 类型的值都不相同即可。这里使用符号常量， 可以确保程序不需要依赖于其对应的 任何特定的数值。","
 ______是一个整型数，定义在头文件<stdio.h>中，与任何char类型的值都不相同。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在 C 语言中，类似于
c = getchar()
之类的赋值操作是一个表达式，并且具有一个值，  即赋值后左边变量保存的值。也就是说，  赋值可以作为更大的表达式的一部分出现。",______在C语言中是一个表达式，并且具有一个值，即赋值后左边变量保存的值。,"
 以下是一道填空题:

在 C 语言中,类似于______操作的赋值操作是一个表达式,并且具有一个值,即赋值后左边变量保存的值。也就是说,赋值可以作为更大的表达式的一部分出现。

答案:c = getchar()","
 ______在C语言中是一个表达式，并且具有一个值，即赋值后左边变量保存的值。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#include <stdio.h>
/* copy input to output; 2nd version  */
main()
{
int c;
while ((c = getchar()) != EOF)
putchar(c);
}",______是将输入复制到输出的C语言程序的第二个版本。,"
 以下是一道根据给定文本内容的填空题：

#include <stdio.h>
/* copy input to output; 2nd version  */
main()
{
int c;
while ((c = getchar())!= EOF)
putchar(c);
}

空格处的字符是：_______","
 ______是将输入复制到输出的C语言程序的第二个版本。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在该程序中，while 循环语句首先读一个字符并将其赋值给 c，然后测试该字符是否为文件 结束标志。如果该字符不是文件结束标志，则执行 while 语句体，并打印该字符。随后重复 执行 while 语句。当到达输入的结尾位置时，while 循环语句终止执行， 从而整个 main 函 数执行结束。",______循环语句首先读一个字符并将其赋值给 c，然后测试该字符是否为文件结束标志。,"
 请根据以下文本内容出一道填空题:

在该程序中，while 循环语句首先读一个字符并将其赋值给 c，然后测试该字符是否为文件 结束标志。如果该字符不是文件 结束标志，则执行 while 语句体，并打印该字符。随后重复 执行 while 语句。当到达输入的结尾位置时，while 循环语句终止执行， 从而整个 main 函数执行结束。

空格处应填：文件结束标志","
 ______循环语句首先读一个字符并将其赋值给 c，然后测试该字符是否为文件结束标志。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
以上这段程序将输入集中化， getchar 函数在程序中只出现了一次， 这样就缩短了程序， 整个程序看起来更紧凑。",______函数在程序中只出现了一次，这样就缩短了程序，整个程序看起来更紧凑。,"
 以下这段程序将输入集中化, `getchar` 函数在程序中只出现了一次, 这样就缩短了程序, 整个程序看起来更紧凑。

答案: 以上这段程序将输入集中化, `fgetc` 函数在程序中只出现了一次, 这样就缩短了程序, 整个程序看起来更紧凑。","
 ______函数在程序中只出现了一次，这样就缩短了程序，整个程序看起来更紧凑。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
对 while 语句的条件部分来说，  赋值表达式两边的圆括号不能省略。不等于运算符!=的 优先级比赋值运算符=的优先级要高，这样，在不使用圆括号的情况下关系测试!=将在赋值= 操作之前执行。因此语句
c = getchar() != EOF
等价于语句
c = (getchar() != EOF)",______语句的条件部分中，赋值表达式两边的圆括号不能省略。,"
 题目：以下哪个选项是正确的赋值语句？

A. c = getchar();
B. c = getchar()!= EOF;
C. c = (getchar()!= EOF);
D. c = {getchar();}","
 ______语句的条件部分中，赋值表达式两边的圆括号不能省略。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#include <stdio.h>
/* count characters in input; 1st version */
main()
{
long nc;
nc = 0;
while (getchar() != EOF)
++nc;
printf(""%ld\n"", nc);
}",______是C语言中用于计算输入字符数量的函数。,"
 以下是一道关于该代码的填空题:

#include <stdio.h>
/* count characters in input; 1st version */
main()
{
long nc;
nc = ____;
while (getchar()!= EOF)
++nc;
printf(""%ld\n"", nc);
}","
 ______是C语言中用于计算输入字符数量的函数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
++nc;
引入了一个新的运算符++，其功能是执行加 1 操作。可以用语句 nc = nc + 1 代替它，但  语句++nc 更精炼一些，且通常效率也更高。",______引入了一个新的运算符++，其功能是执行加 1 操作。,"
 下面是一个相关的填空题：

++nc; 
引入了一个新的运算符____，其功能是执行加 1 操作。可以用语句____nc 代替它，但____语句++nc 更精炼一些，且通常效率也更高。

答案：引入了一个新的运算符++，其功能是执行加 1 操作。可以用语句++nc 代替它，但inc语句++nc 更精炼一些，且通常效率也更高。","
 ______引入了一个新的运算符++，其功能是执行加 1 操作。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
与该运算符相应的是自减运算符--。++与--这  两个运算符既可以作为前缀运算符（如++nc），也可以作为后缀运算符（如 nc++）",______与--这两个运算符既可以作为前缀运算符，也可以作为后缀运算符。,"
 请根据以下文本内容出一道填空题:

与该运算符相应的是自减运算符--。++与--这  两个运算符既可以作为前缀运算符（如++nc），也可以作为后缀运算符（如 nc++）。

题目:

使用自减运算符--，下面哪个表达式是正确的?

A. ++a-1
B. --a+1
C. a--
D. a++-1","
 ______与--这两个运算符既可以作为前缀运算符，也可以作为后缀运算符。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
该字符计数程序使用 long 类型的变量存放计数值，而没有使用 int 类型的变量。long 整型数（长整型）至少要占用 32 位存储单元。在某些机器上 int 与 long 类型的长度相同， 但在一些机器上， int 类型的值可能只有 16 位存储单元的长度（最大值为 32767），这样，相 当小的输入都可能使 int 类型的计数变量溢出。转换说明%ld 告诉 printf 函数其对应的参 数是 long 整型。",______变量存放计数值使用 long 类型而不是 int 类型。,"
 以下哪个选项是正确的？

A. long 类型的变量至少要占用 16 位存储单元。
B. int 类型的变量在某些机器上至少要占用 32 位存储单元。
C. 在某些机器上，int 类型的值可能只有 16 位存储单元的长度（最大值为 32767），这样，相当小的输入都可能使 int 类型的计数变量溢出。
D. printf 函数可以接受 long 类型的参数。","
 ______变量存放计数值使用 long 类型而不是 int 类型。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
使用 double（双精度浮点数）类型可以处理更大的数字。",______可以处理更大的数字。,"
 请从下面的选项中选择一个正确填空：

A. double type can handle larger numbers than int type.
B. double type can only handle smaller numbers than int type.
C. double type cannot handle larger numbers than int type.
D. int type can handle larger numbers than double type.","
 ______可以处理更大的数字。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#include <stdio.h>
/* count characters in input; 2nd version */
main()
{
double nc;
for (nc = 0; gechar() != EOF; ++nc)
;
printf(""%.0f\n"", nc);
}",______是用来计算输入字符数量的变量。,"
 请根据以下文本内容出一道填空题:

#include <stdio.h>
/* count characters in input; 2nd version */
main()
{
double nc;
for (nc = 0; gechar()!= EOF; ++nc)
;
printf(""%.0f\n"", nc);
}

题目：将下面的代码中的 `gechar()` 替换为其他字符串，使得程序功能不变。

#include <stdio.h>
/* count characters in input; 2nd version */
main()
{
double nc;
for (nc = 0; input()!= EOF; ++nc)
;
printf(""%.0f\n"", nc);
}","
 ______是用来计算输入中字符数量的变量。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
对于 float 与 double 类型。printf 函数都使用%f 进行说明。%.0f 强制不打印小数点和 小数部分，  因此小数部分的位数为 0。",______与______类型的printf函数都使用%f进行说明。,"
 对于 float 与 double 类型。printf 函数都使用%f 进行说明。%.0f 强制不打印小数点和 小数部分，  因此小数部分的位数为 0。

题目：在 C 语言中，%f 用于表示 float 类型，而 %.0f 用于表示____类型。

答案：double","
 ______与______类型的printf函数都使用%f进行说明。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在该程序段中，  for 循环语句的循环体是空的，这是因为所有工作都在测试（条件）部 分与增加步长部分完成了。但 C 语言的语法规则要求 for 循环语句必须有一个循环体，  因此 用单独的分号代替。单独的分号称为空语句，它正好能满足 for 语句的这一要求。把它单独 放在一行是为了更加醒目。",______语言的for循环语句必须有一个循环体，因此用单独的分号代替。,"
 请根据以下文本内容出一道填空题:

在上述代码中,for 循环语句的循环体是空的,这是因为所有工作都在测试（条件）部分与增加步长部分完成了。但 C 语言的语法规则要求 for 循环语句必须有一个循环体，所以用单独的分号代替。单独的分号称为空语句,它正好能满足 for 语句的这一要求。把它单独放在一行是为了更加醒目。

空格处的词是:for 循环语句必须有一个循环体,否则程序会报错。","
 ______语言的for循环语句必须有一个循环体，因此用单独的分号代替。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
 whi1e 语句与 for 语句的优点 之一就是在执行循环体之前就对条件进行测试，如果条件不满足，则不执行循环体，这就可 能出现循环体一次都不执行的情况。在出现 0  长度的输入时，  程序的处理应该灵活一些， 在 出现边界条件时， while 语句与 for 语句有助于确保程序执行合理的操作",______语句与for语句的优点之一是在执行循环体之前就对条件进行测试，如果条件不满足，则不执行循环体。,"
 请根据以上文本内容，将空格处的内容填入空白处，以完成填空题。

while 语句与 for 语句的优点 之一就是在执行循环体之前就对条件进行测试，如果条件不满足，则不执行循环体，这就可 能出现循环体一次都不执行的情况。在出现 0  长度的输入时，  程序的处理应该灵活一些， 在 出现边界条件时， while 语句与 for 语句有助于确保程序执行合理的操作。","
 ______语句与for语句的优点之一是在执行循环体之前就对条件进行测试，如果条件不满足，则不执行循环体。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#include <stdio.h>
/* count lines in input */
main()
{
int c, nl;
nl = 0;
while ((c = getchar()) != EOF)
if (c == '\n')
++nl;
printf(""%d\n"", nl);
}",______是在输入中计算行数的关键变量。,"
 请根据以下文本内容出一道填空题:

#include <stdio.h>
/* count lines in input */
main()
{
int c, nl;
nl = 0;
while ((c = getchar())!= EOF)
if (c == '\n')
++nl;
printf(""%d\n"", nl);
}

题目：在上述代码中，以下哪个函数被调用用于获取输入字符？

A. getchar()
B. fgetc()
C. fscanf()
D. printf()","
 ______是在输入中计算行数的关键变量。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
双等于号==是 C 语言中表示“等于”关系的运算符（类似于 Pascal 中的单等于号=及 Fortran 中的.EQ.）。由于 C 语言将单等于号=作为赋值运算符，因此使用双等于号==表示相等的逻辑 关系，  以示区分。",______是C语言中表示“等于”关系的运算符。,"
 请根据以下文本内容出一道填空题:

双等于号==是 C 语言中表示____关系的运算符(类似于 Pascal 中的单等于号=及 Fortran 中的.EQ.)。由于 C 语言将单等于号=作为赋值运算符，因此使用双等于号==表示相等的逻辑关系，  以示区分。

答案:C 语言中表示“等于”关系的运算符。","
 ______是C语言中表示“等于”关系的运算符。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
单引号中的字符表示一个整型值，该值等于此字符在机器字符集中对应的数值，我们称  之为字符常量。但是， 它只不过是小的整型数的另一种写法而已。例如，  'A'是一个字符常量； 在 ASCII 字符集中其值为 65（即字符 A 的内部表示值为 65）。当然，用 'A'要比用 65 好，因  为。 'A'的意义更清楚，且与特定的字符集无关。",______是一个字符常量。,"
 单引号中的字符表示一个整型值，该值等于此字符在机器字符集中对应的数值，我们称之为字符常量。但是，它只不过是小的整型数的另一种写法而已。例如，  'A'是一个字符常量； 在 ASCII 字符集中其值为 65（即字符 A 的内部表示值为 65）。当然，用 'A'要比用 65 好，因 为。 'A'的意义更清楚，且与特定的字符集无关。

填空题：字符常量  __65__。","
 ______是一个字符常量。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
字符串常量中使用的转义字符序列也是合法的字符常量，比如，   '\n'代表换行符的值， 在 ASCII 字符集中其值为 10。我们应当注意到，   '\n'是单个字符，  在表达式中它不过是一个 整型数而已；而""\n""是一个仅包含一个字符的字符串常量",______代表换行符的值，在 ASCII 字符集中其值为 10。,"
 请根据以下文本内容出一道填空题:

字符串常量中使用的转义字符序列也是合法的字符常量，比如，  ______代表换行符的值， 在 ASCII 字符集中其值为 10。我们应当注意到，  ______是单个字符，  在表达式中它不过是一个 整型数而已;而""______""是一个仅包含一个字符的字符串常量。

请填写空缺的部分。","
 ______代表换行符的值，在 ASCII 字符集中其值为 10。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#include <stdio.h>
#define IN  1 /* inside a word */
#define OUT  0 /* outside a word */
/* count lines, words, and characters in input */
main()
{
int c, nl, nw, nc, state;
state = OUT;
nl = nw = nc = 0;
while ((c = getchar()) != EOF) {
++nc;
if (c == '\n')
++nl;
if (c == ' ' || c == '\n' || c = '\t')
state = OUT;
else if (state == OUT) {
state = IN;
++nw;
}
}
printf(""%d %d %d\n"", nl, nw, nc);
}",______是C语言中用于表示输入结束的特殊符号。,"
 请根据以下文本内容出一道填空题:

#include <stdio.h>
#define IN  1 /* inside a word */
#define OUT  0 /* outside a word */
/* count lines, words, and characters in input */
main()
{
int c, nl, nw, nc, state;
state = OUT;
nl = nw = nc = 0;
while ((c = getchar())!= EOF) {
++nc;
if (c == '\n')
++nl;
if (c =='' || c == '\n' || c = '\t')
state = OUT;
else if (state == OUT) {
state = IN;
++nw;
}
}
printf(""%d %d %d\n"", nl, nw, nc);
}

题目：下面哪个选项是这段C语言代码中的一个关键字？

A. if
B. getchar
C. printf
D. state","
 ______是C语言中用于表示输入字符的预定义 constants。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
程序执行时，每当遇到单词的第一个字符，它就作为一个新单词加以统计。state 变量 记录程序当前是否正位于一个单词之中，  它的初值是“不在单词中”，即初值被赋为 OUT。",______变量记录程序当前是否正位于一个单词之中,"
 state 变量的初值是______。","
 ______变量记录程序当前是否正位于一个单词之中",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
我 们在这里使用了符号常量 IN 与 OUT，而没有使用其对应的数值 1 与 0，这样程序更易读。在 较小的程序中，这种做法也许看不出有什么优势，  但在较大的程序中， 如果从一开始就这样做，因此而增加的一点工作量与提高程序可读性带来的好处相比是值得的。读者也会发现，如果程序中的幻数都以符号常量的形式出现，对程序进行大量修改就会相对容易得多。",______常量的使用可以提高程序的可读性，并且在较大的程序中带来更多的好处。,"
 我 们在这里使用了符号常量 IN 与 OUT，而没有使用其对应的数值 1 与 0，这样程序更易读。在 较小的程序中，这种做法也许看不出有什么优势，  但在较大的程序中， 如果从一开始就这样做，因此而增加的一点工作量与提高程序可读性带来的好处相比是值得的。读者也会发现，如果程序中的幻数都以符号常量的形式出现，对程序进行大量修改就会相对容易得多。

填空题：
我们在这里使用了符号常量 ______ 与 ______，而没有使用其对应的数值 ______ 与 ______，这样程序更易读。在较小的程序中，这种做法也许看不出有什么优势，但在较大的程序中，如果从一开始就这样做，因此而增加的一点工作量与提高程序可读性带来的好处相比是值得的。读者也会发现，如果程序中的幻数都以符号常量的形式出现，对程序进行大量修改就会相对容易得多。

答案：
我们在这里使用了符号常量 IN 与 OUT，而没有使用其对应的数值 1 与 0，这样程序更易读。在较小的程序中，这种做法也许看不出有什么优势，但在较大的程序中，如果从一开始就这样做，因此而增加的一点工作量与提高程序可读性带来的好处相比是值得的。读者也会发现，如果程序中的幻数都以符号常量的形式出现，对程序进行大量修改就会相对容易得多。","
 ______常量的使用可以提高程序的可读性，并且使得程序中的幻数都以符号常量的形式出现，从而增加程序的稳定性。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
nl = nw = nc = 0;
将把其中的 3 个变量 nl、nw 与 nc 都设置为 0。这种用法很常见，但要注意这样一个事实： 在兼有值与赋值两种功能的表达式中， 赋值结合次序是由右至左。所以上面这条语句等同于
n1 = (nw = (nc = 0));",______是赋值结合次序是由右至左的表达式。,"
 请根据以下文本内容出一道填空题：

nl = nw = nc = 0;
将把其中的 3 个变量 nl、nw 与 nc 都设置为 0。这种用法很常见，但要注意这样一个事实： 在兼有值与赋值两种功能的表达式中， 赋值结合次序是由右至左。所以上面这条语句等同于：
n1 = (nw = (nc = 0));","
 ______是赋值结合次序是由右至左的表达式。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
运算符||代表 OR（逻辑或），所以下列语句
if (c == ' ' || c== '\n' || c == '\t')
的意义是“如果 c 是空格，或 c 是换行符，或 c 是制表符”（前面讲过，  转义字符序列\t 是 制表符的可见表示形式）。",______代表 OR（逻辑或），所以下列语句 if (c == ' ' || c== '\n' || c == '\t') 的意义是“如果 c 是空格，或 c 是换行符，或 c 是制表符”。,"
 请根据上述文本内容，将下面的语句中的空缺部分用正确的运算符填充：
if (c =='' || c == '\n' || c == '\t')","
 ______代表 OR（逻辑或），所以下列语句 if (c =='' || c== '\n' || c == '\t') 的意义是“如果 c 是空格，或 c 是换行符，或 c 是制表符”。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
运算符 &&代表 AND（逻辑与），它仅比||高一个优先级。",______代表 AND（逻辑与），它仅比||高一个优先级。,"
 下面是一个关于C语言的填空题:

运算符 && 代表____(逻辑与),它仅比____高一个优先级。

答案: && 代表 AND(逻辑与),它仅比 || 高一个优先级。","
 ______代表 AND（逻辑与），它仅比||高一个优先级。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
由 &&或||连接的表达式由左至右求值，并保证在求值过程中只要能够判断最终的结果为真或 假，求值就立即终止。",______的表达式由左至右求值，并保证在求值过程中只要能够判断最终的结果为真或假，求值就立即终止。,"
 请将以下文本中的空格替换为适当的内容，以完成下面的填空题：

由 && 或 || 连接的表达式由左至右求值，并保证在求值过程中只要能够判断最终的结果为真或 假，求值就立即终止。

正确答案：由 && 或 || 连接的表达式由左至右求值，并保证在求值过程中只要能够判断最终的结果为真或 假，求值就立即终止。","
 ______的表达式由左至右求值，并保证在求值过程中只要能够判断最终的结果为真或假，求值就立即终止。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
if (c == ' ' || c== '\n' || c == '\t')如果 c 是空格，则没有必要再测试它是否为换行符或制表符，这样就 不必执行后面两个测试。在这里，  这一点并不特别重要，但在某些更复杂的情况下这样做就 有必要了，  不久我们将会看到这种例子。",______，如果 c 是空格，则没有必要再测试它是否为换行符或制表符，这样就不必执行后面两个测试。,"
 以下是一道根据给定文本的填空题：

if (c =='' || c == '\n' || c == '\t')如果 c 是空格，则没有必要再测试它是否为换行符或制表符，这样就不必执行后面两个测试。在这里，____这一点并不特别重要，但在某些更复杂的情况下这样做就有必要了，____我们将会看到这种例子。

答案：

如果 c 是空格，则没有必要再测试它是否为换行符或制表符，这样就不必执行后面两个测试。在这里，这一点并不特别重要，但在某些更复杂的情况下这样做就有必要了，否则我们将会看到这种例子。","
 ______，如果 c 是空格，则没有必要再测试它是否为换行符或制表符，这样就不必执行后面两个测试。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
这段程序中还包括一个 else 部分， 它指定当 if 语句中的条件部分为假时所要执行的动 作。其一般形式为：
if (表述式)
语句 1
else
语句 2",______是指定当 if 语句中的条件部分为假时所要执行的动作。,"
 请根据以上文本内容，完成以下填空题：
if (表述式)
{
语句 1
}
else
{
语句 2
}","
 ______是指定当 if 语句中的条件部分为假时所要执行的动作。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
if-else 中的两条语句有且仅有一条语句被执行。如果表达式的值为真，  则执行 语句 1，否则执行语句 2。这两条语句都既可以是单条语句， 也可以是括在花括号内的语句序 列。在单词计数程序中， else 之后的语句仍是一个 if 语句，该 if 语句控制了包含在花括 号内的两条语句。",______中的两条语句有且仅有一条语句被执行。,"
 请根据以上文本内容，将以下代码中的空格填入正确表达式：

if __builtin_popcount(a) __eq__(0) \
    printf(""a 的位count为 %d\n"", __builtin_popcount(a));
else
    printf(""a 是奇数\n"");
endif","
 ______中的两条语句有且仅有一条语句被执行。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
所有的输入字符可以分成 12 类，因此可以用一个数组存放各个数字出现的次数，这样比 使用 10 个独立的变量更方便。",______可以分成12类，可以用一个数组存放各个数字出现的次数。,"
 请根据以下文本内容出一道填空题:

所有的输入字符可以分成 12 类,因此可以用一个数组存放各个数字出现的次数,这样比 使用 10 个独立的变量更方便。

题目:

假设输入字符有 12 类,那么最多需要一个数组来存放各个数字出现的次数,以便比使用 10 个独立的变量更方便。因为一个数组可以用来存放多个数字,所以只需要 12 个数组元素即可。

答案:12","
 ______可以分成12类，可以用一个数组存放各个数字出现的次数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#include <stdio.h>
/* count digits, white space, others */
main()
{
int c, i, nwhite, nother;
int ndigit[10];
nwhite = nother = 0;
for (i = 0; i < 10; ++i)
ndigit[i] = 0;
while ((c = getchar()) != EOF)
if (c >= '0' && c <= '9')
++ndigit[c-'0'];
else if (c == ' ' || c == '\n' || c == '\t')
++nwhite;
else
++nother;
printf(""digits ="");
for (i = 0; i < 10; ++i)
printf("" %d"", ndigit[i]);
printf("", white space = %d, other = %d\n"",
nwhite, nother);
}",______是什么？,"
 请根据以下文本内容出一道填空题:

#include <stdio.h>
/* count digits, white space, others */
main()
{
int c, i, nwhite, nother;
int ndigit[10];
nwhite = nother = 0;
for (i = 0; i < 10; ++i)
ndigit[i] = 0;
while ((c = getchar())!= EOF)
if (c >= '0' && c <= '9')
++ndigit[c-'0'];
else if (c =='' || c == '\n' || c == '\t')
++nwhite;
else
++nother;
printf(""digits ="");
for (i = 0; i < 10; ++i)
printf("" %d"", ndigit[i]);
printf("", white space = %d, other = %d\n"",
nwhite, nother);

请填写空缺部分：

else if (c =='' || c == '\n' || c == '\t') \_\_\_\_\_\_\_\_\_;

答案：else if (c =='' || c == '\n' || c == '\t')","
 ______是什么？",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
该程序中的声明语句
int ndigit[10]，
将变量 ndigit 声明为由 10 个整型数构成的数组。",______声明了一个由10个整型数构成的数组。,"
 下面是一个可能的填空题:

将以下声明语句中的变量类型和声明方式填入空白处。

```c
void print_num(int ndigit[10]) {
    //  blank 处应填入与 ndigit 声明相同的语句。
}
```

选项:

A. int ndigit[10];
B. float ndigit[10];
C. char ndigit[10];
D. double ndigit[10];","
 ______声明了一个由10个整型数构成的数组。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在 C 语言中， 数组下标总是从 0 开始，  因此该数组的 10 个元素分别为 ndigit[0]、ndiglt[1]、…、ndigit[9]，这可以通过初始 化和打印数组的两个 for 循环语句反映出来。",______在C语言中，数组下标总是从哪里开始？,"
 下面是一个关于这个文本的填空题：

在 C 语言中，数组下标总是从 0 开始，因此该数组的 10 个元素分别为______、______、……、______。这可以通过初始化和打印数组的两个 for 循环语句反映出来。

答案：ndigit[0]、ndigit[1]、…、ndigit[9]。","
 ______在C语言中，数组下标总是从哪里开始？",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
数组下标可以是任何整型表达式，包括整型变量（如 i）以及整型常量。",______可以是任何整型表达式，包括整型变量（如 i）以及整型常量。,"
 以下是一道填空题:

数组下标可以是任何整型表达式,包括______和______。","
 ______可以是任何整型表达式，包括整型变量（如 i）以及整型常量。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
该程序的执行取决于数字的字符表示属性。例如，测试语句
if (c >= '0' && c <= '9')
用于判断 c 中的字符是否为数字。如果它是数字，  那么该数字对应的数值是
c- '0'
只有当 '0'、 '1'、… 、 '9'具有连续递增的值时，  这种做法才可行。幸运的是，所有的字符 集都是这样的。",______的执行取决于数字的字符表示属性。,"
 以下是一道根据文本内容出的填空题：

使用 if 语句判断字符 c 是否为数字，如果它是数字，那么该数字对应的数值是 ____。

答案：c - '0'","
 ______的执行取决于数字的字符表示属性。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
由定义可知，char 类型的字符是小整型， 因此 char 类型的变量和常量在算术表达式中 等价于 int 类型的变量和常量。这样做既自然又方便，例如，  c - '0'是一个整型表达式， 如果存储在 c 中的字符是'0'~'9'，其值将为 0~9，因此可以充当数组 ndigit 的合法下 标。",______类型的字符是小整型，因此在算术表达式中等价于int类型的变量和常量。,"
 以下哪个选项是正确的？

```c
c - '0' 是一个整型表达式，如果存储在 c 中的字符是'0'~'9'，其值将为 0~9，因此可以充当数组 ndigit 的合法下标。

A. 错误
B. 正确
C. 错误
D. 正确
```","
 ______类型的字符是小整型，因此在算术表达式中等价于int类型的变量和常量。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
if (c >= '0' && c <= '9')
++ndigit[c-'0'];
else if (c == ' ' || c == '\n' || c == '\t')
++nwhite;
else
++nother;",______是什么类型的字符？,"
 以下是一道根据给定代码片段填空的题目：

if (c >= '0' && c <= '9')
{
    ++ndigit[c-'0'];
}
else if (c =='' || c == '\n' || c == '\t')
{
    ++nwhite;
}
else
{
    ++nother;
}

请根据代码片段中的逻辑，将空白部分填充完整。","
 ______是什么类型的字符？",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
if (条件 1)
语句 1
else if (条件 1)
语句 2
...
e
语句 n",抱歉，这段文本内容不太适合出题。,"
 请将下面的 C 语言代码中的空格填上正确的语句。

if (条件 1) {
    语句 1;
} else if (条件 1) {
    语句 2;
}
...
else if (条件 1) {
    语句 n;
}","
 抱歉，我无法根据你提供的文本内容进行出题。请问你有其他关于C语言的问题吗？",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在这种方式中，各条件从前往后依次求值，直到满足某个条件，  然后执行对应的语句部分。  这部分语句执行完成后， 整个语句体执行结束（其中的任何语句都可以是括在花括号中的若  干条语句）。如果所有条件都不满足，则执行位于最后一个 else 之后的语句（如果有的话）。 类似于前面的单词计数程序， 如果没有最后一个 else 及对应的语句，该语句体将不执行任何  动作。",______的执行顺序是从前往后依次求值，直到满足某个条件，然后执行对应的语句部分。,"
 在这种方式中，各条件从前往后依次求值，直到满足某个条件，然后执行对应的语句部分。这部分语句执行完成后，整个语句体执行结束（其中的任何语句都可以是括在花括号中的若 干条语句）。如果所有条件都不满足，则执行位于最后一个 else 之后的语句（如果有的话）。类似于前面的单词计数程序，如果没有最后一个 else 及对应的语句，该语句体将不执行任何  动作。

填空题：在這種方式中，各條件從往後依次求值，直到滿足某個條件，然後執行對應的語句部分。這部分語句執行完畢，整個語句體執行結束（其中的任何語句都可以是括在花括號中的若 干條語句）。如果所有條件都不滿足，則執行位于最後一個 else 之后的語句（如果有的話）。類似於前面的單詞計數程序，沒有最後一個 else 及對應的語句，該語句體將不執行任何  動作。

空格处应填：如果所有条件都不满足，则执行位于最后一个 else 之后的语句（如果有的话）。","
 ______的执行顺序是从前往后依次求值，直到满足某个条件，然后执行对应的语句部分。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在第一个 if 与最后一个 else 之间可以有 0 个或多个下列形式的语句序列：
else if (条件)
语句",______可以有 0 个或多个下列形式的语句序列： ______ (条件) 语句,"
 题目：

在给定的代码段中，以下哪个部分是正确的？

```c
if (条件1) {
    // 语句1
} else if (条件2) {
    // 语句2
} else {
    // 语句3
}
```

选项：

A. 语句1
B. 语句2
C. 语句3
D. 语句1 和 语句2
E. 语句1 和 语句3
F. 语句2 和 语句3
G. 语句1、语句2 和 语句3
H. 语句1、语句2 和 语句3 的其他组合","
 ______可以有 0 个或多个下列形式的语句序列： ______ (条件) 语句",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
就程序设计风格而言，我们建议读者采用上面所示的缩进格式以体现该结构的层次关系， 否则， 如果每个 if 都比前一个 else 向里缩进一些距离， 那么较长的判定序列就可能超出页  面的右边界。",______，程序设计风格建议采用上面所示的缩进格式以体现结构的层次关系。,"
 根据上述文本内容，以下是一道填空题：

就程序设计风格而言，我们建议读者采用上面所示的缩进格式以体现该结构的层次关系，否则，如果每个 if 都比前一个 else 向里缩进一些距离，那么较长的判定序列就可能超出页面的（）。","
 ______，程序设计风格建议采用上面所示的缩进格式以体现结构的层次关系。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
switch 语句提供了编写多路分支程序的另一种方式， 它特别适合于判 定某个整型或字符表达式是否与一个常量集合中的某个元素相匹配的情况。",______提供了编写多路分支程序的另一种方式，特别适合于判断某个整型或字符表达式是否与一个常量集合中的某个元素相匹配的情况。,"
 下面是一个关于switch语句的填空题:

switch (某个整型或字符表达式) {
    case 常量集合中的某个元素:
        // 执行相应的代码块
        break;
    default:
        // 执行默认代码块
        break;
}","
 ______提供了编写多路分支程序的另一种方式，特别适合于判断某个整型或字符表达式是否与一个常量集合中的某个元素相匹配的情况。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
C 语言中的函数等价于 Fortran 语言中的子程序或函数,也等价于 Pascal 语言中的过程或 函数。函数为计算的封装提供了一种简便的方法,此后使用函数时不需要考虑它是如何实现 的。使用设计正确的函数,程序员无需考虑功能是如何实现的,而只需知道它具有哪些功能 就够了。在 C 语言中可以简单、方便、高效地使用函数。我们经常会看到在定义后仅调用了 一次的短函数,这样做可以使代码段更清晰易读。",______在C语言中提供了一种简便的方法，使得使用函数时不需要考虑它是如何实现的。,"
 C语言中的函数等价于Fortran语言中的__________,也等价于Pascal语言中的__________。使用设计正确的函数,程序员无需考虑功能是如何实现的,而只需知道它具有哪些功能就够了。在C语言中可以简单、方便、高效地使用__________。","
 ______在C语言中提供了一种简便的方法，使得使用函数时不需要考虑它是如何实现的。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
 C 语言没有像 Fortran 语言一样提供 类似于**的求幕运算符,我们现在通过编写一个求幕的函数 power(m, n)来说明函数定义 的方法。power(m, n)函数用于计算整数 m 的 n次幕,其中 n是正整数。对函数调用 power(2, 5)来说,其结果值为 32。该函数并非一个实用的求幕函数,它只能处理较小的整数的正整数 次幕,但这对于说明问题已足够了。（标准库中提供了一个计算 xy 的函数 pow(x, y)。）",______语言没有提供类似于**的求幂运算符。,"
 C 语言没有像 Fortran 语言一样提供 类似于**的求幕运算符,我们现在通过编写一个求幕的函数 power(m, n)来说明函数定义的方法。power(m, n)函数用于计算整数 m 的 n次幕,其中 n是正整数。对函数调用 power(2, 5)来说,其结果值为 32。该函数并非一个实用的求幕函数,它只能处理较小的整数的正整数次幕,但这对于说明问题已足够了。（标准库中提供了一个计算 xy 的函数 pow(x, y)。）

填空题：

C 语言没有像 Fortran 语言一样提供 类似于**的求幕运算符,我们现在通过编写一个求幕的函数 power(m, n)来说明函数定义的方法。power(m, n)函数用于计算整数 m 的 n次幕,其中 n是正整数。对函数调用 power(2, 5)来说,其结果值为 32。该函数并非一个实用的求幕函数,它只能处理较小的整数的正整数次幕,但这对于说明问题已足够了。（标准库中提供了一个计算 xy 的函数 pow(x, y)。）

空格处应填：**。","
 ______语言没有提供类似于**的求幂运算符。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#include <stdio.h>
int power(int m, int n);
/* test power function */
main()
{
int i;
for (i = 0; i < 10; ++i)
printf(""%d %d %d\n"", i, power(2,i), power(-3,i));
return 0;
}
/* power: raise base to n-th power; n >= 0 */
int power(int base, int n)
{
int i, p;
p = 1;
for (i = 1; i <= n; ++i)
p = p * base;
return p;
}",______函数的作用是将一个数的幂返回。,"
 请根据以下文本内容出一道填空题:

#include <stdio.h>
int power(int m, int n);
/* test power function */
main()
{
int i;
for (i = 0; i < 10; ++i)
printf(""%d %d %d\n"", i, power(2,i), power(-3,i));
return 0;
}
/* power: raise base to n-th power; n >= 0 */
int power(int base, int n)
{
int i, p;
p = 1;
for (i = 1; i <= n; ++i)
p = p * base;
return p;
}

【题目】
根据上述C语言代码，以下哪个选项能够正确地计算出输入的幂函数值？

A. 2^0
B. 2^5
C. 3^2
D. -3^3","
 ______函数的作用是将一个数的幂返回。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数定义的一般形式为：
返回值类型 函数名(0 个或多个参数声明)
{
声明部分
语句序列
}",______的一般形式为：返回值类型 函数名(0 个或多个参数声明) {声明部分 语句序列},"
 请根据以下文本内容完成填空题：

函数定义的一般形式为：
返回值类型 函数名(0 个或多个参数声明)
{
声明部分
语句序列
}

题目：以下哪个部分不是函数定义的一般形式？
A. 返回值类型
B. 函数名
C. 参数声明
D. 声明部分","
 ______的一般形式为：返回值类型 函数名(0 个或多个参数声明) {声明部分 语句序列}",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数定义可以以任意次序出现在一个源文件或多个源文件中， 但同一函数不能分割存放 在多个文件中。如果源程序分散在多个文件中，那么， 在编译和加载时，就需要做更多的工 作，但这是操作系统的原因， 并不是语言的属性决定的。我们暂且假定将 main 和 power 这 两个函数放在同一文件中，这样前面所学的有关运行 C 语言程序的知识仍然有效。",______的定义可以以任意次序出现在一个源文件或多个源文件中，但同一函数不能分割存放在多个文件中。,"
 函数定义可以以任意次序出现在一个源文件或多个源文件中，但同一函数不能分割存放 在多个文件中。如果源程序分散在多个文件中，那么，在编译和加载时，就需要做更多的 工作，但这是操作系统的原因，并不是语言的属性决定的。我们暂且假定将 main 和 power 这 两个函数放在同一文件中，这样前面所学的有关运行 C 语言程序的知识仍然有效。

填空题：在上述文本中，如果源程序分散在多个文件中，那么在编译和加载时______的工作要做。

答案：更多","
 ______的定义可以以任意次序出现在一个源文件或多个源文件中，但同一函数不能分割存放 在多个文件中。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
main 函数在下列语句中调用了两次 power 函数：
printf(""%d %d %d\n"", i, power(2, i), power(-i, 3));",______函数在main函数中被调用了两次。,"
 请根据以下文本内容出一道填空题：

main 函数在下列语句中调用了两次 power 函数：
printf(""%d %d %d\n"", i, power(2, i), power(-i, 3));

题目：将以下代码中的 power 函数调用次数填入空格，使代码完整运行。

```c
main 函数在下列语句中调用了两次 power 函数：
printf(""%d %d %d\n"", i, power(2, i), power(-i, 3));
```

答案： twice","
 ______函数在main函数中被调用了两次。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
每次调用时，main 函数向 power 函数传递两个参数；在调用执行完成时，power 函数向 main 函数返回一个格式化的整数并打印。在表达式中，power(2, i)同 2 和 i一样都是整数（并 不是所有函数的结果都是整型值）。",______函数接收两个参数，并返回一个格式化的整数。,"
 请根据以下文本内容出一道填空题:

每次调用时，main 函数向 power 函数传递两个参数；在调用执行完成时，power 函数向 main 函数返回一个格式化的整数并打印。在表达式中，power(2, i)同 2 和 i一样都是整数（并 不是所有函数的结果都是整型值）。

问题：在 power 函数中，以下哪个选项不是合法的返回值格式？

A. int
B. float
C. double
D. char

正确答案：D","
 ______函数接收两个参数，并返回一个格式化的整数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
power 函数的第一行语句
int power(int base, int n)
声明参数的类型、名字以及该函数返回结果的类型。",______函数的第一行语句,"
 power 函数的第一行语句是：
int power(int base, int n);","
 ______函数的第一行语句",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
power 函数的参数使用的名字只在 power 函数内部有效，对其它任何函数都是不可见的：其它函数可以使用与之相同的参数名字而不 会引起冲突。变量 i 与 p 也是这样：  power 函数中的 i 与 main 函数中的 i 无关。",______函数的参数名字只在函数内部有效，对其它任何函数都是不可见的。,"
 请根据上述文本内容，将下面的代码中的空格填入正确的变量名。

void power(int *i, int p) {
    // 
    // 
    // 
    // 
    // 
    // 
    // 
}

void main() {
    int i = 5;
    int p = 3;
    power(i, p);
    // 
    // 
    // 
    // 
    // 
    // 
    // 
}","
 ______函数的参数名字只在函数内部有效，对其它任何函数都是不可见的。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
我们通常把函数定义中圆括号内列表中出现的变量称为形式参数，而把函数调用中与形 式参数对应的值称为实际参数。",______通常被称为形式参数。,"
 形式参数是圆括号内列表中出现的变量,实际参数是与形式参数对应的值。","
 ______通常被称为形式参数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
power 函数计算所得的结果通过 return 语句返回给 main 函数。关键字 return 的后 面可以跟任何表达式，形式为：
return 表达式 ;",______函数计算所得的结果通过______语句返回给______函数。,"
 请根据以下文本内容出一道填空题:

在 C 语言中,power 函数计算所得的结果通过____语句返回给 main 函数。关键字 return 的后 ____可以跟任何表达式,形式为:
return ____ ;","
 ______函数计算所得的结果通过______语句返回给______函数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数不一定都有返回值。不带表达式的 return 语句将把控制权返回给调用者， 但不返回有 用的值。这等同于在到达函数的右终结花括号时，函数就“到达了尽头”。主调函数也可以忽 略函数返回的值。",______一定有返回值吗？,"
 下面是一个关于C语言的填空题：

函数不一定都有______。不带表达式的 ```return 语句将把控制权返回给调用者，但不返回有用的值。这等同于在到达函数的右终结花括号时，函数就“到达了尽头”。主调函数也可以忽略函数返回的值。

答案：返回值","
 ______一定有返回值吗？",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
读者可能已经注意到，main 函数的末尾有一个 return 语句。由于 main 本身也是函数， 因此也可以向其调用者返回一个值，该调用者实际上就是程序的执行环境。 一般来说，  返回  值为 0 表示正常终止，返回值为非 0 表示出现异常情况或出错结束条件。为简洁起见，前面  的 main 函数都省略了 return 语句，但我们将在以后的 main 函数中包含 return 语句，   以提醒大家注意，程序还要向其执行环境返回状态。",______函数的返回值为0表示正常终止，返回值为非0表示出现异常情况或出错结束条件。,"
 由于 main 本身也是函数，因此也可以向其调用者返回一个值，该调用者实际上就是程序的执行环境。一般来说，返回值为 0 表示正常终止，返回值为非 0 表示出现异常情况或出错结束条件。为简洁起见，前面的 main 函数都省略了 return 语句，但我们将在以后的 main 函数中包含 return 语句， 以提醒大家注意，程序还要向其执行环境返回状态。

空格处应填：非零。","
 ______函数的返回值为0表示正常终止，返回值为非0表示出现异常情况或出错结束条件。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
出现在 main 函数之前的声明语句
int power(int m, int n);
表明 power 函数有两个 int 类型的参数，并返回一个 int 类型的值。这种声明称为函数原 型，它必须与 power 函数的定义和用法一致。如果函数的定义、用法与函数原型不一致，将 出现错误。",______声明语句表明函数有两个 int 类型的参数，并返回一个 int 类型的值。,"
 请根据以下文本内容出一道填空题:

出现在 main 函数之前的声明语句是______。

答案:int power(int m, int n);","
 ______声明语句表明函数有两个 int 类型的参数，并返回一个 int 类型的值。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数原型与函数声明中参数名不要求相同。事实上，函数原型中的参数名是可选的，这 样上面的函数原型也可以写成以下形式  int power(int, int);
但是，合适的参数名能够起到很好的说明性作用，因此我们在函数原型中总是指明参数 名。",______中的参数名是可选的。,"
 题目：下面哪个函数原型是正确的？

A. power(int);
B. power(int, int);
C. power(int, int);
D. power();

答案：B。","
 ______中的参数名是可选的。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
/* power: raise base to n-th power; n >= 0 */
/*        (old-style version) */
power(base, n)
int base, n;
{
int i, p;
p = 1;
for (i = 1; i <= n; ++i)
p = p * base;
return p;
}",______是将底数提高到n次幂的函数。,"
 请根据以下文本内容出一道填空题:

void power(int base, int n);

int main()
{
int base, n;
printf(""Enter the base: "");
scanf(""%d"", &base);
printf(""Enter the exponent: "");
scanf(""%d"", &n);
printf(""Result: %d\n"", power(base, n));
return 0;
}","
 ______是将底数 raise 到 n 次幂的函数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
其中，参数名在圆括号内指定，参数类型在左花括号之前声明。如果没有声明某个参数的类 型，则默认为 int 类型。",______，参数类型在左花括号之前声明。,"
 请根据以下文本内容出一道填空题:

其中,参数名在圆括号内指定,参数类型在左花括号之前声明。如果没有声明某个参数的类 型,则默认为 int 类型。

填空题:

在以下函数定义中,哪个参数的类型默认为 int 类型?

\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_ \_\_\_\_\_\_\_\_\_\_ (int \_num, int \_max)

答案:如果没有声明某个参数的类型,则默认为 int 类型。","
 ______，参数类型在左花括号之前声明。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在 C 语言的最初定义中，可以在程序的开头按照下面这种形式声明 power 函数：
int power();",______是在 C 语言程序开头声明的一个函数。,"
 在 C 语言的最初定义中，可以在程序的开头按照下面这种形式声明 power 函数：
int power(int base, int exponent);","
 ______是在 C 语言程序开头声明的一个函数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数声明中不允许包含参数列表，这样编译器就无法在此时检查 power 函数调用的合法性。 事实上， power 函数在默认情况下将被假定返回 int 类型的值，   因此整个函数的声明可以全 部省略。",______声明中不允许包含参数列表。,"
 根据以上文本，以下是一个关于C语言的填空题：

在C语言中，函数声明中不允许包含参数列表，这样编译器就无法在此时检查______函数调用的合法性。事实上，______函数在默认情况下将被假定返回______类型的值，因此整个函数的声明可以全部省略。

答案：power; int;","
 ______声明中不允许包含参数列表。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在 ANSIC 中定义的函数原型语法中，编译器可以很容易检测出函数调用中参数数目和类 型方面的错误。 ANSI C 仍然支持旧式的函数声明与定义，这样至少可以有一个过渡阶段。但 我们还是强烈建议读者：在使用新式的编译器时，最好使用新式的函数原型声明方式。",______中定义的函数原型语法可以很容易检测出函数调用中参数数目和类型方面的错误。,"
 下面是一道填空题:

在 ANSIC 中定义的函数原型语法中,编译器可以很容易地检测出函数调用中参数数目和类型方面的错误。ANSI C 仍然支持旧式的函数声明与定义,这样至少可以有一个过渡阶段。但我们应该强烈建议读者:在使用新式的编译器时,最好使用新式的函数原型声明方式。

空格处应填入什么词语?","
 ______中定义的函数原型语法可以很容易检测出函数调用中参数数目和类型方面的错误。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在 C 语言中，所有函数参数都是“通过值”传递的。也就是说， 传递给被调用函数的  参数值存放在临时变量中，而不是存放在原来的变量中。这与其它某些语言是不同的，比如， Fortran 等语言是“通过引用调用”，Pascal 则采用 var 参数的方式，在这些语言中，被调用的  函数必须访问原始参数，而不是访问参数的本地副本。",______在C语言中，所有函数参数都是“通过值”传递的。,"
 在 C 语言中，所有函数参数都是“通过值”传递的。也就是说，传递给被调用函数的参数值存放在临时变量中，而不是存放在原来的变量中。这与其它某些语言是不同的，比如，Fortran 等语言是“通过引用调用”，Pascal 则采用 var 参数的方式，在这些语言中，被调用的函数必须访问原始参数，而不是访问参数的本地副本。

填空题：在 C 语言中，所有函数参数都是“通过值”传递的。也就是说，传递给被调用函数的参数值存放在临时变量中，而不是存放在原来的变量中。这与其它某些语言是不同的，比如，Fortran 等语言是“通过引用调用”，Pascal 则采用 ______ 参数的方式，在这些语言中，被调用的函数必须访问原始参数，而不是访问参数的本地副本。

答案：var","
 ______在C语言中，所有函数参数都是“通过值”传递的。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
最主要的区别在于， 在 C 语言中， 被调用函数不能直接修改主调函数中变量的值，而只 能修改其私有的临时副本的值。",______在C语言中，被调用函数不能直接修改主调函数中变量的值，而只能修改其私有的临时副本的值。,"
 请根据以下文本内容出一道填空题:

最主要的区别在于， 在 C 语言中， 被调用函数不能直接修改主调函数中变量的值，而只 能修改其私有的临时副本的值。

问题：在 C 语言中，被调用函数______修改主调函数中变量的值。

答案：不能直接修改","
 ______在C语言中，被调用函数不能直接修改主调函数中变量的值，而只能修改其私有的临时副本的值。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
传值调用的利大于弊。在被调用函数中，参数可以看作是便于初始化的局部变量，  因此 额外使用的变量更少。这样程序可以更紧凑简洁。",______调用的利大于弊。,"
 请根据以下文本内容出一道填空题:

传值调用的利大于弊。在被调用函数中，参数可以看作是便于初始化的局部变量，  因此 额外使用的变量更少。这样程序可以更紧凑简洁。

题目：传值调用的优点是______。

答案：A. 参数可以在被调用函数中初始化
B. 参数可以被复用
C. 参数可以看作是便于初始化的局部变量，因此额外使用的变量更少
D. 参数可以被修改","
 ______调用的利大于弊。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
/* power: raise base to n-th power; n >= 0; version 2 */
int power(int base, int n)
{
int p;
for (p = 1; n > 0; --n)
p = p * base;
return p;
}",______函数用于计算一个数的n次方。,"
 以下是一道填空题:

void power(int base, int n)
{
int p;
for (p = 1; n > 0; --n)
p = p * base;
return p;
}

题目要求我们填写空格处的正确代码。正确的代码应该是 missing(base, n)。","
 ______函数用于计算一个数的n次方。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
其中，参数 n 用作临时变量，并通过随后执行的 for 循环语句递减，直到其值为 0，这样就 不需要额外引入变量 i；power 函数内部对 n 的任何操作不会影响到调用函数中 n 的原始参 数值。",______参数用作临时变量，并通过随后执行的 for 循环语句递减，直到其值为 0，这样就不需要额外引入变量 i。,"
 请根据以下文本内容出一道填空题:

在 C 语言中，for 循环语句通常用于实现______操作，以使得循环变量在循环体内按照设定的条件逐渐减小，直到达到某个值而停止循环。本题中，参数______用于定义循环变量，并通过随后执行的循环语句逐渐减小，直到其值为 0，这样就不需要额外引入变量______。此外，函数内部对______的任何操作都不会影响到调用函数中______的原始数值。

请将空缺部分填上正确的词语。","
 ______参数用作临时变量，并通过随后执行的 for 循环语句递减，直到其值为 0，这样就不需要额外引入变量 i。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
必要时， 也可以让函数能够修改主调函数中的变量。这种情况下，调用者需要向被调用  函数提供待设置值的变量的地址（从技术角度看，地址就是指向变量的指针），而被调用函数  则需要将对应的参数声明为指针类型，并通过它间接访问变量。",______，调用者需要向被调用函数提供待设置值的变量的地址。,"
 填空题如下：

必要时， 也可以让函数能够修改主调函数中的变量。这种情况下，调用者需要向被调用 **函数** 提供待设置值的变量的地址（从技术角度看，地址就是指向变量的指针），而被调用函数 **则** 需要将对应的参数声明为指针类型，并通过它间接访问变量。","
 ______，调用者需要向被调用函数提供待设置值的变量的地址。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
如果是数组参数，情况就有所不同了。当把数组名用作参数时，传递给函数的值是数组 起始元素的位置或地址——它并不复制数组元素本身。在被调用函数中，可以通过数组下标 访问或修改数组元索的值。",______参数时，传递给函数的值是数组起始元素的位置或地址——它并不复制数组元素本身。,"
 假设有一个数组int arr[5];，其中arr[0] = 1, arr[1] = 2, arr[2] = 3, arr[3] = 4, arr[4] = 5。现在定义一个函数void modify_array(int arr[], int start_index), 用于修改数组中指定起始位置的元素值。

以下是一个可能的实现:

```c
void modify_array(int arr[], int start_index, int value) {
    // 检查起始位置是否在数组范围内
    if (start_index >= 0 && start_index < 5) {
        // 修改数组中指定位置的元素值
        arr[start_index] = value;
    } else {
        printf(""无效的起始位置\n"");
    }
}
```

现在可以调用该函数修改数组元素值,例如:

```c
int main() {
    // 初始化数组
    arr[0] = 1;
    arr[1] = 2;
    arr[2] = 3;
    arr[3] = 4;
    arr[4] = 5;

    // 修改数组中第二个元素值
    modify_array(arr, 1, 10);

    // 输出修改后的数组
    for (int i = 0; i < 5; i++) {
        printf(""%d "", arr[i]);
    }

    return 0;
}
```

运行上述程序,将输出:

```
2 10 3 4 5
```

根据上述文本内容,以下哪个选项是正确的?

A. 数组名作为参数传递时,传递的是数组的起始元素位置或地址,而不是数组元素本身。
B. 数组名作为参数传递时,传递的是数组元素的值,而不是数组元素本身。
C. 在调用函数时,数组元素的值会自动传递给函数。
D. 在调用函数时,数组元素的地址会被传递给函数。","
 ______参数时，传递给函数的值是数组起始元素的位置或地址——它并不复制数组元素本身。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
while (还有未处理的行)
if (该行比已处理的最长行还要长)
保存该行为最长行
保存该行的长度
打印最长的行",______是保存最长行的变量类型？,"
 以下是一道根据给定文本内容出的填空题:

在C语言中,以下代码段的正确顺序是:

while (还有未处理的行) {
if (该行比已处理的最长行还要长) {
保存该行为最长行
保存该行的长度
}
}

填空题:

将上述代码中的空格替换为正确的运算符和括号,使得代码能够正常运行并实现所需功能。正确答案见下:

while (还有未处理的行) {
if (该行比已处理的最长行还要长) {
保存该行为最长行
保存该行的长度
}
}","
 ______是保存最长行的变量类型？",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
从上面的框架中很容易看出，程序很自然地分成了若干片断，分别用于读入新行、测试读入 的行、保存该行，其余部分则控制这一过程。",______很自然地分成了若干片断，分别用于读入新行、测试读入的行、保存该行。,"
 下面是一道填空题:

从上面的框架中很容易看出,程序很自然地分成了若干片断,分别用于读入新行、测试读入 的行、保存该行,其余部分则控制这一过程。

空格处应填入:保存该行。","
 ______很自然地分成了若干片断，分别用于读入新行、测试读入的行、保存该行。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
首先，我们编写一个独立的函数 getline，它读取输入的下一行。我们尽量保持该函数在其它场台也有用。至少 getline 函数应该在读到文件末尾时返回一个信号；更为有用的设计是它能够在读入文本行 时返回该行的长度， 而在遇到文件结束符时返回 0。由于 0 不是有效的行长度， 因此可以作为 标志文件结束的返回值。每一行至少包括一个字符， 只包含换行符的行， 其长度为 1。
当发现某个新读入的行比以前读入的最长行还要长时，  就需要把该行保存起来。也就是 说，我们需要用另一个函数 copy 把新行复制到一个安全的位置。
最后，我们需要在主函数 main 中控制 getline 和 copy 这两个函数。",______函数用于读取输入的下一行，并在读到文件末尾时返回一个信号。,"
 以下是一道根据文本内容填空的题目：

在 C 语言中，我们编写一个独立的函数 getline，它读取输入的下一行。该函数至少应该在 reading 文件末尾时返回一个信号，更为有用的设计是它能够在读入文本行时返回该行的长度，而在遇到文件结束符时返回 0。由于 0 不是有效的行长度，因此可以作为 标志文件结束的返回值。每一行至少包括一个字符，只包含换行符的行，其长度为 1。当发现某个新读入的行比以前读入的最长行还要长时，  就需要把该行保存起来。也就是 说，我们需要用另一个函数 copy 把新行复制到一个安全的位置。最后，我们需要在主函数 main 中控制 getline 和 copy 这两个函数。

请根据文本内容，完成以下空白部分：

在 C 语言中，我们编写一个独立的函数 getline，该函数至少应该在 reading 文件末尾时返回一个信号，更为有用的设计是它能够在读入文本行时返回该行的长度，而在遇到文件结束符时返回 0。由于 0 不是有效的行长度，因此可以作为 标志文件结束的返回值。每一行至少包括一个字符，只包含换行符的行，其长度为 1。当发现某个新读入的行比以前读入的最长行还要长时，  _____。

答案：就需要把该行保存起来。","
 ______函数用于读取输入的下一行，并在读到文件末尾时返回一个信号。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#include <stdio.h>
#define MAXLINE 1000   /* maximum input line length */
int getline(char line[], int maxline);
void copy(char to[], char from[]);
/* print the longest input line */
main()
{
int len;          /* current line length */
int max;          /* maximum length seen so far */
char line[MAXLINE];   /* current input line */
char longest[MAXLINE]; /* longest line saved here */
max = 0;
while ((len = getline(line, MAXLINE)) > 0)
if (len > max) {
max = len;
copy(longest, line);
}
if (max > 0)  /* there was a line */
printf(""%s"", longest);
return 0;
}
/* getline: read a line into s, return length  */
int getline(char s[],int lim)
{
int c, i;
for (i=0; i < lim-1 && (c=getchar())!=EOF && c!='\n'; ++i)
s[i] = c;
if (c == '\n') {
s[i] = c;
++i;
}
s[i] = '\0';
return i;
}
/* copy:  copy 'from' into 'to'; assume to is big enough */
void copy(char to[], char from[])
{
int i;
i = 0;
while ((to[i] = from[i]) != '\0')
++i;
}",______是当前行的长度。,"= 0; i < lim; i++) {
c = getchar();
if (c == '\n')
return i;
}
s[i] = '\0';
return i;
}
/* copy: copy a line from memory to s */
void copy(char to[], char from[])
{
int i;
for (i = 0; i < strlen(from); i++) {
to[i] = from[i];
}
}


题目：在上述代码中，以下哪个函数是正确的 implement of `getline`?

A. `getline`
B. `getline`
C. `getline`
D. `getline`

正确答案：A. `getline`","
 ______是",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
程序的开始对 getline 和 copy 这两个函数进行了声明， 这里假定它们都存放在同一个 文件中。",______和______这两个函数在程序的开始进行了声明。,"
 以下是一道填空题:

程序的开始对 getline 和 copy 这两个函数进行了声明, 这里假定它们都存放在同一个 文件中。

填空题:

在 C 语言中,为了使用函数,需要在程序的哪个部分声明它?

答案:在函数定义之前,使用关键字 ```typedef``` 或者 ```declare``` 进行声明。","
 ______和______这两个函数在程序的开始进行了声明。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
main 与 getline 之间通过一对参数及一个返回值进行数据交换。",______ 与 ______ 之间通过一对参数及一个返回值进行数据交换。,"
 请根据以下文本内容出一道填空题:

main 与 getline 之间通过一对参数及一个返回值进行数据交换。

题目:

在 C 语言中,main 函数和 getline 函数之间通过一对参数及一个返回值进行数据交换。下面哪个选项是正确的?

A. 一个整数和一个字符串
B. 一个字符串和一个整数
C. 一个整数和一个字符串
D. 一个字符串和一个整数

答案:D. 一个字符串和一个整数","
 ______ 与 ______ 之间通过一对参数及一个返回值进行数据交换。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在 getline 函数中， 两个参数是通过程序行
int getline(char s[], int lim)
声明的，它把第一个参数 s 声明为数组， 把第二个参数 lim 声明为整型，声明中提供数组大 小的目的是留出存储空间。在 getline 函数中没有必要指明数组 s 的长度， 这是因为该数组的大小是在 main 函数中设置的。","______函数中，两个参数是通过程序行 int getline(char s[], int lim) 声明的。","
 在 getline 函数中，两个参数是通过程序行__1__宣告的，它把第一个参数 s 声明为数组，把第二个参数 lim 声明为整型，声明中提供数组大小的目的是留出存储空间。在 getline 函数中没有必要指明数组 s 的长度，这是因为该数组的大小是在 main 函数中设置的。

答案：int getline(char s[], int lim)","
 ______函数中，两个参数是通过程序行 int getline(char s[], int lim) 声明的。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
如同 power 函数一样， getline 函数使用了一个 return 语句将值返回给其调用者。上述程序行也声明了 getline 数的返回值类型为 int。由于函数 的默认返回值类型为 int，因此这里的 int 可以省略。",______函数使用了一个 return 语句将值返回给其调用者。,"
 请根据以下文本内容出一道填空题:

如同 power 函数一样， getline 函数使用了一个 return 语句将值返回给其调用者。上述程序行也声明了 getline 数的返回值类型为 int。由于函数 的默认返回值类型为 int，因此这里的 int 可以省略。

题目：在上述文本中，getline 函数的返回值类型是______。

答案：int","
 ______函数使用了一个 return 语句将值返回给其调用者。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
有些函数返回有用的值，而有些函数（如 copy）仅用于执行一些动作， 并不返回值。copy 函数的返回值类型为 void，它显式说明该函数不返回任何值。",______函数返回有用的值，而有些函数（如 copy）仅用于执行一些动作， 并不返回值。,"
 copy 函数的返回值类型为 \_\_\_\_\_\_\_\_，它显式说明该函数不返回任何值。","
 ______函数返回有用的值，而有些函数（如 copy）仅用于执行一些动作， 并不返回值。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
getline 函数把字符'\0'（即空字符，其值为 0）插入到它创建的数组的末尾， 以标记 字符串的结束。这一约定已被 C 语言采用：当在 C 语言程序中出现类似于
""hello\0""
的字符串常量时， 它将以字符数组的形式存储，数组的各元素分别存储字符串的各个字符， 并以'\0'标志字符串的结束。",______函数把字符'\0'插入到它创建的数组的末尾，以标记字符串的结束。,"
 以下是一道根据文本内容填空的题目：

在 C 语言中，当使用 getline 函数创建一个字符串数组时，字符串的结束标志是字符 '\0'（即空字符，其值为 0），它被插入到数组的末尾。这一约定在程序中示例为：

```c
char str[10] = ""hello\0"";
```

在上述代码中，数组各元素分别存储字符串的各个字符，并以 '\0' 标志字符串的结束。空格可以用来填充字符数组的大小。","
 ______函数把字符'\0'插入到它创建的数组的末尾，以标记字符串的结束。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
printf 函数中的格式规范%s 规定， 对应的参数必须是以这种形式表示的字符串。",______函数中的格式规范%s规定，对应的参数必须是以这种形式表示的字符串。,"
 printf 函数中的格式规范%s 规定， 对应的参数必须是以这种形式表示的字符串。

答案：字符串形式。","
 ______函数中的格式规范%s规定，对应的参数必须是以这种形式表示的字符串。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
copy 函数  的实现正是依赖于输入参数由'\0'结束这一事实， 它将'\0'拷贝到输出参数中。（也就是说， 空字符'\0'不是普通文本的一部分。）",______函数的实现依赖于输入参数由'\0'结束这一事实。,"
 请根据以下文本内容出一道填空题:

copy 函数的实现正是依赖于输入参数由\0'结束这一事实,它将\0'拷贝到输出参数中。(也就是说,空字符'\0'不是普通文本的一部分。)

题目:在C语言中,copy 函数用于实现什么功能?

答案: copy 函数用于将一个字符串拷贝到另一个字符串中。","
 ______函数的实现依赖于输入参数由'\0'结束这一事实。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
值得一提的是，  即使是上述这样很小的程序，  在传递参数时也会遇到一些麻烦的设计问题。例如，  当读入的行长度大于允许的最大值时，main 函数应该如何处理，  getline 函数 的执行是安全的， 无论是否到达换行符字符，当数组满时它将停止读字符。main 函数可以通 过测试行的长度以及检查返回的最后一个字符来判定当前行是否太长， 然后再根据具体的情 况处理。","______参数传递时可能遇到的设计问题
______函数在处理行长度大于允许的最大值时的处理方式","
 值得一提的是，即使是上述这样很小的程序，在传递参数时也会遇到一些麻烦的设计问题。例如，当读入的行长度大于允许的最大值时，main 函数应该如何处理，以及当数组满时它将停止读字符。main 函数可以通过测试行的长度以及检查返回的最后一个字符来判定当前行是否太长，然后再根据具体的情况处理。

填空题：当读入的行长度大于允许的最大值时，main 函数应该处理______。","
 ______参数传递时可能遇到的设计问题
______函数在处理行长度大于允许的最大值时的处理方式",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
调用 getline 函数的程序无法预先知道输入行的长度，因此 getline 函数需要检查是 否溢出。另一方面， 调用 copy 函数的程序知道（也可以找出）  字符串的长度，  因此该函数不 需要进行错误检查。",______函数需要检查是否溢出。,"
 以下是一道根据文本内容的填空题：

getline 函数需要检查是否溢出，因为调用该函数的程序无法预先知道输入行的长度。而在调用 copy 函数的程序中，知道（也可以找出）字符串的长度，所以该函数不需要进行错误检查。","
 ______函数需要检查是否溢出。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
main 函数中的变量（如 line、longest 等）是 main 函数的私自变量或局部变量。由 于它们是在 main 函数中声明的， 因此其它函数不能直接访问它们。其它函数中声明的变量也 同样如此。例如， getline 函数中声明的变量 i 与 copy 函数中声明的变量 i 没有关系。函 数中的每个局部变量只在函数被调用时存在，在函数执行完毕退出时消失。这也是其它语言通常把这类变量称为自动变最的原因。以后我们使用“自动变量”代表“局部变量”。",______是在 main 函数中声明的变量，因此其它函数不能直接访问它们。,"
 下面是一个填空题，请根据文本内容完成：

在 C 语言中，主函数中的变量属于______变量。由于它们是在主函数中声明的，因此其他函数不能直接访问它们。其他函数中声明的变量也同樣如此。","
 ______是在 main 函数中声明的变量，因此其它函数不能直接访问它们。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
由于自动变量只在函数调用执行期间存在，因此，在函数的两次调用之间，  自动变量不 保留前次调用时的赋值， 且在每次进入函数时都要显式为其赋值。如果自动变量没有赋值，  则其中存放的是无效值。",______在函数调用执行期间存在，但在两次调用之间不保留前次调用时的赋值。,"
 由于自动变量只在函数调用执行期间存在，因此，在函数的两次调用之间，自动变量不保留前次调用时的赋值，且在每次进入函数时都要显式为其赋值。如果自动变量没有赋值，则其中存放的是无效值。

填空题：在函数的两次调用之间，自动变量不保留前次调用时的______，且在每次进入函数时都要显式为其赋值。如果自动变量没有赋值，则其中存放的是______。

答案：在函数的两次调用之间，自动变量不保留前次调用时的赋值，且在每次进入函数时都要显式为其赋值。如果自动变量没有赋值，则其中存放的是无效值。","
 ______在函数调用执行期间存在，但在两次调用之间不保留前次调用时的赋值。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
除自动变量外， 还可以定义位于所有函数外部的变量，  也就是说，在所有函数中都可以 通过变量名访问这种类型的变量（这机制同 Fortran 语言中的 COMMON 变量或 Pascal 语言中 最外层程序块声明的变量非常类似）。",______是指位于所有函数外部的变量，可以在所有函数中通过变量名访问。,"
 下面是一个相关的填空题：

除自动变量外，______可以定义位于所有函数外部的变量。

答案：静态变量","
 ______是指位于所有函数外部的变量，可以在所有函数中通过变量名访问。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
由于外部变量可以在全局范围内访问，因此，函数间可 以通过外部变量交换数据，而不必使用参数表。再者， 外部变量在程序执行期间一直存在，  而不是在函数调用时产生、在函数执行完毕时消失。即使在对外部变量赋值的函数返回后，  这些变量仍将保持原来的值不变。",______可以在全局范围内访问，因此，函数间可以通过外部变量交换数据，而不必使用参数表。,"
 由于外部变量可以在全局范围内访问，因此，函数间可以通过外部变量交换数据，而不必使用参数表。再者，外部变量在程序执行期间一直存在，而不是在函数调用时产生、在函数执行完毕时消失。即使在对外部变量赋值的函数返回后，这些变量仍将保持原来的值不变。

填空题：

由于外部变量可以在全局范围内访问，因此，函数间可以_______通过外部变量交换数据，而不必使用参数表。再者，外部变量在程序执行期间一直存在，而不是在函数调用时产生、在函数执行完毕时消失。即使在对外部变量赋值的函数返回后，这些变量仍将保持原来的_______。","
 ______可以在全局范围内访问，因此，函数间可以通过外部变量交换数据，而不必使用参数表。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
外部变量必须定义在所有函数之外，且只能定义一次， 定义后编译程序将为它分配存储 单元。在每个需要访问外部变量的函数中，必须声明相应的外部变量， 此时说明其类型。声 明时可以用 extern 语句显式声明，也可以通过上下文隐式声明。",______必须定义在所有函数之外，且只能定义一次。,"
 以下哪个语句可以用来声明一个外部变量？

A. int a;
B. extern int a;
C. int a;
D. a;","
 ______必须定义在所有函数之外，且只能定义一次。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
int getline(void);
void copy(void);
/* print longest input line; specialized version */
main()
{
int len;
extern int max;
extern char longest[];
max = 0;
while ((len = getline()) > 0)
if (len > max) {
max = len;
copy();
}
if (max > 0)  /* there was a line */
printf(""%s"", longest);
return 0;
}
/* getline: specialized version */
int getline(void)
{
int c, i;
extern char line[];
for (i = 0; i < MAXLINE - 1
&& (c=getchar)) != EOF && c != '\n'; ++i)
line[i] = c;
if (c == '\n') {
line[i] = c;
++i;
}
line[i] = '\0';
return i;
}
/* copy: specialized version */
void copy(void)
{
int i;
extern char line[], longest[];
i = 0;
while ((longest[i] = line[i]) != '\0')
++i;
}",______函数用于获取输入行的长度。,"copy: specialized version */
void copy(void)
{
int i;
extern char *longest;
longest[max] = '\0';
for (i = 0; i < max; ++i)
longest[i] = longest[max - 1 - i];
}

在这段C语言代码中，以下哪个函数不是专门用于处理输入行的？

A. getline
B. copy
C. printf

答案：C","
 ______函数用于获取输入",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
前几行定义了 main、getline 与 copy 函数使用的几个外部变量，  声明 了各外部变量的类型，这样编译程序将为它们分配存储单元。",______函数使用的几个外部变量是什么？,"
 请根据以下文本内容出一道填空题：

前几行定义了 main、getline 与 copy 函数使用的几个外部变量，  声明了各外部变量的类型，这样编译程序将为它们分配存储单元。

题目：在声明各外部变量时，请用 C 语言中正确的语法来表示。

选项：
A. 声明外部变量 using 类型;
B. 声明外部变量 with 类型;
C. 声明外部变量 of 类型;
D. 声明外部变量 using 类型。","
 ______函数使用的几个外部变量是什么？",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
从语法角度看， 外部变量的定 义与局部变量的定义是相同的，但由于它们位于各函数的外部，  因此这些变量是外部变量。 ",______的定义与局部变量的定义是相同的，但由于它们位于各函数的外部，因此这些变量是外部变量。,"
 下面是一个关于外部变量的填空题:

在C语言中,外部变量是指位于函数外部的变量,它们的定义与局部变量的定义相同,但由于它们位于各函数的外部,因此它们是外部变量。这些外部变量可以在多个函数之间共享,并且它们的值可以在不同函数之间传递和修改。

以下是一个示例:

```c
#include <stdio.h>

// 定义外部变量
int x;

void foo() {
    int y;
    x = y;  // 修改外部变量的值
    printf(""x = %d, y = %d\n"", x, y);
}

void bar() {
    int z;
    x = z;  // 修改外部变量的值
    printf(""x = %d, z = %d\n"", x, z);
}

int main() {
    foo();  // 调用函数 foo
    bar();  // 调用函数 bar
    return 0;
}
```

在这个示例中,变量x是一个外部变量,它被定义在函数foo和bar之外。函数foo和bar可以访问和修改变量x的值,因为x是一个外部变量。在main函数中,我们只调用了foo函数,因此我们只能访问函数foo中定义的变量x的值,而无法访问函数bar中定义的变量x的值。","
 ______的定义与局部变量的定义是相同的，但由于它们位于各函数的外部，因此这些变量是外部变量。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数在使用外部变量之前，必须要知道外部变量的名字。要达到该目的，一种方式是在函数 中使用 extern 类型的声明。这种类型的声明除了在前面加了一个关键字 extern 外，其它 方面与普通变量的声明相同。",______在函数中使用extern类型的声明的目的是什么？,"
 以下是一个关于extern类型声明的填空题：

在使用外部变量之前，必须要知道外部变量的名字。要达到该目的，一种方式是在函数_____中使用extern类型的声明。这种类型的声明除了在前面加了一个关键字extern外，其它方面与普通变量的声明相同。

答案：中","
 ______在函数中使用extern类型的声明的目的是什么？",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
某些情况下可以省略 extern 声明。在源文件中，  如果外部变量的定义出现在使用它的 函数之前， 那么在那个函数中就没有必要使用 extern 声明。因此，main、getline 及 copy 中的几个 extern 声明都是多余的。在通常的做法中，所有外部变量的定义都放在源文件的 开始处，这样就可以省略 extern 声明。",______声明在源文件中的使用条件,"
 在源文件中，如果外部变量的定义出现在使用它的函数之前，那么在那个函数中就没有必要使用 `extern` 声明。因此，main、getline 及 copy 中的几个 `extern` 声明都是多余的。在通常的做法中，所有外部变量的定义都放在源文件的开始处，这样就可以省略 `extern` 声明。

填空题：在源文件中，如果外部变量的定义出现在使用它的函数之前，那么在那个函数中就没有必要使用 ______ 声明。因此，main、getline 及 copy 中的几个 ______ 声明都是多余的。在通常的做法中，所有外部变量的定义都放在源文件的 ______ 处，这样就可以省略 ______ 声明。","
 ______声明在源文件中的使用条件",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
如果程序包含在多个源文件中，而某个变量在 file1 文件中定义、在 file2 和 file3 文件中使用，那么在文件 file2 与 file3 中就需要使用 extern 声明来建立该变量与其定 义之间的联系。",______是在文件中使用extern声明来建立变量与其定义之间的联系。,"
 题目：在 C 语言中，当一个程序包含在多个源文件中，且某个变量在 file1 文件中定义、在 file2 和 file3 文件中使用时，需要使用______来建立该变量与其定义之间的联系。

A. include
B. extern
C. require
D. import","
 ______是在文件中使用extern声明来建立变量与其定义之间的联系。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
人们通常把变量和函数的 extern 声明放在一个单独的文件中（习惯上称之 为头文件）， 并在每个源文件的开头使用#include 语句把所要用的头文件包含进来。后缀 名 .h 约定为头文件名的扩展名。例如， 标准库中的函数就是在类似于<stdio.h>的头文件中 声明的。",______的后缀名约定为头文件名的扩展名。,"
 以下是一个关于C语言的填空题：

人们通常把变量和函数的 **extern** 声明放在一个单独的文件中（习惯上称之 为头文件）， 并在每个源文件的开头使用 **#include** 语句把所要用的头文件包含进来。后缀名 **.h** 约定为头文件名的扩展名。例如， 标准库中的函数就是在类似于<stdio.h>的头文件中 **声明的**。

空格处应填入的词为：extern","
 ______的后缀名约定为头文件名的扩展名。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在上述特别版本中，  由于 getline 与 copy 函数都不带参数，   因此从逻辑上讲， 在源文 件开始处它们的原型应该是 getline()与 copy()。但为了与老版本的 C 语言程序兼容，  ANSI C 语言把空参数表看成老版本 C 语言的声明方式， 并且对参数表不再进行任何检查。在 ANSI C 中，如果要声明空参数表，则必须使用关键字 void 进行显式声明。",______函数在特别版本中不带参数。,"
 以下是一道根据上述文本内容的填空题：

在上述特别版本中，由于 getline 与 copy 函数都不带参数，因此从逻辑上讲，在源文件开始处它们的原型应该是______与______。但为了与老版本的 C 语言程序兼容， ANSI C 语言把空参数表看成老版本 C 语言的声明方式，并且对参数表不再进行任何检查。在 ANSI C 中，如果要声明空参数表，则必须使用关键字______进行显式声明。","
 ______函数在特别版本中不带参数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
读者应该注意到，这节中我们在谈论外部变量时谨慎地使用了定义（define）与声明 （declaration）这两个词。“定义”表示创建变量或分配存储单元，而“声明”指的是说 明变量的性质，但并不分配存储单元。",______是指创建变量或分配存储单元，而“声明”指的是说明变量的性质，但并不分配存储单元。,"
 问题：在C语言中，“定义”和“声明”这两个词分别指的是什么？

答案：

定义（define）：创建变量或分配存储单元
声明（declaration）：说明变量的性质，但并不分配存储单元","
 ______是指创建变量或分配存储单元，而“声明”指的是说明变量的性质，但并不分配存储单元。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
顺便提一下，现在越来越多的人把用到的所有东西都作为外部变量使用，因为似乎这样 可以简化数据的通信——参数表变短了， 且在需要时总可以访问这些变量。但是，即使在不 使用外部变量的时候，它们也是存在的。过分依赖外部变量会导致一定的风险，因为它会使 程序中的数据关系模糊不清——外部变量的值可能会被意外地或不经意地修改，而程序的修 改又变得十分困难。",______的过分依赖会导致程序中的数据关系模糊不清。,"
 以下是一道填空题:

过分依赖外部变量会导致一定的风险,因为这样会使程序中的数据关系模糊不清,外部变量的值可能会被意外地或不经意地修改,而程序的修改又变得十分困难。","
 ______的过分依赖会导致程序中的数据关系模糊不清。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
我们前面编写的打印最长文本行的程序的第 2 个版本就不如第 1 个版本 好，原因有两方面， 其一便是使用了外部变量；  另一方面，第 2  个版本中的函数将它们所操 纵的变量名直接写入了函数， 从而使这两个有用的函数失去了通用性。",______的原因有两方面，其一是使用了外部变量；另一方面，第二个版本中的函数将它们所操纵的变量名直接写入了函数，从而使这两个有用的函数失去了通用性。,"
 下面是一个关于这段文本的填空题：

我们前面编写的打印最长文本行的程序的第 2 个版本就不如第 1 个版本好，原因有两方面，一是使用了外部变量；另一方面，第 2 个版本中的函数将它们所操纵的变量名直接写入了函数，从而使这两个有用的函数失去了通用性。

填空题：删除上述文本中的“内部变量”和“第 2 个版本”，并将其替换为以下两个选项中的一个：

A. 正确使用外部变量
B. 函数将它们所操纵的变量名直接写入了函数","
 ______的原因有两方面，其一是使用了外部变量；另一方面，第二个版本中的函数将它们所操纵的变量名直接写入了函数，从而使这两个有用的函数失去了通用性。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
变量和常量是程序处理的两种基本数据对象，声明语句说明变量的名字及类型，也可
以指定变量的初值，运算符指定将要进行的操作。表达式则把变量与常量组合起来生成新的值。对象的类型决定该对象可取值的集合以及可以对该对象执行的操作。本章将详细讲述这些内容。",______是程序处理的两种基本数据对象。,"
 以下哪个选项不能用来指定变量的初值？

A. 声明语句
B. 变量名
C. 运算符
D. 常量名","
 ______是程序处理的两种基本数据对象。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
ANSI标准对语言的基本类型与表达式做了许多小的修改与增补。所有整型都包括signed(带符号)和unsigned(无符号)两种形式，且可以表示无符号常量与十六进制字符常量。浮点运算可以以单精度进行，还可以使用更高精度的long double类型运算。字符串常量可以在编译时连接。ANSIC还支持枚举类型，该语言特性经过了长期的发展才形成。对象可以声明为const(常量)类型，表明其值不能修改。该标准还对算术类型之间的自动强制转换规则进行了扩充，以适合于更多的数据类型。",______类型包括signed(带符号)和unsigned(无符号)两种形式，且可以表示无符号常量与十六进制字符常量。,"
 请根据上述文本，将以下代码中的空缺部分填写完整：

```c
ANSI标准对语言的基本类型与表达式做了许多小的修改与增补。所有整型都包括signed(带符号)和unsigned(无符号)两种形式，且可以表示无符号常量与十六进制字符常量。浮点运算可以以单精度进行，还可以使用更高精度的long double类型运算。字符串常量可以在编译时连接。ANSIC还支持枚举类型，该语言特性经过了长期的发展才形成。对象可以声明为const(常量)类型，表明其值不能修改。该标准还对算术类型之间的自动强制转换规则进行了扩充，以适合于更多的数据类型。

void age(int year, int month, int day);
```

在上述代码中，需要填写的部分为：

```c
void age(int year, int month, int day);
```","
 ______类型包括signed(带符号)和unsigned(无符号)两种形式，且可以表示无符号常量与十六进制字符常量。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
对变量的命名与符号常量的命名存在一些限制条件，这一点我们在第1章没有说明。名字是由字母和数字组成的序列，但其第一个字符必须为字母。下划线“  ”被看做是字母，通常用于命名较长的变量名，以提高其可读性。由于例程的名字通常以下划线开头，因此变量名不要以下划线开头。大写字母与小写字母是有区别的，所以，x与x是两个不同的名字。在传统的C语言用法中，变量名使用小写字母，符号常量名全部使用大写字母。
对于内部名而言，至少前31个字符是有效的。函数名与外部变量名包含的字符数目可能小于31,这是因为汇编程序和加载程序可能会使用这些外部名，而语言本身是无法控制加载和汇编程序的。对于外部名，ANSI标准仅保证前6个字符的惟一性，并且不区分大小写。类似于if、else、int、float等关键字是保留给语言本身使用的，不能把它们用做变量名。所有关健字中的字符都必须小写。
选择的变量名要能够尽量从字面上表达变量的用途，这样做不容易引起混淆。局部变量一般使用较短的变量名(尤其是循环控制变量),外部变量使用较长的名字。",______的命名与符号常量的命名存在一些限制条件,本身的，外部变量名、函数名、常量名以及所有内部变量名都应当避免使用这些关键字。,"
 ______的命名与符号常量的命名",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
C 语言只提供了下列几种基本数据类型：
char     字符型,占用一个字节,可以存放本地字符集中的一个字符
int      整型,通常反映了所用机器中整数的最自然长度
float    单精度浮点型
double   双精度浮点型
此外,还可以在这些基本数据类型的前面加上一些限定符。 short 与 long 两个限定符 用于限定整型：
short int sh;
long int counter;
在上述这种类型的声明中，关键字 int 可以省略。通常很多人也习惯这么做。",______是C语言中的字符型数据类型，占用一个字节，可以存放本地字符集中的一个字符。,"
 C语言只提供了下列几种基本数据类型：
char    字符型,占用一个字节,可以存放本地字符集中的一个字符
int     整型,通常反映了所用机器中整数的最自然长度
float   单精度浮点型
double   双精度浮点型
此外,还可以在这些基本数据类型的前面加上一些限定符。 short 与 long 两个限定符 用于限定整型：
short int sh;
long int counter;
在上述这种类型的声明中，关键字 int 可以省略。通常很多人也习惯这么做。

填空题：在上述这种类型的声明中，关键字 ____ 可以省略。","
 ______是C语言中的字符型数据类型，占用一个字节，可以存放本地字符集中的一个字符。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
short 与 long 两个限定符的引入可以为我们提供满足实际需要的不同长度的整型数。 int 通常代表特定机器中整数的自然长度。 short 类型通常为 16 位， 1ong 类型通常为 32 位， int 类型可以为 16 位或 32 位。各编译器可以根据硬件特性自主选择合适的类型长度， 但要遵循下列限制： short 与 int 类型至少为 16 位，而 long 类型至少为 32 位，并且 short 类型不得长于 int 类型，而 int 类型不得长于 long 类型。",______限定符可以为我们提供不同长度的整型数。,"
 根据上述文本，以下哪个选项是正确的？

A. short 类型通常为 8 位
B. int 类型可以为 8 位或 16 位
C. long 类型至少为 16 位
D. short 类型不得长于 int 类型的 8 位","
 ______限定符可以为我们提供不同长度的整型数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
类型限定符 signed 与 unsigned 可用于限定 char 类型或任何整型。unsigned 类型 的数总是正值或 0，并遵守算术模 2n 定律，其中 n 是该类型占用的位数。例如，如果 char 对 象占用 8 位，那么 unsigned char 类型变量的取值范围为 0~255，而 signed char 类型 变量的取值范围则为-128~127（在采用对二的补码的机器上）。不带限定符的 char 类型对象 是否带符号则取决于具体机器，但可打印字符总是正值。",______类型的数总是正值或 0，并遵守算术模 2n 定律，其中 n 是该类型占用的位数。,"
 下面是一个关于C语言中类型限定符 signed 和 unsigned 的填空题：

在 C 语言中，类型限定符 signed 和 unsigned 用于限定 char 类型或任何整型。对于 unsigned 类型的数，它总是正值或 0，并遵守算术模 2n 定律，其中 n 是该类型占用的位数。例如，如果 char 对象占用 8 位，那么 unsigned char 类型变量的取值范围为 0~255，而 signed char 类型变量的取值范围则为-128~127（在采用对二的补码的机器上）。对于不带限定符的 char 类型对象，是否带符号则取决于具体机器，但可打印字符总是正值。

下面是一个填空题：

在 C 语言中，类型限定符 signed 和 unsigned 用于限定______类型或任何整型。对于______类型的数，它总是正值或 0，并遵守算术模 2n 定律，其中 n 是该类型占用的位数。例如，如果 char 对象占用 8 位，那么 unsigned char 类型变量的取值范围为 0~255，而 signed char 类型变量的取值范围则为-128~127（在采用对二的补码的机器上）。对于不带限定符的 char 类型对象，是否带符号则取决于具体机器，但可打印字符总是正值。

答案：char，char","
 ______类型的数总是正值或 0，并遵守算术模 2n 定律，其中 n 是该类型占用的位数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
long double 类型表示高精度的浮点数。同整型一样，浮点型的长度也取决于具体的实 现。 float、double 与 long double 类型可以表示相同的长度， 也可以表示两种或三种不同的长度。
有关这些类型长度定义的符号常量以及其它与机器和编译器有关的属性可以在标准头文 件<limits.h>与<float.h>中找到，这些内容将在附录 B 中讨论。",______类型表示高精度的浮点数。,"
 根据所给文本，以下是一道填空题：

long double 类型表示高精度的浮点数。同整型一样，浮点型的长度也取决于具体的实现。 float、double 与 long double 类型可以表示相同的长度，也可以表示两种或三种不同的长度。有关这些类型长度定义的符号常量以及其它与机器和编译器有关的属性可以在标准头文件<______>中找到，这些内容将在附录 B 中讨论。

答案：<limits.h>","
 ______类型表示高精度的浮点数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
类似于  1234 的整数常量属于  int 类型。 long 类型的常量以字母  l 或 L 结尾，如 123456789L。如果一个整数太大以至于无法用 int 类型表示时，也将被当作 long 类型处 理。无符号常量以字母 u 或 U 结尾。后缀 ul 或 UL 表明是 unsigned long 类型。
浮点数常量中包含一个小数点（如 123.4）或一个指数（如 1e-2），也可以两者都有。 没有后缀的浮点数常量为 double 类型。后缀 f 或 F 表示 float 类型，而后缀 l 或 L 则表 示 long double 类型。",______类型的常量以字母 l 或 L 结尾，如 123456789L。,"
 以下哪个选项不是 C 语言中整数常量的类型？

A. int
B. long
C. short
D. ul","
 ______类型的常量以字母 l 或 L 结尾，如 123456789L。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
整型数除了用十进制表示外， 还可以用八进制或十六进制表示。带前缀 0 的整型常量表 示它为八进制形式； 前缀为 0x 或 0X，则表示它为十六进制形式。例如，  十进制数 31 可以写 成八进制形式 037，也可以写成十六进制形式 0x1f 或 0X1F。八进制与十六进制的常量也可 以使用后缀 L 表示 long 类型，使用后缀 U 表示 unsigned 类型。例如，  0XFUL 是一个 unsigned long 类型（无符号长整型）  的常量，  其值等于十进制数 15。",______可以用八进制或十六进制表示。,"
 请根据以下文本内容出一道填空题:

整型数除了用十进制表示外， 还可以用八进制或十六进制表示。带前缀 0 的整型常量表示它为八进制形式； 前缀为 0x 或 0X，则表示它为十六进制形式。例如，  十进制数 31 可以写 成八进制形式 037，也可以写成十六进制形式 0x1f 或 0X1F。八进制与十六进制的常量也可 以使用后缀 L 表示 long 类型，使用后缀 U 表示 unsigned 类型。例如，  0XFUL 是一个 unsigned long 类型（无符号长整型）的常量，  其值等于十进制数 15。

填空题：在 C 语言中，表示八进制数的常量前缀是______，表示十六进制数的常量前缀是______。

答案：0x、0X。","
 ______可以用八进制或十六进制表示。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
一个字符常量是一个整数， 书写时将一个字符括在单引号中， 如， 'x'。字符在机器字符 集中的数值就是字符常量的值。例如， 在 ASCII 字符集中，字符'0'的值为 48，它与数值 0 没有关系。如果用字符'0'代替这个与具体字符集有关的值（比如 48），那么， 程序就无需关 心该字符对应的具体值， 增加了程序的易读性。字符常量一般用来与其它字符进行比较，但 也可以像其它整数一样参与数值运算，",______是一个整数，书写时将一个字符括在单引号中。,"
 以下是一个填空题:

将下面这段文本中的字符常量填入空白处,使得程序正确运行。

一个字符常量是一个整数,书写时将一个字符括在单引号中,如_, 'x'。字符在机器字符集中的数值就是字符常量的值。例如,在ASCII字符集中,字符'0'的值为,它与数值0没有关系。如果用字符'0'代替这个与具体字符集有关的值(比如),那么程序就无需关心该字符对应的具体值,增加了程序的易读性。字符常量一般用来与其它字符进行比较,但也可以像其它整数一样参与数值运算。

空白处的答案是:48","
 ______是一个整数，书写时将一个字符括在单引号中。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
某些字符可以通过转义字符序列（例如，换行符\n）表示为字符和字符串常量。转义字 符序列看起来像两个字符，但只表示一个字符。另外，我们可以用
'\ooo'
表示任意的字节大小的位模式。其中，  ooo 代表 1~3 个八进制数字（0 …7）。这种位模式还 可以用
'\xhh'
表示，其中，  hh 是一个或多个十六进制数字（0 …9 ，a …f，A …F）。因此，我们可以按照下 列形式书写语句：
/* ASCII vertical tab */
/* ASCII bell character */
上述语句也可以用十六进制的形式书写为：
/* ASCII vertical tab */
/* ASCII bell character */
ANSI C 语言中的全部转义字符序列如下所示：
\a 响铃符 \\ 反斜杠
\b 回退符 \? 问号
\f 换页符 \' 单引号
\n 换行符 \"" 双引号
\r 回车符 \ooo 八进制数
\t 横向制表符 \xhh 十六进制数
\v 纵向制表符
字符常量'\0'表示值为 0 的字符， 也就是空字符（null）。我们通常用'\0'的形式代替 0， 以强调某些表达式的字符属性，但其数字值为 0。",______是用来表示任意的字节大小的位模式的转义字符序列。,"f 换行符 \v
\n 换行符 \t
\r 回车符 \0
\t 制表符 \n
\x00 空字符 \x20
\x07 零八进制字符 \x1F
\x1F 零八进制字符 \x07
\x3F 零十进制字符 \x1F
\x7F 零十进制字符 \x3F

下面是一个使用这些转义字符序列的示例程序：

```c
#include <stdio.h>

int main() {
    char buffer[10];
    buffer[0] = '\n';
    buffer[1] = '\t';
    buffer[2] = '\x1F';
    buffer[3] = '\x3F';
    buffer[4] = '\x7F';
    buffer[5] = '\x7F';
    buffer[6] = '\x3F';
    buffer[7] = '\x1F';
    buffer[8] = '\n';
    buffer[9] = '\t';
    buffer[10] = '\x1F';

    printf(""The ASCII bell character is %c\n"", buffer[1]);
    printf(""The ASCII vertical tab is %c\n"", buffer[2]);
    printf(""The ASCII backslash is %c\n"", buffer[3]);
    printf(""The ASCII bell character is %c\n"", buffer[4]);
    printf(""The ASCII zero-width space is %c\n"", buffer[5]);
    printf(""The ASCII form feed is %c\n"", buffer[6]);
    printf(""The ASCII line feed is %c\n"", buffer[7]);
    printf(""The ASCII eight-bit space is %c\n"", buffer[8]);
    printf(""The ASCII form feed is %c\n"", buffer[9]);
    printf(""The ASCII bell character is %c\n"", buffer[10]);

    return 0;
}
```

问题：在上述示例程序中，哪个转义字符序列被用来表示","
 ______是用来表示任意的字节大小的位",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
常量表达式是仅仅只包含常量的表达式。这种表达式在编译时求值，而不在运行时求值。 它可以出现在常量可以出现的任何位置，例如：
#define MAXLINE 1000
char line[MAXLINE+1];
或
#define LEAP 1 /* in leap years */
int days[31+28+LEAP+31+30+31+30+31+31+30+31+30+31];",______是仅仅只包含常量的表达式，在编译时求值，而不在运行时求值。,"
 请根据以下文本内容完成填空题：

常量表达式是仅仅只包含常量的表达式。这种表达式在编译时求值，而不在运行时求值。 它可以出现在常量可以出现的任何位置，例如：
#define MAXLINE 1000
char line[MAXLINE+1];
或
#define LEAP 1 /* in leap years */
int days[31+28+LEAP+31+30+31+30+31+31+30+31+30+31];

下面哪个选项是正确的？

A. 常量表达式只包含常量。
B. 常量表达式在运行时求值。
C. 常量表达式可以出现在任何位置。
D. 常量表达式只在编译时求值。","
 ______是仅仅只包含常量的表达式，在编译时求值，而不在运行时求值。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
字符串常量也叫字符串字面值，是用双引号括起来的 0  个或多个字符组成的字符序列。 例如：
""I am a string""
或
""""        /* 空字符串  */
都是字符串。",______是用双引号括起来的0个或多个字符组成的字符序列。,"
 以下是一个关于字符串常量的填空题:

字符串常量也叫字符串字面值,是用双引号括起来的 0个或多个字符组成的字符序列。 例如:

填空:字符串常量也称为字符串字面值,是用双引号括起来的 0个或多个字符组成的字符序列。 例如:

答案:字符串常量也称为字符串字面值,是用双引号括起来的 0个或多个字符组成的字符序列。 例如:","
 ______是用双引号括起来的0个或多个字符组成的字符序列。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
双引号不是字符串的一部分，它只用于限定字符串。字符常量中使用的转义字 符序列同样也可以用在字符串中。在字符串中使用\""表示双引号字符。编译时可以将多个字 符串常量连接起来， 例如，下列形式：
""hello,"" "" world""
等价于
""hello, world""
字符串常量的连接为将较长的字符串分散在若干个源文件行中提供了支持。",______常量中使用的转义字符序列同样也可以用在字符串中。,"
 双引号不是字符串的一部分，它只用于限定字符串。字符常量中使用的转义字符序列同样也可以用在字符串中。在字符串中使用\""表示双引号字符。编译时可以将多个字符串常量连接起来，例如，下列形式：
""hello,"" "" world""
等价于
""hello, world""
字符串常量的连接为将较长的字符串分散在若干个源文件行中提供了支持。

填空题：在C语言中，双引号用于______字符串。","
 ______常量中使用的转义字符序列同样也可以用在字符串中。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
从技术角度看，字符串常量就是字符数组。字符串的内部表示使用一个空字符'\0'作为  串的结尾，  因此。存储字符串的物理存储单元数比括在双引号中的字符数多一个。这种表示  方法也说明，C 语言对字符串的长度没有限制，但程序必须扫描完整个字符串后才能确定字符  串的长度。标准库函数 strlen(s)可以返回字符串参数 s 的长度，但长度不包括末尾的 '\0'。 下面是我们设计的 strlen 函数的一个版本：
标准头文件<string.h>中声明了 strlen 和其它字符串函数。",______是C语言中用来返回字符串长度的标准库函数。,"
 请根据以下文本内容出一道填空题:

从技术角度看，字符串常量就是字符数组。字符串的内部表示使用一个空字符'\0'作为  串的结尾，  因此。存储字符串的物理存储单元数比括在双引号中的字符数多一个。这种表示  方法也说明，C 语言对字符串的长度没有限制，但程序必须扫描完整个字符串后才能确定字符  串的长度。标准库函数 strlen(s)可以返回字符串参数 s 的长度，但长度不包括末尾的 '\0'。 下面是我们设计的 strlen 函数的一个版本：
标准头文件<string.h>中声明了 strlen 和其它字符串函数。

空格处应填：字符串。","
 ______是C语言中用来返回字符串长度的标准库函数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
/* strlen:  return length of s */
int strlen(char s[])
{
int i;
while (s[i] != '\0')
++i;
return i;
}",______函数用于返回字符串的长度。,"
 以下是一道填空题:

/* strlen: 计算字符串s的长度并返回 */
int strlen(char \*s)
{
int \*i;
while (s[i]!= '\0')
++i;
return i;
}","
 ______函数用于返回字符串的长度。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
我们应该搞清楚字符常量与仅包含一个字符的字符串之间的区别： 'x'与 ""x""是不同的。 前者是一个整数， 其值是字母 x 在机器字符集中对应的数值（内部表示值）；后者是一个包含 一个字符（即字母 x）以及一个结束符'\0'的字符数组。",______与______是字符常量与仅包含一个字符的字符串之间的区别。,"
 题目：下面哪个选项是正确的？

A. 字符常量是一个整数，其值是字母 x 在机器字符集中对应的数值（内部表示值）。
B. 仅包含一个字符的字符串是一个包含一个字符（即字母 x）以及一个结束符'\0'的字符数组。
C. 字符常量是一个包含一个字符（即字母 x）以及一个结束符'\0'的字符数组。
D. 仅包含一个字符的字符串是一个整数，其值是字母 x 在机器字符集中对应的数值（内部表示值）。

正确答案：A. 字符常量是一个整数，其值是字母 x 在机器字符集中对应的数值（内部表示值）。","
 ______与______是字符常量与仅包含一个字符的字符串之间的区别。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
枚举常量是另外一种类型的常量。枚举是一个常量整型值的列表，例如：
enum boolean { NO, YES };
在没有显式说明的情况下， enum 类型中第一个枚举名的值为 0，第二个为 1，依此类推。如 果只指定了部分枚举名的值，那么未指定值的枚举名的值将依着最后一个指定值向后递增， 参看下面两个例子中的第二个例子：
enum escapes { BELL = '\a', BACKSPACE = '\b', TAB = '\t',
NEWLINE = '\n', VTAB = '\v', RETURN = '\r' };
enum months { JAN = 1, FEB, MAR, APR, MAY, JUN,
JUL, AUG, SEP, OCT, NOV, DEC };
/* FEB 的值为 2，MAR 的值为 3，依此类推  */
不同枚举中的名字必须互不相同。同一枚举中不同的名字可以具有相同的值。
枚举为建立常量值与名字之间的关联提供了一种便利的方式。相对于#define 语句来说，它的优势在于常量值可以自动生成。尽管可以声明 enum 类型的变量，但编译器不检查这种类  型的变量中存储的值是否为该枚举的有效值。不过，枚举变量提供这种检查，因此枚举比  #define 更具优势。此外，调试程序可以以符号形式打印出枚举变量的值。",______是一个常量整型值的列表。,中的枚举名越接近某个枚举名，其值越小。,"
 ______是一个常量整",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
所有变量都必须先声明后使用，尽管某些变量可以通过上下文隐式地声明。 一个声明指 定一种变量类型，后面所带的变量表可以包含一个或多个该类型的变量。例如：
int lower, upper, step;
char c, 1ine[1000];
一个声明语句中的多个变量可以拆开在多个声明语句中声明。上面的两个声明语句也可以等 价地写成下列形式：
int lower;
int upper;
int step;
char c;
char line[1000];
按照这种形式书写代码需要占用较多的空间，但便于向各声明语句中添加注释，也便于以后修改。",______是指定一种变量类型，后面所带的变量表可以包含一个或多个该类型的变量。,"
 以下是一道填空题:

在C语言中,声明语句中的变量表可以包含一个或多个______类型的变量。

答案:一个或多个变量类型。","
 ______是指定一种变量类型，后面所带的变量表可以包含一个或多个该类型的变量。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
还可以在声明的同时对变量进行初始化。在声明中，如果变量名的后面紧跟一个等号以 及一个表达式，该表达式就充当对变量进行初始化的初始化表达式。例如：
char esc = '\\';
int i = 0;
int limit = MAXLINE + 1;
float eps = 1.0e-5;
如果变量不是自动变量，则只能进行一次初始化操作，从概念上讲，应该是在程序开始 执行之前进行，并且初始化表达式必须为常量表达式。每次进入函数或程序块时，显式初始 化的自动变量都将被初始化一次， 其初始化表达式可以是任何表达式。默认情况下，外部变 量与静态变量将被初始化为 0。未经显式初始化的自动变量的值为未定义值（即无效值）。",______的值为未定义值（即无效值）。,"
 在声明的同时对变量进行初始化。在声明中，如果变量名的后面紧跟一个等号以及一个表达式，该表达式就充当对变量进行初始化的初始化表达式。例如：
char **esc = '\0';  // 这里应该填写esc的初始化表达式
int i = 0;
int limit = MAXLINE + 1;
float eps = 1.0e-5;
如果变量不是自动变量，则只能进行一次初始化操作，从概念上讲，应该是在程序开始执行之前进行，并且初始化表达式必须为常量表达式。每次进入函数或程序块时，显式初始化的自动变量都将被初始化一次，其初始化表达式可以是任何表达式。默认情况下，外部变量与静态变量将被初始化为 0。未经显式初始化的自动变量的值为未定义值（即无效值）。","
 ______的值为未定义值（即无效值）。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
任何变量的声明都可以使用 const 限定符限定。该限定符指定变量的值不能被修改。 对 数组而言，const 限定符指定数组所有元素的值都不能被修改：
const double e = 2.71828182845905;
const char msg[] = ""warning: "";
const 限定符也可配合数组参数使用，它表明函数不能修改数组元素的值：
int strlen(const char[]);
如果试图修改 const 限定符限定的值，其结果取决于具体的实现。",______的声明可以使用const限定符限定，指定变量的值不能被修改。,"
 const char* msg[] = ""warning: "";","
 ______的声明可以使用const限定符限定，指定变量的值不能被修改。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
二元算术运算符包括： +、-、*、/、%（取模运算符）。整数除法会截断结果中的小数部 分。表达式
x % y
的结果是 x 除以 y 的余数，当 x 能被 y 整除时，其值为 0。例如，如果某一年的年份能被 4  整除但不能被 100 整除，那么这一年就是闰年，此外，能被 400 整除的年份也是闰年。因此， 可以用下列语句判断闰年：
取模运算符%不能应用于 float 或 double 类型。在有负操作数的情况下，整数除法截 取的方向以及取模运算结果的符号取决于具体机器的实现，这和处理上溢或下溢的情况是一 样的。",______包括： +、-、*、/、%（取模运算符）。,"
 以下是一道填空题:

二元算术运算符包括： ______、______、______、______、______。整数除法会截断结果中的小数部分。表达式 ______ 的结果是 ______，当 ______ 时，其值为 0。例如，如果某一年的年份能被 4 整除但不能被 100 整除，那么这一年就是闰年，此外，能被 400 整除的年份也是闰年。因此，可以用 ______ 判断闰年:","
 ______包括： +、-、*、/、%（取模运算符）。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0)
printf(""%d is a leap year\n"", year);
else
printf(""%d is not a leap year\n"", year);",______是闰年的判断条件。,"
 请根据以下文本内容完成填空题：

if (year % 4 == 0 && (year % 100!= 0 || year % 400 == 0))
printf(""%d is a leap year\n"", year);
else
printf(""%d is not a leap year\n"", year);","
 ______是闰年的判断条件。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
二元运算符+和-具有相同的优先级，它们的优先级比运算符 *、/和%的优先级低，而运 算符*、/和%的优先级又比一元运算符+和-的优先级低。算术运算符采用从左到右的结合规 则。",______的优先级比一元运算符+和-的优先级低。,"
 下面是一个关于C语言二元运算符的填空题：

二元运算符+和-具有相同的优先级，它们的优先级比运算符______、/和%的优先级低，而运算符______、/和%的优先级又比一元运算符+和-的优先级低。算术运算符采用从左到右的结合规则。

请将空缺部分填入正确的运算符。","
 ______的优先级比一元运算符+和-的优先级低。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
关系运算符包括下列几个运算符：
>     >=   <     <=
它们具有相同的优先级。优先级仅次于它们的是相等性运算符：
== !=
关系运算符的优先级比算术运算符低。因此，表达式 i < lim - 1等价于 i < (lim - 1)。",______包括哪几个关系运算符？,"
 关系运算符包括下列几个运算符：
>     >=   <     <=
它们具有相同的优先级。优先级仅次于它们的是相等性运算符：
==!=
关系运算符的优先级比算术运算符低。因此，表达式 i < lim - 1等价于 i < (lim - 1)。

请从下列选项中选择一个正确填空：

关系运算符包括下列几个运算符：
>     >=   <     <=
它们具有相同的优先级。优先级仅次于它们的是相等性运算符：
__ __
关系运算符的优先级比算术运算符低。因此，表达式 i < lim - 1等价于 i < (lim - 1)。

选项：
1. ==
2.!=
3. >=
4. <=","
 ______包括哪几个关系运算符？",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
逻辑运算符 &&与||有一些较为特殊的属性， 由&&与||连接的表达式按从左到右的顺序进 行求值，并且，在知道结果值为真或假后立即停止计算。绝大多数 C 语言程序运用了这些属 性。例如，下列在功能上与第 1 章的输入函数 getline 中的循环语句等价的循环语句：
for (i=0; i<lim-1 && (c=getchar()) != '\n' && c != EOF; ++i)
s[i] = c;
在读入一个新字符之前必须先检查数组 s 中足否还有空间存放这个字符，因此必须首先测试 条件 i<lim-1。如果这一测试失败，  就没有必要继续读入下一字符。
类似地， 如果在调用 getchar 函数之前就测试 c 是否为 EOF，结果也是不正确的， 因此， 函数的调用与赋值都必须在对 c 中的字符进行测试之前进行。",______的逻辑运算符在C语言中具有特殊的属性，连接的表达式按从左到右的顺序进行求值，并且在知道结果值为真或假后立即停止计算。,表达式为 c，那么在读入字符串时，表达式 i<lim-1 && (c=getchar())!= '\n' && c!= EOF 就可以简化为表达式 c。 这段文字描述了 C 语言中逻辑运算符 && 和 || 的特殊属性。,"
 ______的逻辑运算符在C语言中具有特殊的属性，连接的表达式按从左到右的顺序进行求值，并且在知道结果值为真或假后",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
运算符 &&的优先级比||的优先级高，但两者都比关系运算符和相等性运算符的优先级低。 因此，表达式
i<lim-1 && (c = getchar()) != '\n' && c!= EOF
就不需要另外加圆括号。但是，由于运算符!=的优先级高于赋值运算符的优先级，因此，在 表达式
(c = getchar()) != '’\n'
中，就需要使用圆括号，这样才能达到预期的目的：先把函数返回值赋值给  c，然后再将  c 与'\n'进行比较。
根据定义，在关系表达式或逻辑表达式中，如果关系为真，则表达式的结果值为数值 1； 如果为假，则结果值为数值 0。",______的优先级比||的优先级高，但两者都比关系运算符和相等性运算符的优先级低。,"
 以下是一道根据文本内容出的填空题:

表达式 (c = getchar())!= '\n' && c!= EOF 的结果值为:

A. 1
B. 0
C. -1
D. 无明显答案","
 ______的优先级比||的优先级高，但两者都比关系运算符和相等性运算符的优先级低。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
逻辑非运算符!的作用是将非 0 操作数转换为 0，将操作数 0 转换为 1。该运算符通常用 于下列类似的结构中：
if (!valid)
一般不采用下列形式：
if (valid == 0)
当然，很难评判上述两种形式哪种更好。类似于!valid 的用法读起来更直观一些（“如果不是有效的”），但对于一些更复杂的结构可能会难于理解。",______的作用是将非 0 操作数转换为 0，将操作数 0 转换为 1。,"
 逻辑非运算符!的作用是将非 0 操作数转换为 0，将操作数 0 转换为 1。该运算符通常用于下列类似的结构中：
if (!valid)","
 ______的作用是将非 0 操作数转换为 0，将操作数 0 转换为 1。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
当一个运算符的几个操作数类型不同时，就需要通过一些规则把它们转换为某种共同的类型。一般来说，自动转换是指把“比较窄的”操作数转换为“比较宽的”操作数，并且不丢失信息的转换，例如，在计算表达式 f+i 时，将整型变量 i 的值自动转换为浮点型（这里 的变量 f 为浮点型）。不允许使用无意义的表达式，例如，不允许把 float 类型的表达式作为下标。针对可能导致信息丢失的表达式，编译器可能会给出警告信息，比如把较长的整型 值赋给较短的整型变量，把浮点型值赋值给整型变量，等等，但这些表达式并不非法。",______的自动转换规则是指把“比较窄的”操作数转换为“比较宽的”操作数，并且不丢失信息的转换。,"
 题目：在以下代码中，哪个运算符需要进行类型转换？

```c
int x = 5, y = 2.5;
double z = x + y;
```

答案：+","
 ______的自动转换规则是指把“比较窄的”操作数转换为“比较宽的”操作数，并且不丢失信息的转换。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
由于 char 类型就是较小的整型，因此在算术表达式中可以自由使用 char 类型的变量， 这就为实现某些字符转换提供了很大的灵活性， 比如，下面的函数 atoi 就是一例， 它将一串 数字转换为相应的数值：
我们在第 1 章讲过，  表达式
s[i] - '0'
能够计算出  s[i]中存储的字符所对应的数字值， 这是因为 '0'、 'l'等在字符集中对应的数 值是一个连续的递增序列。",______类型的变量可以在算术表达式中自由使用。,"
 下面是一个关于 atoi 函数的填空题：

在 C 语言中，由于 char 类型就是较小的整型，因此在算术表达式中可以自由使用 char 类型的变量，这为实现某些字符转换提供了很大的灵活性。例如，下面的函数 ______就是一例，它将一串数字转换为相应的数值。我们在第 1 章讲过，表达式 ______能够计算出 s[i]中存储的字符所对应的数字值，这是因为 '0'、 'l' 等在字符集中对应的值是一个连续的递增序列。","
 ______类型的变量可以在算术表达式中自由使用。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
/* atoi:  convert s to integer */
int atoi(char s[])
{
int i, n;
n = 0;
for (i = 0; s[i] >= '0' && s[i] <= '9'; ++i)
n = 10 * n + (s[i] - '0');
return n;
}",______函数的作用是将字符串转换为整数。,"
 以下是一道填空题:

/* atoi: 把字符串转换为整数 */
int atoi(char s[])
{
int i, n;
n = 0;
for (i = 0; s[i] >= '0' && s[i] <= '9'; ++i)
n = 10 * n + (s[i] - '0');
return n;
}

空格部分应填写什么内容?","
 ______函数的作用是将字符串转换为整数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数 lower 是将 char 类型转换为 int 类型的另一个例子， 它将 ASCII 字符集中的字符 映射到对应的小写字母。如果待转换的字符不是大写字母， lower 函数将返回字符本身。
上述这个函数是为 ASCII 字符集设计的。在 ASCII 字符集中，  大写字母与对应的小写字母作 为数字值来说具有固定的间隔，并且每个字母表都是连续的——也就是说，在 A~Z 之间只有 字母。但是，后面一点对 EBCDIC 字符集是不成立的，因此这一函数作用在 EBCDIC 字符集 中就不仅限于转换字母的大小写。",______函数是将 char 类型转换为 int 类型的另一个例子， 它将 ASCII 字符集中的字符 映射到对应的小写字母。,"
 下面是针对这个文本的填空题：

函数 lower 是将 ____类型转换为 ____类型的另一个例子， 它将 ____字符集中的字符 映射到对应的小写字母。如果待转换的字符不是大写字母， lower 函数将返回字符本身。上述这个函数是为 ____字符集设计的。在 ____字符集中，大写字母与对应的小写字母作 为数字值来说具有固定的间隔，并且每个字母表都是连续的——也就是说，在 ____之间只有 字母。但是，后面一点对 ____字符集是不成立的，因此这一函数作用在 ____字符集中就不仅限于转换字母的大小写。","
 ______函数是将 char 类型转换为 int 类型的另一个例子， 它将 ASCII 字符集中的字符 映射到对应的小写字母。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
/* lower:  convert c to lower case; ASCII only */
int lower(int c)
{
if (c >= 'A' && c <= 'Z')
return c + 'a' - 'A';
else
return c;
}",______函数用于将字符转换为小写形式。,"
 以下是一道根据给定代码的填空题:

void lower(int c)
{
if (c >= 'A' && c <= 'Z')
return c + 'a' - 'A';
else
return c;
}

题目:请填写空缺的部分,使代码能够正确将给定的 ASCII 字符转换为小写。

答案:
void lower(int c)
{
if (c >= 'A' && c <= 'Z')
return c + 'a' - 'A';
else
return c;
}","
 ______函数用于将字符转换为小写形式。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
附录 B 介绍的标准头文件<ctype.h>定义了一组与字符集无关的测试和转换函数。例如， tolower(c)函数将 c 转换为小写形式（如果 c 为大写形式的话），可以使用 tolower 替代  上述 lower 函数。类似地，测试语句
c >= '0' && c <= '9'
可以用该标准库中的函数
isdigit(c)
替代。在本书的后续内容中， 我们将使用<ctype.h>中定义的函数。",______是附录 B 介绍的标准头文件，定义了一组与字符集无关的测试和转换函数。,"
 请根据上述文本内容，将以下代码中的空格替换为相应的函数名或表达式：

c >= '0' && c <= '9' 可以用该标准库中的函数 isdigit(c) 替代。

答案： isdigit(c)","
 ______是附录 B 介绍的标准头文件，定义了一组与字符集无关的测试和转换函数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
当关系表达式（如 i>j）以及由 &&、||连接的逻辑表达式的判定结果为真时，表达式的 值为 1；当判定结果为假时，表达式的值为 0。因此，对于赋值语句
d = c >= '0' && c <= '9'
来说，当 c 为数字时，d 的值为 l，否则 d 的值为 0。但是，某些函数（比如 isdigit）在结 果为真时可能返回任意的非 0 值。在 if、while、for 等语句的测试部分中，“真”就意味 着“非 0”，这二者之间没有区别。",______表达式的值为1，当判定结果为假时，表达式的值为0。,"
 请根据以下文本内容出一道填空题:

当关系表达式（如 i>j）以及由 &&、||连接的逻辑表达式的判定结果为真时，表达式的值为 1;当判定结果为假时，表达式的值为 0。因此，对于赋值语句
d = c >= '0' && c <= '9'
来说，当 c 为数字时，d 的值为 l，否则 d 的值为 0。但是，某些函数（比如 isdigit）在结 果为真时可能返回任意的非 0 值。在 if、while、for 等语句的测试部分中，“真”就意味 着“非 0”，这二者之间没有区别。

填空题：
d = c >= '0' && c <= '9' 中的“&&”表示的是____。

答案：逻辑与（AND）","
 ______表达式的值为1，当判定结果为假时，表达式的值为0。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
C 语言中， 很多情况下会进行隐式的算术类型转换。一般来说， 如果二元运算符（具有两 个操作数的运算符称为二元运算符，比如+或*）的两个操作数具有不同的类型，那么在进行 运算之前先要把“较低”的类型提升为“较高”的类型， 运算的结果为较高的类型。附录 A.6 节详细地列出了这些转换规则。但是， 如果没有 unsigned 类型的操作数，则只要使用下面 这些非正式的规则就可以了：
如果其中一个操作数的类型为  long double，则将另一个操作数转换为  1ong double 类型；
如果其中一个操作数的类型为 double，则将另一个操作数转换为 double 类型；
如果其中一个操作数的类型为 float，则将另一个操作数转换为 float 类型；
将 char 与 short 类型的操作数转换为 int 类型；
如果其中一个操作数的类型为 long，则将另一个操作数也转换为 long 类型。
注意， 表达式中 float 类型的操作数不会自动转换为 double 类型， 这一点与最初的定 义有所不同。一般来说，数学函数（如标准头文件<math.h>中定义的函数）使用双精度类型 的变量。使用 float 类型主要是为了在使用较大的数组时节省存储空间，有时也为了节省机 器执行时间（双精度算术运算特别费时）。
当表达式中包含 unsigned 类型的操作数时，转换规则要复杂一些。主要原因在于，带 符号值与无符号值之间的比较运算是与机器相关的，因为它们取决于机器中不同整数类型的 大小。例如，假定 int 类型占 16 位，long 类型占 32 位，那么， -1L < 1U，这是因为 unsighed int 类型的 1U 将被提升为 signed long 类型；但-1L > 1UL，这是因为  1L 将被提升为 unslgned long 类型，因而成为一个比较大的正数。
赋值时也要进行类型转换。赋值运算符右边的值需要转换为左边变量的类型，左边变量 的类型即赋值表达式结果的类型。
如果 x 是 float 类型，  i 是 int 类型，那么语句 x = i 与 i = x 在执行时都要进行类 型转换。当把 float 类型转换为 int 类型时， 小数部分将被截取掉； 当把 double 类型转换 为 float 类型时，是进行四舍五入还是截取取决于具体的实现。
由于函数调用的参数是表达式，所以在把参数传递给函数时也可能进行类型转换。在没 有函数原型的情况下，  char 与 short 类型都将被转换为 int 类型， float 类型将被转换为 double 类型。因此，即使调用函数的参数为 char 或 float 类型，我们也把函数参数声明 为 int 或 double 类型。",______的操作数会被转换为int类型。,"数不能与整数类型的操作数进行运算，只能与同样类型的操作数进行运算。

下面是一个示例代码，其中包含隐式类型转换的示例：

```c
#include <stdio.h>

int main() {
    int x = 3, y = 2.5;
    double z = x + y;  // 隐式类型转换
    printf(""x = %d, y = %f, z = %lf\n"", x, y, z);
    return 0;
}
```

请根据上述文本内容，将下面这段代码中的空格填入正确的转换类型：

C 语言中， 很多情况下会进行隐式的算术类型转换。一般来说， 如果二元运算符的两个操作数具有不同的类型，那么在进行 运算之前先要把“较低”的类型提升为“较高”的类型， 运算的结果为较高的类型。附录 A.6 节详细地列出了这些转换规则。但是， 如果没有 unsigned 类型的操作数，则只要使用下面 这些非正式的规则就可以了：

如果其中一个操作数的类型为 __long double，则将另一个操作数转换为 __long double 类型；
如果其中一个操作数的类型为 double，则将另一个操作数转换为 double 类型；
如果其中一个操作数的类型为 float，则将另一个操作数转换为 float 类型；
将 char 与 short 类型的操作数转换为 int 类型；
如果其中一个操作数的类型为 long，则将另一个操作数也转换为 long 类型。
注意， 表达式中 float 类型的操作数不能与整数类型的操作数进行运算，只能与同样类型的操作数进行运算。

下面是一个示例代码，其中包含隐式类型转换的示例：

```c
#include <stdio.h>

int main() {
    int x = 3, y = 2.5;
    double z = x + y;  // 隐式类型转换
    printf(""x = %d, y = %f, z = %lf\n"", x, y, z);
    return 0;
}
``` 

请根据上述文本内容，将下面这段代码中的空格填入正确的转换类型：

C ","
 ______",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
前面提到过，无论是否进行符号扩展， 字符型变量都将被转换为整型变量。
当把较长的整数转换为较短的整数或 char 类型时， 超出的高位部分将被丢弃。因此，下列程序段：
int i;
char c;
i = c;
c = i;
执行后， c 的值将保持不变。无论是否进行符号扩展，该结论都成立。但是，  如果把两个赋值 语句的次序颠倒一下，则执行后可能会丢失信息。",______，超出的高位部分将被丢弃。,"
 下面是一道根据给定文本内容填空的题目：

在 C 语言中，当把较长的整数转换为较短的整数或 char 类型时，超出的高位部分将被丢弃。因此，下列程序段：
int i;
char c;
i = c;
c = i;
执行后，c 的值将保持不变。无论是否进行符号扩展，该结论都成立。但是，如果把两个赋值语句的次序颠倒一下，则执行后可能会丢失信息。

请填写合适的词语：

1. 无论是否进行符号扩展
2. 把较长的整数转换为较短的整数或 char 类型时","
 ______，超出的高位部分将被丢弃。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
最后，在任何表达式中都可以使用一个称为强制类型转换的一元运算符强制进行显式类型转换。在下列语句中，表达式将按照上述转换规则被转换为类型名指定的类型：
(类型名) 表达式
我们可以这样来理解强制类型转换的准确含义：在上述语句中，表达式首先被赋值给类型名 指定的类型的某个变量，然后再用该变量替换上述整条语句。例如，库函数  sqrt 的参数为 double 类型， 如果处理不当，结果可能会无意义（sqrt 在<math.h>中声明）。因此，如果 n 是整数，可以使用
sqrt((double) n)
在把 n 传递给函数 sqrt 之前先将其转换为 double 类型。注意，强制类型转换只是生成一 个指定类型的 n 的值， n 本身的值并没有改变。强制类型转换运算符与其它一元运算符具有相 同的优先级，表 2-1 对运算符优先级进行了总结。",______是一元运算符，用于进行显式类型转换。,,"
 ______是一元运算符，用于进行显式类型转换",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在通常情况下， 参数是通过函数原型声明的。这样，当函数被调用时，声明将对参数进行自动强制转换。例如，对于 sqrt 的函数原型
double sqrt(double);
下列函数调用：
root2 = sqrt(2);
不需要使用强制类型转换运算符就可以自动将整数 2 强制转换为 double 类型的值 2.0。",______是通过函数原型声明的。,"
 题目：在C语言中，参数的类型是通过函数原型进行声明的，这样当函数被调用时，声明将对参数进行自动强制转换。关于sqrt函数原型为double sqrt(double)，以下哪个函数调用不需要使用强制类型转换运算符就可以自动将整数2强制转换为double类型的值2.0？

A. sqrt(2);
B. sqrt(2.0);
C. sqrt(2);
D. sqrt(2.5);

答案：A. sqrt(2);","
 ______是通过函数原型声明的。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
unsigned long int next = 1;
/* rand: return pseudo-random integer on 0..32767 */
int rand(void)
{
next = next * 1103515245 + 12345;
return (unsigned int)(next/65536) % 32768;
}
/* srand:  set seed for rand() */
void srand(unsigned int seed)
{
next = seed;
}",______是用于生成0到32767之间伪随机整数的函数。,"
 以下是一道填空题:

在 C 语言中,为了使 rand() 函数生成的随机数在 0 到 32767 之间,需要将 next 变量的值乘以______,然后加上 12345。

答案:1103515245","
 ______是用于生成0到32767之间伪随机整数的函数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
C 语言提供了两个用于变量递增与递减的特殊运算符。自增运算符++使其操作数递增 1， 自减运算符使其操作数递减 1。我们经常使用++运算符递增变量的值，如下所示：
if (c = '\n')
++nl;
++与--这两个运算符特殊的地方主要表现在：  它们既可以用作前缀运算符（用在变量前 面，如 ++n）。也可以用作后缀运算符（用在变量后面，如 n++）。在这两种情况下，  其效果都 是将变量 n 的值加 1。但是，它们之间有一点不同。表达式++n 先将 n 的值递增 1，然后再使 用变量 n 的值，而表达式 n++则是先使用变量 n 的值，然后再将 n 的值递增 1。也就是说，  对于使用变量 n 的值的上下文来说，++n 和 n++的效果是不同的。如果 n 的值为 5，那么
x = n++;
执行后的结果是将 x 的值置为 5，而
x = ++n;
将 x 的值置为 6。这两条语句执行完成后，变量 n 的值都是 6。自增与自减运算符只能作用于 变量，类似于表达式(i+j)++是非法的。","______运算符使其操作数递增 1
______运算符使其操作数递减 1","1，则表达式 ++n 的值为 2，而表达式 n++ 的值为 1。

根据上述文本，以下哪个选项是正确的？

A. ++和--都是自增自减运算符。  
B. ++和--都可用作前缀和后缀运算符。  
C. ++和--在递增和递减变量时，效果相同。  
D. ++和--在递增和递减变量时，效果不同。  

答案：D. ++和--在递增和递减变量时，效果不同。","
 ______运算符使其操作数递增 1
______运算符",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在不需要使用任何具体值且仅需要递增变量的情况下，前缀方式和后缀方式的效果相同。 例如：
if (c == '\n')
nl++;
但在某些情况下需要酌情考虑。例如，考虑下面的函数  squeeze(s, c)，它删除字符串  s 中出现的所有字符 c：
每当出现一个不是 c 的字符时，  该函数把它拷贝到数组中下标为 j 的位置，  随后才将 j 的值 增加 1，以准备处理下一个字符。其中的 if 语句完全等价于下列语句：
if (s[i] != c) {
s[j] = s[i];
j++;
}
我们在第 1 章中编写的函数 getline 是类似结构的另外一个例子。我们可以将该函数中 的 if 语句：
if (c == '\n') {
s[i] = c;
++i;
}
用下面这种更简洁的形式代替：
if (c == '\n')
s[i++] = c;",______方式和______方式的效果相同。,"n' && s[i]!= c) {
s[i] = c;
i++;
}
同样，对于前缀和后缀方式，也可以进行类似的替换。

根据以上内容，以下哪个选项是正确的？

A. 递增变量总是 necessary 
B. 在某些情况下需要酌情考虑
C. 递增变量是必要的

答案：B. 在某些情况下需要酌情考虑","
 ______方式和______方式的效果相同",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
/* squeeze:  delete all c from s */
void squeeze(char s[], int c)
{
int i, j;
for (i = j = 0; s[i] != '\0'; i++)
if (s[i] != c)
s[j++] = s[i];
s[j] = '\0';
}",______是用来删除字符串中指定字符的函数。,"
 以下是一道填空题：

void **squeeze(char **s, int c)**
{
int **i;
for (i = j = 0; s[i]!= '\0'; i++)
if (s[i]!= c)
s[j++] = s[i];
s[j] = '\0';
}","
 ______是用来删除字符串中指定字符的函数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
我们再来看第三个例子。考虑标准函数 strcat(s, t)，它将字符串 t 连接到字符串 s 的尾部。函数 strcat 假定字符串 s 中有足够的空间保存这两个字符串连接的结果。下面编 写的这个函数没有任何返回值（标准库中的该函数返回一个指向新字符串的指针）：
在将 t 中的字符逐个拷贝到 s 的尾部时， 变量 i 和 j 使用的都是后缀运算符++，从而保证在循环过程中 i 与 j 均指向下一个位置。",______函数将字符串 t 连接到字符串 s 的尾部。,"
 请根据以上文本内容，将字符串 t 连接到字符串 s 的尾部，并填入空白处。

函数 strcat(s, t) 的返回值是一个指向新字符串的指针。在将 t 中的字符逐个拷贝到 s 的尾部时，变量 i 和 j 使用的都是后缀运算符++，从而保证在循环过程中 i 与 j 均指向下一个位置。

答案：s = strcat(s, t);","
 ______函数将字符串 t 连接到字符串 s 的尾部。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
/* strcat:  concatenate t to end of s; s must be big enough */ void strcat(char s[], char t[])
{
int i, j;
i = j = 0;
while (s[i] != '\0') /* find end of s */
i++;
while ((s[i++] = t[j++]) != '\0') /* copy t */
;
}",______函数用于将字符串t连接到字符串s的末尾。,"
 请根据以下文本内容出一道填空题:

/* strcat: 连接字符串t到字符串s的末尾; s必须足够大 */ void strcat(char s[], char t[])
{
int i, j;
i = j = 0;
while (s[i]!= '\0') /* 查找s的结束 */
i++;
while ((s[i++] = t[j++])!= '\0') /* 复制t */
;
}

题目：在上述代码中，空格 `;` 后面的运算符是什么？

答案：)","
 ______函数用于将字符串t连接到字符串s的末尾。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
C 语言提供了 6 个位操作运算符。这些运算符只能作用于整型操作数， 即只能作用于带符 号或无符号 char、short、int、long 类型：
&        按位与（AND）
|        按位或（OR）
^        按位异或（XOR）
<<       左移
>>       右移
~        按位求反（一元运算符）",______提供了6个位操作运算符，这些运算符只能作用于整型操作数。,"
 C 语言提供了 6 个位操作运算符，它们分别是：
&        按位与（AND）
|        按位或（OR）
^        按位异或（XOR）
<<       左移
>>       右移
~        按位求反（一元运算符）","
 ______提供了6个位操作运算符，这些运算符只能作用于整型操作数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
按位与运算符 &经常用于屏蔽某些二进制位，例如：
n = n & 0177：
该语句将 n 中除 7 个低二进制位外的其它各位均置为 0。",______经常用于屏蔽某些二进制位。,"
 题目：以下哪个选项是正确的 C 语言表达式，用于执行按位与运算并返回结果？

A. n &= 0177
B. n |= 0177
C. n ^= 0177
D. n & 0177","
 ______经常用于屏蔽某些二进制位。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
按位或运算符|常用于将某些二进制位置为 1，例如：
x = x | SET_ON；
该语句将 x 中对应于 SET_ON 中为 1 的那些二进制位置为 1。",______常用于将某些二进制位置为 1。,"
 下面是一个关于C语言的填空题：

按位或运算符|常用于将某些二进制位置为 1，例如：
x = x | SET_ON；
该语句将 x 中对应于 SET_ON 中为 1 的那些二进制位置为 1。

答案：
x = x | SET_ON；
该语句将 x 中对应于 SET_ON 中为 1 的那些二进制位置为 1。","
 ______常用于将某些二进制位置为 1。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
按位异或运算符^当两个操作数的对应位不相同时将该位设置为 1，否则， 将该位设置为 0。",______运算符当两个操作数的对应位不相同时将该位设置为 1，否则将该位设置为 0。,"
 以下是一道关于按位异或运算符的填空题：

根据按位异或运算符^的定义，当两个操作数的对应位不相同时将该位设置为 1，否则将该位设置为 0。那么，下面哪个选项是正确的？

A. 如果两个操作数都是 0，结果为 1
B. 如果两个操作数都是 1，结果为 0
C. 如果两个操作数对应位相等，结果为 0
D. 如果两个操作数对应位不相等，结果为 1

答案：D","
 ______运算符当两个操作数的对应位不相同时将该位设置为 1，否则将该位设置为 0。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
我们必须将位运算符 &、 |同逻辑运算符&&、 ||区分开来， 后者用于从左至右求表达式的  真值。例如，如果 x 的值为 1 ，Y 的值为 2，那么， x & y 的结果为 0，而 x && y 的值为 1。",______，位运算符 & 和逻辑运算符 && 的区别在于它们用于求表达式的不同______。,"
 请根据以下文本内容出一道填空题:

我们必须将位运算符 &、 |同逻辑运算符&&、 ||区分开来， 后者用于从左至右求表达式的真值。例如，如果 x 的值为 1 ，Y 的值为 2，那么， x & y 的结果为 0，而 x && y 的值为 1。

填空题：

下面哪个运算符用于从左至右求表达式的真值？

A. &
B. |
C. &&
D. ||","
 ______，位运算符 & 和逻辑运算符 && 的区别在于它们用于求表达式的不同 ______。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
移位运算符<<与>>分别用于将运算的左操作数左移与右移，移动的位数则由右操作数指 定（右操作数的值必须是非负值）。因此，表达式 x << 2 将把 x 的值左移 2 位，右边空出的 2 位用 0 填补，该表达式等价于对左操作数乘以 4。在对 unsigned 类型的无符号值进行右移 位时，左边空出的部分将用 0 填补；当对 signed 类型的带符号值进行右移时， 某些机器将 对左边空出的部分用符号位填补（即“算术移位”），而另一些机器则对左边空出的部分用 0 填补（即“逻辑移位”）。",______运算符用于将运算的左操作数左移与右移，移动的位数由右操作数指定。,"
 下面是一个填空题，请根据上述文本内容完成：

表达式 $x << 2$ 将把 $x$ 的值左移 2 位，右边空出的 2 位用 $0$ 填补，该表达式等价于对左操作数乘以 $\text{_______}$. 在对 unsigned 类型的无符号值进行右移位时，左边空出的部分将用 $0$ 填补；当对 signed 类型的带符号值进行右移时，某些机器将左边空出的部分用 $\text{_______}$ 填补（即“算术移位”），而另一些机器则对左边空出的部分用 $0$ 填补（即“逻辑移位”）。

答案：$x << 2$ 将把 $x$ 的值左移 2 位，右边空出的 2 位用 0 填补，该表达式等价于对左操作数乘以 4。在对 unsigned 类型的无符号值进行右移位时，左边空出的部分将用 0 填补；当对 signed 类型的带符号值进行右移时，某些机器将左边空出的部分用 0 填补（即“逻辑移位”），而另一些机器则对左边空出的部分用 1 填补（即“算术移位”）。","
 ______运算符用于将运算的左操作数左移与右移，移动的位数由右操作数指定。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
一元运算符~用于求整数的二进制反码，即分别将操作数各二进制位上的 1 变为 0，0 变 为 1。例如：
x = x & ~077
将把 x 的最后 6位设置为 0。注意，表达式 x & ~077与机器字长无关，它比形式为 x & 0177700 的表达式要好， 同为后者假定 x 是 16 位的数值。这种可移植的形式并没有增加额外开销，  因为， ~077 是常量表达式，  可以在编译时求值。",______运算符用于求整数的二进制反码。,"
 请根据以下文本内容出一道填空题:

一元运算符~用于求整数的二进制反码，即分别将操作数各二进制位上的 1 变为 0，0 变 为 1。例如：
x = x & ~077
将把 x 的最后 6 位设置为 0。注意，表达式 x & ~077 与机器字长无关，它比形式为 x & 0177700 的表达式要好， 同样是后者假定 x 是 16 位的数值。这种可移植的形式并没有增加额外开销， 因为， ~077 是常量表达式，  可以在编译时求值。

填空题：

将下面的代码中的空格替换为正确的运算符，以使代码正确执行。

```c
x = x & ~077
```

选项：
A. &=
B. |
C. ~
D. ^","
 ______运算符用于求整数的二进制反码。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
为了进一步说明某些位运算符，我们来看函数 getbits(x, p, n)，它返回 x 中从右边  数第 p 位开始向右数 n 位的字段。这里假定最右边的一位是第 0 位， n 与 p 都是合理的正值。 例如， getbits(x, 4, 3)返回 x 中第 4、3、2 三位的值。
其中，表达式 m << (p+1-n)将期望获得的字段移位到字的最右端。 ~0 的所有位都为 1，这 里使用语句~0 << n 将~0 左移 n 位，并将最右边的 n 位用 0 填补。再使用~运算对它按位取 反，这样就建立了最右边 n 位全为 1 的屏蔽码。",______函数返回 x 中从右边数第 p 位开始向右数 n 位的字段。,"
 以下是一道根据给定文本的填空题:

函数 getbits(x, p, n) 的返回值是 x 中从右边数第 p 位开始向右数 n 位的字段。其中,表达式 m << (p+1-n) 的作用是将期望获得的字段移位到字的最右端。如果 x = ~0,则 ~0 << n 将 ~0 左移 n 位,并将最右边的 n 位用 0 填补。然后使用 ~ 运算对它按位取反,这样就建立了最右边 n 位全为 1 的屏蔽码。

空格处应填入以下内容之一:

- 表达式 m << (p+1-n)
- ~0 << n
- ~(~0 << n)
- ~0
- x","
 ______函数返回 x 中从右边数第 p 位开始向右数 n 位的字段。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
/* getbits: get n bits from position p */
unsigned getbits(unsigned x, int p, int n)
{
return (x >> (p+1-n)) & ~(~0 << n);
}",______函数的功能是从位置p获取n位。,"
 以下是一道填空题：

/* getbits: get N bits from position P */
unsigned getbits(unsigned x, int P, int N)
{
return (x >> (P+1-N)) & ~(~0 << N);
}","
 ______函数的功能是从位置p获取n位。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在赋值表达式中，如果表达式左边的变量重复出现在表达式的右边，如：
i = i+2
则可以将这种表达式缩写为下列形式：
i += 2
其中的运算符+=称为赋值运算符。",______称为赋值运算符,"
 以下是一道填空题:

在赋值表达式中,如果表达式左边的变量重复出现在表达式的右边,如:
i = i + 2
则可以将这种表达式缩写为下列形式:
__________
其中的运算符称为什么?","
 ______称为赋值运算符",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
大多数二元运算符（即有左、右两个操作数的运算符， 比如+）都有一个相应的赋值运算
符 op=，其中，  op 可以是下面这些运算符之一：
+  -  *  /  %  << >> &  ^   |
如果 expr1 和 expr2 是表达式，那么
expr1 op= expr2
等价于：
expr1 = (expr1) op (expr2)
它们的区别在于， 前一种形式 expr1 只计算一次。注意， 在第二种形式中，  expr2 两边的圆 括号是必不可少的， 例如，
x *= y + 1
的含义是：
x = x * (y + 1)
而不是
x = x * y + 1",______运算符中的表达式计算一次，而赋值运算符中的表达式计算两次。,"
 题目：在二元运算符中，表示左操作数的运算符是______。

选项：
+  -  *  /  %  << >> &  ^   |

答案：+","
 ______运算符中的表达式计算一次，而赋值运算符中的表达式计算两次。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
我们这里举例说明。下面的函数 bitcount 统计其整型参数的值为 1 的二进制位的个数。
这里将 x 声明为无符号类型是为了保证将 x 右移时，无论该程序在什么机器上运行，左边空 出的位都用 0（而不是符号位）填补。",______函数统计整型参数的值为1的二进制位的个数。,"
 下面是一个关于 bitcount 函数的填空题：

 bitcount(x) 的作用是统计整型参数 x 的值为 1 的二进制位的个数。 为了保证在将 x 右移时，无论程序在什么机器上运行，左边空出的位都用 0（而不是符号位）填补，这里的 x 声明为无符号类型。

请根据上述描述，完成下面的填空题。

bitcount(x) 的作用是______。

答案：统计整型参数 x 的值为 1 的二进制位的个数。","
 ______函数统计整型参数的值为1的二进制位的个数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
/* bitcount: count 1 bits in x */
int bitcount(unsigned x)
{
int b;
for (b = 0; x != 0; x >>= 1)
if (x & 01)
b++;
return b;
}",______是用来统计一个无符号整数中1的个数的函数。,"
 以下是一道基于上述代码的填空题:

/* bitcount: count 1 bits in x */
int bitcount(unsigned x)
{
int b;
for (b = 0; x!= 0; x >>= 1)
if (x & 01)
b++;
return b;
}

空格处应填入什么?

答案:b++;","
 ______函数的功能是计算给定无符号整数x中的1比特数量。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
从上述例子中我们可以看出，赋值语句具有值，且可以用在表达式中。下面是最常见的一个 例子：
while ((c = getchar()) !=EOF)
其它赋值运算符（如+=、-=等）也可以用在表达式中，尽管这种用法比较少见。
在所有的这类表达式中，赋值表达式的类型是它的左操作数的类型， 其值是赋值操作完 成后的值，",______的类型是它的左操作数的类型，其值是赋值操作完成后的值,"
 请根据以下文本内容出一道填空题：

从上述例子中我们可以看出，赋值语句具有值，且可以用在表达式中。下面是最常见的一个例子：
while ((c = getchar())!= EOF)
其它赋值运算符（如+=、-=等）也可以用在表达式中，尽管这种用法比较少见。
在所有的这类表达式中，赋值表达式的类型是它的左操作数的类型， 其值是赋值操作完成后的值，_____。

答案：是","
 ______的类型是它的左操作数的类型，其值是赋值操作完成后的值",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
下面这组语句：
if (a > b)
z = a;
else
z = b;
用于求 a 和 b 中的最大值，  并将结果保存到 z 中。条件表达式（使用三元运算符“ ? :”）提 供了另外一种方法编写这段程序及类似的代码段，在表达式
expr1 ? expr2 : expr3
中，首先计算 expr1，如果其值不等于 0（为真）， 则计算 expr2 的值，并以该值作为条件 表达式的值，否则计算 expr3 的值，并以该值作为条件表达式的值。 expr2 与 expr3 中只 能有一个表达式被计算。因此，以上语句可以改写为：
z = (a > b) ? a : b;    /* z = max(a, b) */
应该注意，条件表达式实际上就是一种表达式，它可以用在其它表达式可以使用的任何 地方；如果 expr2 与 expr3 的类型不同，结果的类型将由本章前面讨论的转换规则决定。 例如，如果 f 为 float 类型， n 为 int 类型，  那么表达式
(n > 0) ? f : n
是 float 类型，与 n 是否为正值无关。",______是一种用于求解条件表达式的运算符，它可以根据条件的真假来选择不同的表达式进行计算。,"任何位置。

填空题：

将下面的 if-else 语句改写为条件表达式：

if (a > b)
z = a;
else
z = b;

填空题答案：

z = (a > b)? a : b;","
 ______是一种用于求解条件表达式的运算符，它可以根据条件表达式的",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
采用条件表达式可以编写出很简洁的代码。例如， 下面的这个循环语句打印一个数组的 n 个元素， 每行打印 10 个元素， 每列之间用一个空格隔开， 每行用一个换行符结束（包括最后 一行）：
for (i = 0; i < n; i++)
printf(""%6d%c"", a[i], (i%10==9 !! i==n-1) ? '\n' : ' ');
在每 10 个元素之后以及在第 n 个元素之后都要打印一个换行符， 所有其它元素后都要打印一 个空格。编写这样的代码可能需要一些技巧， 但比用等价的 if-else 结构编写的代码要紧凑 一些。下面是另一个比较好的例子：
printf(""You have %d item%s.\n"", n, n==1 ? """" : ""s"");",______可以编写出很简洁的代码。,"
 下面是一个填空题，请根据给定的代码 snippet 完成：

```c
for (int i = 0; i < 5; i++) {
    if (i == 3) {
        printf(""Hello\n"");
    } else if (i == 4) {
        printf(""World\n"");
    } else {
        printf(""%d\n"", i);
    }
}
```

需要填空的代码片段是：

```c
    if (i == 3) {
        printf(""Hello\n"");
    } else if (i == 4) {
        printf(""World\n"");
    } else {
        printf(""%d\n"", i);
    }
```","
 ______可以编写出很简洁的代码。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:

运算符	 结合性
() [] -> .	从左至右
! ~ ++ -- + - * (type) sizeof	从右至左
* / %	从左至右
+  -	从左至右
<<   >>	从左至右
<  <=  >  >=	从左至右
== !=	从左至右
&	从左至右
^	从左至右
|	从左至右
&&	从左至右
||	从左至右
?:	从左至右
= += -= *= /= %= &= ^= |= <<= >>=	从右至左
,	从右至左",______ 运算符的结合性是从左至右。,"
 请根据以下文本内容出一道填空题:

运算符 结合性
() [] -> ____	从左至右
! ~ ++ -- + - * (____)	从右至左
* / %	从左至右	
+  -	从左至右	
<<   >>	从左至右	
<  <=  >  >=	从左至右	
==!=	从左至右	
&	从左至右	
^	从左至右	
|	从左至右	
&&	从左至右	
||	从左至右	
?:	从左至右	
= += -= *= /= %= &= ^= |= <<= >>=	从右至左
,	从右至左

题目要求填写运算符的结合性。","
 ______ 运算符的结合性是从左至右。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
注:一元运算符+、 -、&与*比相应的二元运算符+、 -、&与*的优先级高。",______的优先级高于相应的二元运算符+、 -、&与*。,"
 请根据以下文本内容出一道填空题:

注:一元运算符+、 -、&与*比相应的二元运算符+、 -、&与*的优先级高。

题目:下面哪个运算符的优先级最高?

A. 一元运算符 +
B. 一元运算符 -
C. 一元运算符 &
D. 一元运算符 *

答案:D. 一元运算符 *","
 ______的优先级高于相应的二元运算符+、 -、&与*。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
注意，位运算符 &、^与|的优先级比运算符==与!=的低。这意味着，位测试表达式，如 if ((x & MASK) == 0) ...
必须用圆括号括起来才能得到正确结果。",______的优先级比运算符==与!=的低。,"
 题目：下面哪个表达式是正确的位运算？

A. if ((x & MASK) == 0)...
B. if ((x & MASK)!= 0)...
C. if ((x & MASK) == 1)...
D. if ((x & MASK)!= 1)...","
 ______的优先级比运算符==与!=的低。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
同大多数语言一样，C 语言没有指定同一运算符中多个操作数的计算顺序（ &&、 ||、?: 和 ,运算符除外）。例如，  在形如
x = f() + g();
的语句中，  f()可以在 g()之前计算，也可以在 g()之后计算。因此，如果函数 f 或 g 改变 了另一个函数所使用的变量， 那么 x 的结果可能会依赖于这两个函数的计算顺序。为了保证 特定的计算顺序，可以把中间结果保存在临时变量中。",______的计算顺序在C语言中并没有被指定。,"
 下面是一道填空题:

在 C 语言中,如果没有对运算符中多个操作数的计算顺序进行指定,那么在形如 $x = f() + g();$ 的语句中,$f()$ 可以在 $g()$ 之前计算,也可以在 $g()$ 之后计算。因此,如果函数 $f$ 或 $g$ 改变了另一个函数所使用的变量,那么 $x$ 的结果可能会依赖于这两个函数的计算顺序。为了保证特定的计算顺序,可以把中间结果保存在临时变量中。空缺部分可以填写:

可能的结果是:

x 的计算结果可能依赖于 $f$ 和 $g$ 的计算顺序。为了保证特定的计算顺序,可以把中间结果保存在临时变量中。","
 ______的计算顺序在C语言中并没有被指定。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
类似地，  C 语言也没有指定函数各参数的求值顺序。因此，下列语句
printf(""%d %d\n"", ++n, power(2, n)); /* 错  */
在不同的编译器中可能会产生不同的结果， 这取决于 n 的自增运算在 power 调用之前还是之 后执行。解决的办法是把该语句改写成下列形式：
++n;
printf(""%d %d\n"", n, power(2, n));",______语言中函数参数的求值顺序是未指定的。,"
 题目：在 C 语言中，关于函数参数的求值顺序没有明确的规定，因此下列语句在不同的编译器中可能会产生不同的结果，这取决于参数的求值顺序。解决这个问题的办法是将该语句改写成以下形式：

___

答案：++n;","
 ______语言中函数参数的求值顺序是未指定的。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数调用、嵌套赋值语句、自增与自减运算符都有可能产生“副作用 ”——在对表达式  求值的同时，修改了某些变量的值。在有副作用影响的表达式中，其执行结果同表达式中的  变量被修改的顺序之间存在着微妙的依赖关系，下列语句就是一个典型的令人不愉快的情况：
a[i] = i++;
问题是：数组下标 i 是引用旧值还是引用新值？对这种情况编译器的解释可能不同，并因此 产生不同的结果。C 语言标准对大多数这类问题有意未作具体规定。表达式何时会产生这种副 作用（对变量赋值），将由编译器决定， 因为最佳的求值顺序同机器结构有很大关系。（ANSI C 标准明确规定了所有对参数的副作用都必须在函数调用之前生效， 但这对前面介绍的 printf函数调用没有什么帮助。）
在任何一种编程语言中，如果代码的执行结果与求值顺序相关，则都是不好的程序设计 风格。很自然，有必要了解哪些问题需要避免，但是， 如果不知道这些问题在各种机器上是 如何解决的，就最好不要尝试运用某种特殊的实现方式。",______可能产生“副作用 ”——在对表达式求值的同时，修改了某些变量的值。,“副作用”。,"
 ______可能产生“副作用 ”——在对表达式求值的同时，修改了某些",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
程序语言中的控制流语句用于控制各计算操作执行的次序。在前面的例子中，我们曾经使用了一些最常用的控制流结构。本章将更详细地讲述控制流语句。",______用于控制各计算操作执行的次序。,"
 请根据上述文本内容，将空格处的文字填入下面的空白处：

程序语言中的控制流语句用于控制各计算操作执行的次序。在前面的例子中，我们曾经使用了一些最常用的控制流结构。本章将更详细地讲述控制流语句。

答案：控制","
 ______用于控制各计算操作执行的次序。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在x = 0、i++或这样的表达式之后加上一个分号（；），它们就变成了 语句。例如：
x = 0;
i++；
printf（...）;
在C语言中，分号是语句结束符，而Pascal等语言却把分号用作语句之间的分隔符。",______在C语言中起到语句结束的作用。,"
 请在下面的空白处填上合适的语句：

x = 0;
i++;
printf（_______）；","
 ______在C语言中起到语句结束的作用。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
用一对花括号“ {”与“ }”把一组声明和语句括在一起就构成了一个复合语句（也叫作 程序块），复合语句在语法上等价于单条语句。函数体中被花括号括起来的语句便是明显一例。 if、else, while与for之后被花括号括住的多条语句也是类似的例子。（在任何程序块中 都可以声明变量，笫4章将对此进行讨论。）右花括号用于结束程序块，其后不需要分号。",______,"
 以下是一道填空题:

在C语言中,一对花括号“ {”与“ }”用来______一组声明和语句,这组语句在语法上等价于单条语句,也称为程序块。在复合语句中,被花括号括起来的语句通常是函数体的一部分。例如,if、else、while和for之后被花括号括住的多条语句也属于复合语句的范畴。在任何程序块中,都可以声明变量,这一概念将在第4章中进行详细讨论。此外,右花括号用于结束程序块,其后不需要分号。","
 ______",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
if-else语句用于条件判定，其语法如下所示：
if {表达式}
语句1
else
语句2
其中else部分是可选的。该语句执行时，先计算表达式的值，如果其值为真（即表达式的值 为非0）,则执行语句1;如果其值为假（即表达式的值为0）,并且该语句包含else部分， 则执行语句2。",______语句用于条件判定，先计算表达式的值，如果其值为真，则执行语句1;如果其值为假，并且该语句包含else部分，则执行语句2。,"
 以下是一道根据给定文本内容填空的题目：

在C语言的if-else语句中，当表达式的值为真时，执行语句1；当表达式的值为假且else部分存在时，执行语句2。else部分的默认行为是______。","
 ______语句用于条件判定，先计算表达式的值，如果其值为真，则执行语句1;如果其值为假，并且该语句包含else部分，则执行语句2。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
由于if语句只是简单测试表达式的数值，因此可以对某些代码的编写进行简化。最明显 的例子是用如下写法
if （表达式）
来代替
if （表达式！0）",______语句可以对某些代码的编写进行简化，最明显的例子是用if（表达式）来代替if（表达式！0）。,"
 题目：在C语言中，用if语句检查某个表达式的值为正数时，可以简化为什么写法？

答案：if （表达式）","
 ______语句可以对某些代码的编写进行简化，最明显的例子是用if（表达式）来代替if（表达式！0）。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
某些情况下这种形式是自然清晰的，但也有些情况下可能会含义不清。
因为if-else语句的else部分是可选的，所以在嵌套的if语句中省略它的else部分将导致歧义。解决的方法是将每个else与最近的前一个没有else配对的if进行匹配。 ",______是if-else语句中可选的部分，省略它可能导致歧义。,"
 题目：在C语言中，当if-else语句的else部分是可选的时候，如果省略了它的else部分会导致歧义。解决这种歧义的方法是_______。

选项：
A. 将每个else与最近的前一个没有else配对的if进行匹配
B. 省略if-else语句中的else部分
C. 在if语句中使用逗号
D. 给if-else语句加上括号","
 ______是if-else语句中可选的部分，省略它可能导致歧义。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
例如，在下列语句中:
if (n > 0)
if (a > b)
z = a;
else
z = b;
else部分与内层的if匹配，我们通过程序的缩进结构也可以看出来。",______是与内层的if匹配的部分。,"
 以下是一道根据给定文本内容填空的题目：

在以下语句中:
if (n > 0)
if (a > b)
z = a;
else
z = b;
else部分与内层的if匹配，我们通过程序的缩进结构也可以看出来。

填空题：
else部分与内层的if匹配，我们通过程序的（ ）也可以看出来。","
 ______是与内层的if匹配的部分。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
if (a > b)
z = a;
else
z = b;",______时，z的值等于a或b中的较大值。,"
 请根据以下文本内容完成填空题:

if (a > b)
{
    z = a;
}
else
{
    z = b;
}","
 ______时，z的值等于a或b中的较大值。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
如果这不符合我们的 意图，则必须使用花括号强制实现正确的匹配关系：
if (n > 0) {
if (a > b)
z = a;
}
else
z= b;",______是必须使用花括号强制实现正确的匹配关系的情况。,"
 请根据以下文本内容完成填空题：
if (n > 0) {
if (a > b)
z = a;
}
else
z = b;","
 ______是必须使用花括号强制实现正确的匹配关系的情况。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
if (n > 0) {
if (a > b)
z = a;
}
else
z= b;",______是当n大于0且a大于b时的赋值操作。,"
 以下是一道根据给定文本内容的填空题:

if (n > 0) {
if (a > b)
z = a;
}
else
z = b;

空格处应填入的单词是: ___

答案:z","
 ______是当n大于0且a大于b时的赋值操作。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
歧义性在下面这种情况下尤为有害：
if (n > 0)
for (i = 0; i < n; i++)
if (s[i] > 0) {
printf (""…"");
return i;
}
else	/* WRONG */
printf(""error -- n is negative\n"");",______在下面这种情况下尤为有害：,"
 请根据以下文本内容完成下面的填空题：

歧义性在下面这种情况下尤为有害：
if (n > 0)
for (i = 0; i < n; i++)
if (s[i] > 0) {
printf (""…"");
return i;
}
else	/* WRONG */
printf(""error -- n is negative\n"");

空缺部分应填入适当的C语言代码，以使完整的代码段正确执行。","
 ______在下面这种情况下尤为有害：",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
程序的缩进结构明确地表明了设计意图，但编译器无法获得这一信息，它会将else部分与内层的if配对。这种错误很难发现，因此我们建议在有if语句嵌套的情况下使用花括号。",______的缩进结构明确地表明了设计意图，但编译器无法获得这一信息，它会将else部分与内层的if配对。,"
 下面是一个填空题：

程序的缩进结构明确地表明了设计意图，但编译器无法获得这一信息，它会将____部分与内层的if配对。这种错误很难发现，因此我们建议在有if语句嵌套的情况下使用花括号。

答案：if","
 ______的缩进结构明确地表明了设计意图，但编译器无法获得这一信息，它会将else部分与内层的if配对。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
顺便提醒读者注意，在语句
if (a > b)
z = a;
else
z = b;
中，z = a后有一个分号。这是因为，从语法上讲，跟在if后面的应该是一条语句，而像' f ' 这类的表达式语句总是以分号结束的。",______中，if语句后应该跟随的是一条______。,"
 问题：在给定的代码片段中，z = a; 后面应该有一个什么符号？

A. 括号
B. 逗号
C. 分号
D. 左括号","
 ______中，if语句后应该跟随的是一条____。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在c语言中我们会经常用到下列结构:
if (表达式)
语句 else if (表达式)
语句
else if (表达式)
语句
else if (表达式)
语句
else
语句 ",______是在C语言中用于多条件判断的结构。,"
 请根据以下文本内容完成填空题:

在C语言中我们会经常用到下列结构:
if (表达式)
语句 else if (表达式)
语句
else if (表达式)
语句
else if (表达式)
语句
else
语句 

题目:下面哪个选项是正确的C语言if-else语句结构?
A. if (表达式) else if (表达式)
B. if (表达式) else if (表达式) else if (表达式)
C. if (表达式) else if (表达式) else if (表达式) else if (表达式)
D. if (表达式) else if (表达式) else if (表达式) else if (表达式)

答案:B","
 ______是在C语言中用于多条件判断的结构。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
这种if语句序列是编写多路判定最常用的方法。其中的各表 达式将被依次求值，一旦某个表达式结果为真，则执行与之相关的语句，并终止整个语句序 列的执行。同样，其中各语句既可以是单条语句，也可以是用花括号括住的复合语句。
最后一个else部分用于处理“上述条件均不成立”的情况或默认情况，也就是当上面各 条件都不满足时的情形。有时候并不需要针对默认情况执行显式的操作，这种情况下，可以 把该结构末尾的else语句部分省略掉；该部分也可以用来检查错误，以捕获“不可能”的条件。",______是编写多路判定最常用的方法。,"
 下面是一个填空题:

这种if语句序列是编写多路判定最常用的方法。其中的各个表达式将被依次求值，一旦某个表达式结果为真，则执行与之相关的语句，并终止整个语句序列的执行。同样，其中各语句既可以是单条语句，也可以是用花括号括住的复合语句。最后一个else部分用于处理“上述条件均不成立”的情况或默认情况，也就是当上面各个条件都不满足时的情形。有时候并不需要针对默认情况执行显式的操作，这种情况下，可以把该结构末尾的else语句部分省略掉；该部分也可以用来检查错误，以捕获“不可能”的条件。

填空题:

在上述if语句序列中，最后一个else部分用于处理______的情况或默认情况，也就是当上面各个条件都不满足时的情形。","
 ______是编写多路判定最常用的方法。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
这里通过一个折半查找函数说明三路判定程序的用法。该函数用于判定已排序的数组V 中是否存在某个特定的值X。数组V的元素必须以升序排列。如果V中包含X,则该函数返回 X在V中的位置(介于0〜n-1之间的一个整数)；否则，该函数返回-1。
在折半查找时，首先将输入值x与数组v的中间元素进行比较。如果x小于中间元素的 值，则在该数组的前半部分查找；否则，在该数组的后半部分查找。在这两种情况下，下一 步都是将x与所选部分的中间元素进行比较。这个过程一直进行下去，直到找到指定的值或 查找范围为空。",______函数用于判定已排序的数组V中是否存在某个特定的值X。,"
 下面是一个关于折半查找函数的填空题：

void binary_search(int *V, int n, int X) {
    int mid;
    if (n == 0 || V[mid] == X) {
        printf(""找到值 %d，位置为 %d\n"", X, mid);
    } else if (V[mid] < X) {
        binary_search(V, mid, X);
    } else {
        binary_search(V, n - mid - 1, X);
    }
}

在这个函数中，void binary_search(int *V, int n, int X) 的作用是______。","
 ______函数用于判定已排序的数组V中是否存在某个特定的值X。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
/* binsearch: find x in v[0] <= v[1] <= ... <= v[n-1] */
int binsearch(int x, int v[], int n)
{
int low, high, mid;
low = 0;
high = n - 1;
while (low <= high) {
mid = (low+high)/2;
if (x < V[mid] )
high = mid + 1;
else if (x > v[mid]) low = mid + 1;
else /* found match */ return mid;
} return -1;	/* no match */
}",______函数用于在有序数组中查找特定元素的位置。,"
 请根据以下文本内容出一道填空题:

/* binsearch: find x in v[0] <= v[1] <=... <= v[n-1] */
int binsearch(int x, int v[], int n)
{
int low, high, mid;
low = 0;
high = n - 1;
while (low <= high) {
mid = (low+high)/2;
if (x < V[mid] )
high = mid + 1;
else if (x > v[mid]) low = mid + 1;
else /* found match */ return mid;
} return -1;	/* no match */
}

请根据上述代码,将空格填充为正确的操作数。

答案:

int binsearch(int x, int v[], int n) {
int low, high, mid;
low = 0;
high = n - 1;
while (low <= high) {
mid = (low+high)/2;
if (x < v[mid] )
high = mid + 1;
else if (x > v[mid]) low = mid + 1;
else /* found match */ return mid;
} return -1;	/* no match */
}","
 ______函数用于在有序数组中查找给定值的位置。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
该函数的基本判定是：在每一步判断x小于、大于还是等于中间元素v[mid]。使用 else-if结构执行这种判定很自然。",______的基本判定是在每一步判断x小于、大于还是等于中间元素v[mid]。,"
 请根据以下文本内容完成填空题:

该函数的基本判定是:在每一步判断$x$小于、大于还是等于中间元素$v[\text{mid}]$.使用 else-if 结构执行这种判定很自然。

空格部分应填写:$x$ 小于 $v[\text{mid}]$  />  $x$ 大于 $v[\text{mid}]$  <= $v[\text{mid}]$","
 ______的基本判定是在每一步判断x小于、大于还是等于中间元素v[mid]。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
switch语句是一种多路判定语句，它测试表达式是否与一些常量整数值中的某一个值匹配，并执行相应的分支动作。 ",______是一种多路判定语句，它测试表达式是否与一些常量整数值中的某一个值匹配，并执行相应的分支动作。,"
 switch语句是一种多路判定语句，它测试表达式是否与一些常量整数值中的某一个值匹配，并执行相应的分支动作。 

填空题：switch语句是一种__________语句，它测试表达式是否与一些常量整数值中的某一个值匹配，并执行相应的__________动作。

答案：switch 分支","
 ______是一种多路判定语句，它测试表达式是否与一些常量整数值中的某一个值匹配，并执行相应的分支动作。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
每一个分支都由一个或多个整数值常量或常量表达式标记。如果某个分支与表达式的值匹配, 则从该分支开始执行。各分支表达式必须互不相同。如果没有哪一分支能匹配表达式，则执行标记为default的分支。default分支是可选的。如果没有default分支也没有其它分支与表达式的值匹配，则该switch语句不执行任何动作。各分支及default分支的排列次序是任意的。",______是可选的。,"
 以下是一个关于C语言的填空题：

每一个分支都由一个或多个整数值常量或常量表达式标记。如果某个分支与表达式的值匹配，则从该分支开始执行。各分支表达式必须互不相同。如果没有哪一分支能匹配表达式，则执行标记为________的分支。default分支是可选的。如果没有default分支也没有其它分支与表达式的值匹配，则该switch语句不执行任何动作。各分支及default分支的排列次序是任意的。

答案：default","
 ______是可选的。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#include <stdio.h>
main() /*count digits, white space, others*/
{
int c, i, nwhite, nother, ndigit[10];
nwhite = nother = 0;
for (i = 0; i < 10; i++)
ndigit[i] = 0;
while ((c = getchar()) != EOF) {
switch (c) {
cose '0': case '1': case ‘2’： case ‘3’： case ‘4’： case n5‘： case ‘6’： case ‘7’： case ‘8’： case ‘9’：
ndigit[c-'0']++;
break;
case ' ':
case '\n':
case '\t':
nwhite++; break;
default:
nother++; break;
}
}
printf(""digits =”)；
for (i = 0; i < 10; i++)
printf ( ""%d"", ndigit[i])；
printf("", white space = %d, other = %d\n"",
nwhite, nother);
return 0;",______是一个C语言程序，用于统计数字、空白字符和其他字符的数量。,"; i++) {
printf(""%d"", ndigit[i]);
}
printf(""\nwhite space ="")；
for (i = 0; i < 10; i++) {
printf(""%d"", nwhite);
}
printf(""\nothers ="")；
for (i = 0; i < 10; i++) {
printf(""%d"", nother);
}
}
}

 下面哪个选项是正确的填空题？

A. 下面哪个选项是正确的填空题：

1. int main() { /*count digits, white space, others*/ }
2. int c, i, nwhite, nother, ndigit[10];
3. for (i = 0; i < 10; i++) { ndigit[i] = 0; }
4. while ((c = getchar())!= EOF) { switch (c) { case '0':... case '9':... } }
5. printf(""digits ="");
6. for (i = 0; i < 10; i++) { printf(""%d"", ndigit[i]); }
7. printf(""white space ="");
8. for (i = 0; i < 10; i++) { printf(""%d"", nwhite); }
9. printf(""others ="");
10. for (i = 0; i < 10; i++) { printf(""%d"", nother); }
B. 选项 2、4 和 5 是正确的填空题。

请选择正确的选项。","
 ______是一个C语言程序，用于统计数字、空格和其他",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
break语句将导致程序的执行立即从switch语句中退出。在switch语句中，case 的作用只是一个标号，因此，某个分支中的代码执行完后，程序将进入下一分支继续执行， 除非在程序中显式地跳转。跳出switch语句最常用的方法是使用break语句与return语 句。break语句还可强制控制从while、for与do循环语句中立即退出，对于这一点，我 们稍后还将做进一步介绍。",______语句将导致程序的执行立即从switch语句中退出。,"
 break语句将导致程序的执行立即从switch语句中退出。在switch语句中，case 的作用只是一个标号，因此，某个分支中的代码执行完后，程序将进入下一分支继续执行， 除非在程序中显式地跳转。跳出switch语句最常用的方法是使用break语句与return语句。break语句还可强制控制从while、for与do循环语句中立即退出，对于这一点，我们稍后还将做进一步介绍。

填空题：break语句还可强制控制从_______中立即退出。

答案：while、for与do循环语句","
 ______语句将导致程序的执行立即从switch语句中退出。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
依次执行各分支的做法有优点也有缺点。好的一面是它可以把若干个分支组合在一起完 成一个任务，如上例中对数字的处理。但是，正常情况下为了防止直接进入下一个分支执行, 每个分支后必须以一个break语句结束。从一个分支直接进入下一个分支执行的做法并不健 全，这样做在程序修改时很容易出错。除了一个计算需要多个标号的情况外，应尽量减少从 一个分支直接进入下一个分支执行这种用法，在不得不使用的情况下应该加上适当的程序注 释。",______的优点是可以把若干个分支组合在一起完成一个任务，但是需要注意避免直接进入下一个分支执行的做法。,"
 依次执行各分支的做法有优点也有缺点。好的一面是它可以把若干个分支组合在一起完 成一个任务,如上例中对数字的处理。但是,正常情况下为了防止直接进入下一个分支执行, 每个分支后必须以一个break语句结束。从一个分支直接进入下一个分支执行的做法并不健 护，这样做在程序修改时很容易出错。除了一个计算需要多个标号的情况外，应尽量减少从 一个分支直接进入下一个分支执行这种用法，在不得不使用的情况下应该加上适当的程序 注释。

空格处应填入的词语是：保护。","
 ______的优点是可以把若干个分支组合在一起完成一个任务，但是需要注意防止直接进入下一个分支执行的做法。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
作为一种良好的程序设计风格，在switch语句最后一个分支（即default分支）的后 面也加上一个break语句。这样做在逻辑上没有必要，但当我们需要向该switch语句后添 加其它分支时，这种防范措施会降低犯错误的可能性。",______语句在程序设计中起到防范错误的作用。,"
 下面是一道填空题:

在switch语句的最后一个分支(即default分支)后面,应该加上一个_______语句。虽然这样做在逻辑上没有必要,但这样做可以降低犯错误的可能性。

答案:break","
 ______语句在程序设计中起到防范错误的作用。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
我们在前面已经使用过while与for循环语句。在while循环语句
while （表达式）
语句
中，首先求表达式的值。如果其值非0,则执行语句，并再次求该表达式的值。这一循环过程 一直进行下去，直到该表达式的值为0为止，随后继续执行语句后面的部分。
for循环语句；
for （表达式1;表达式2;表达式3） 语句
它等价于下列while语句：
表达式1;
while （表达式2） {
语句
表达式3;","______循环语句中，首先求表达式的值。如果其值非0,则执行语句，并再次求该表达式的值。","
 以下是一道填空题:

在while循环语句中,首先求表达式的值为0。如果其值非0,则执行语句,并再次求该表达式的值。这一循环过程一直进行下去,直到该表达式的值为0为止,随后继续执行语句后面的部分。在for循环语句中,表达式1;while(表达式2);表达式3;它等价于下列while语句:表达式1;while(表达式2) {表达式3;","
 ______循环语句中，首先求表达式的值。如果其值非0,则执行语句，并再次求该表达式的值。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
从语法角度看，for循环语句的3个组成部分都是表达式。最常见的情况是，表达式1 与表达式3是赋值表达式或函数调用，表达式2是关系表达式。这3个组成部分中的任何部分都可以省略，但分号必须保留。如果在for语句中省略表达式1与表达式3,它就退化成 了 while循环语句。如果省略测试条件，即表达式2,则认为其值永远是真值，因此，下列 for循环语句：
for （;;）
{
}
是一个“无限”循环语句，这种语句需要借助其它手段（如break语句或return语句）才 能终止执行。",______是for循环语句的3个组成部分之一，通常是关系表达式。,"
 以下是一道填空题:

在for循环语句中,表达式1与表达式3通常是赋值表达式或函数调用,表达式2是关系表达式。如果省略表达式1与表达式3,则for循环语句会退化为while循环语句。如果省略测试条件表达式2,则会认为其值永远是真值。因此,下列for循环语句是一个“无限”循环语句,需要借助其他手段才能终止执行:

for (;;) {","
 ______是for循环语句的3个组成部分之一，通常是关系表达式。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在设计程序时到底选用while循环语句还是for循环语句，主要取决于程序设计人员的个人偏好，例如在下列语句中：
while ( (c = getchar ()) == ' ' | | c == '\n' || c = '\t')
;	/* skip white space characters */
因为其中没有初始化或重新初始化的操作，所以使用while循环语句更自然一些。
如果语句中需要执行简单的初始化和变量递增，使用for语句更合适一些，它将循环控 制语句集中放在循环的开头，结构更紧凑、更清晰。",______循环语句的选择取决于程序设计人员的个人偏好。,"
 以下是一道填空题:

在程序设计中,选择使用while循环语句还是for循环语句,主要取决于程序设计人员的个人偏好。在给定的语句中,由于没有初始化或重新初始化的操作,所以使用while循环语句更自然一些。如果语句中需要执行简单的初始化和变量递增,使用for语句更合适一些,因为它将循环控制语句集中放在循环的开头,结构更紧凑、更清晰。因此,正确的答案是:

while ( (c = getchar ()) =='' | | c == '\n' || c = '\t')
; /* skip white space characters */

如果语句中需要执行简单的初始化和变量递增,使用for语句更合适一些,因为它将循环控制语句集中放在循环的开头,结构更紧凑、更清晰。因此,正确的答案是:

for (初始化; 变量递增; ) {","
 ______循环语句的选择取决于程序设计人员的个人偏好。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
for (i = 0; i < n; i++) 这是C语言处理数组前n个元素的一种习惯性用法，它类似于Fortran语言中的DO循环或 Pascal语言中的for循环。但是，这种类比并不完全准确，因为在C语言中，for循环语句 的循环变量和上限在循环体内可以修改，并且当循环因某种原因终止后循环变量i的值仍然 保留。因为for语句的各组成部分可以是任何表达式，所以for语句并不限于通过算术级数 进行循环控制。尽管如此，牵强地把一些无关的计算放到for语句的初始化和变量递增部分 是一种不好的程序设计风格，该部分放置循环控制运算更合适。",______是C语言处理数组前n个元素的一种习惯性用法。,"
 for (i = 0; i < n; i++) 
     this is a C language DO loop or Pascal language FOR loop 

但这种类比并不完全准确，因为在C语言中，for loop语句的循环变量和上限在循环体内可以修改，并且当循环因某种原因终止后循环变量i的值仍然保留。因为for语句的各组成部分可以是任何表达式，所以for statement does not limit the control of loop by arithmetic series. However, it is not a good programming style to put some irrelevant calculations in the initialization and variable increment parts of the for loop, as it is more suitable to place loop control operations there.","
 ______是C语言处理数组前n个元素的一种习惯性用法。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#include <ctype .h>
/* atoi: convert s to integer; version 2 */
{
int i, n, sign;
for (i = 0; isspace(s[i]);i++)
sign = (s [i] == '-') ? -1 : 1;
if (s[i] == '+' || s[i]== '-')i++;
for (n = 0; isdigit(s[i]); i++)
n = 10 * n + (s [i] - '0');
return sign * n;
}",______函数用于将字符串转换为整数。,"
 以下是一道填空题:

#include <ctype.h>
/* atoi: convert s to integer; version 2 */
{
int i, n, sign;
for (i = 0; isspace(s[i]);i++)
sign = (s [i] == '-')? -1 : 1;
if (s[i] == '+' || s[i]== '-')i++;
for (n = 0; isdigit(s[i]); i++)
n = 10 * n + (s [i] - '0');
return sign * n;
}

问题: 请将上述代码中的空格替换为适当的字符,以使代码完整。","
 ______函数用于将字符串转换为整数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
把循环控制部分集中在一起，对于多重嵌套循环，优势更为明显。下面的函数是对整型 数组进行排序的Shell排序算法。Shell排序算法是D. L. Shell于1959年发明的，其基本思想 是：先比较距离远的元素，而不是像简单交换排序算法那样先比较相邻的元素。这样可以快速减少大量的无序情况，从而减轻后续的工作。被比较的元素之间的距离逐步减少，直到减少为1这时排序变成了相邻元素的互换。",______是对整型数组进行排序的Shell排序算法。,"
 根据给定文本，下面是针对Shell排序算法的描述：

Shell排序算法是D. L. Shell于1959年发明的，其基本思想是：先比较距离远的元素，而不是像简单交换排序算法那样先比较相邻的元素。这样可以快速减少大量的无序情况，从而减轻后续的工作。被比较的元素之间的距离逐步减少，直到减少为1这时排序变成了相邻元素的互换。

填空题：Shell排序算法的发明人是______。","
 ______是对整型数组进行排序的Shell排序算法。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
void shellsort(int v[], int n)
{
int gap, i, j, temp;
for (gap = n/2; gap > 0; gap /= 2)
for (i = gap; i < n; i++)
for (j=i-gap; j>=0 && v[j]>v[j+gap]; j-=gap) {
temp = v[j];
v[j] = v[j+gap] ;
v [ j +gap] = temp;
}
}",______是一种排序算法，它通过将待排序数组分成若干个子序列来进行排序，然后逐步缩小子序列的长度，最终完成整个数组的排序。,"
 以下是一道填空题:

void shellsort(int v[], int n)
{
int gap, i, j, temp;
for (gap = n/2; gap > 0; gap /= 2)
for (i = gap; i < n; i++)
for (j=i-gap; j>=0 && v[j]>v[j+gap]; j-=gap) {
temp = v[j];
v[j] = v[j+gap] ;
v [ j +gap] = temp;
}
}

题目要求我们填空以下代码中的空白部分:

void shellsort(int v[], int n)
{
int gap, i, j, temp;
for (gap = n/2; gap > 0; gap /= 2)
for (i = gap; i < n; i++)
for (j=i-gap; j>=0 && v[j]>v[j+gap]; j-=gap) {
temp = v[j];
v[j] = v[j+gap] ;
v [ j +gap] = temp;
}
}

空白部分应该填写什么内容? 

答案:

for (i = gap; i < n-gap; i++)","
 ______是一种排序算法，它通过将待排序元素与已排序元素之间的大小差逐渐缩小来达到排序的目的。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
该函数中包含一个三重嵌套的for循环语句。最外层的for语句控制两个被比较元素之间的 距离，从n/2开始，逐步进行对折，直到距离为0。中间层的for循环语句用于在元素间移 动位置。最内层的for语句用于比较各对相距gap个位置的元素，当这两个元素逆序时把它们互换过来。由于gap的值最终要递减到1,因此所有元素最终都会位于正确的排序位置上。 注意，即使最外层for循环的控制变量不是算术级数，for语句的书写形式仍然没有变，这就说明for语句具有很强的通用性。",______中包含一个三重嵌套的for循环语句。,"
 以下是一道根据给定文本内容填空的题目:

在以下代码中,哪个变量最终会被赋值为正确的排序位置上的元素?

```
for (int i = n/2; i >= 1; i--) {
    for (int j = i; j < n - i; j++) {
        if (arr[j] > arr[j + gap]) {
            int temp = arr[j];
            arr[j] = arr[j + gap];
            arr[j + gap] = temp;
        }
    }
}
```

其中,`n` 表示数组的长度,`gap` 表示相比较的距离。

答案: 最终 `arr[j]`会被赋值为正确的排序位置上的元素。","
 ______中包含一个三重嵌套的for循环语句。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
逗号运算符“，”也是C语言优先级最低的运算符，在for语句中经常会用到它。被逗 号分隔的一对表达式将按照从左到右的顺序进行求值，表达式右边的操作数的类型和值即为其结果的类型和值。这样，在for循环语句中，可以将多个表达式放在各个语句成分中，比 如同时处理两个循环控制变晕。我们可以通过下面的函数reversed)来举例。该函数用于倒置字符串s中各个字符的位置。",______是C语言优先级最低的运算符。,"
 以下是一道填空题:

逗号运算符“，”也是C语言优先级最低的运算符，在for语句中经常会用到它。被逗号分隔的一对表达式将按照从左到右的顺序进行求值，表达式右边的操作数的类型和值即为其结果的类型和值。这样，在for循环语句中，可以将多个表达式放在各个语句成分中，比如同时处理两个循环控制变量。我们可以通过下面的函数reversed)来举例。该函数用于倒置字符串s中各个字符的位置。

空格处的词语是: 

答案：我们可以通过下面的函数reversed来举例。","
 ______是C语言优先级最低的运算符。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#include <string.h>
/* reverse: reverse string s in place */
void reverse(char s[])
{
int c, i, j;
for (i = 0, j = strlen(s)-1; i < j; i++, j--) {
c = s[i];
s[i] = s[j];
s[j] = c;
}
}",______是用来反转字符串的函数。,"
 以下是一道关于该文本内容的填空题：

#include <string.h>
/* reverse: reverse string s in place */
void reverse(char s[])
{
int c, i, j;
for (i = 0, j = strlen(s)-1; i < j; i++, j--) {
c = s[i];
s[i] = s[j];
s[j] = c;
}
}

空格处的正确答案是：strlen(s)。","
 ______是用来反转字符串的函数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
应该慎用逗号运算符。逗号运算符最适用于关系紧密的结构中，比如上面的reverse函 数内的for语句，对于需要在单个表达式中进行多步计算的宏来说也很适合。逗号表达式还适用于reverse函数中元素的交换，这样，元素的交换过程便可以看成是一个单步操作。",______最适用于关系紧密的结构中。,"
 下面是填空题的文本：

应该慎用逗号运算符。逗号运算符最适用于关系紧密的结构中，比如上面的reverse函数内的for语句，对于需要在单个表达式中进行多步计算的宏来说也很适合。逗号表达式还适用于______内的元素交换，这样，元素的交换过程便可以看成是一个单步操作。","
 ______最适用于关系紧密的结构中。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
我们在第1章中曾经讲过，while与for这两种循环在循环体执行前对终止条件进行测 试。与此相反，C语言中的第三种循环一一do-while循环则在循环体执行后测试终止条件, 这样循环体至少被执行一次。
do-while循环的语法形式如下：
do
语句、
while (表达式)；",______循环在循环体执行后测试终止条件，这样循环体至少被执行一次。,"
 以下是一道根据所给文本内容出的填空题：

C语言中的第三种循环一一____循环，在循环体执行后测试终止条件，这样循环体至少被执行一次。

答案：do-while","
 ______循环在循环体执行后测试终止条件，这样循环体至少被执行一次。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在这一结构中，先执行循环体中的语句部分，然后再求表达式的值。如果表达式的值为真，则再次执行语句，依此类推。当表达式的值变为假，则循环终止。除了条件测试的语义不同 外，do-white循环与Pascal语言的repeat-until语句等价。",______循环与Pascal语言的repeat-until语句等价,"
 在这一结构中，先执行循环体中的语句部分，然后再求表达式的值。如果表达式的值为真，则再次执行语句，依此类推。当表达式的值变为假，则循环终止。除了条件测试的语义不同 外，do-white循环与Pascal语言的repeat-until语句等价。

填空题：在C语言中，这种结构被称为______循环。","
 ______循环与Pascal语言的repeat-until语句等价",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
经验表明，do-while循环比while循环和for循环用得少得多。尽管如此，do-while 循环语句有时还是很有用的，下面我们通过函数itoa来说明这一点。itoa函数是atoi函 数的逆函数，它把数字转换为字符串。这个工作比最初想像的要复杂一些。如果按照atoi函数中生成数字的方法将数字转换为字符串，则生成的字符串的次序正好是颠倒的，因此，我们首先要生成反序的字符串，然后再把该字符串倒置。",______循环比while循环和for循环用得少得多。,"
 itoa函数是用来将数字转换为字符串的，它的逆函数是atoi函数。__/__ 下面我们通过函数itoa来说明这一点。itoa函数是atoi函数的逆函数，它把数字转换为字符串。这个工作比最初想像的要复杂一些。如果按照atoi函数中生成数字的方法将数字转换为字符串，则生成的字符串的次序正好是颠倒的，因此，我们首先要生成反序的字符串，然后再把该字符串倒置。","
 ______循环比while循环和for循环用得少得多。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
void itoa(int n, char s [])
{
int sign;
if((sign=n) < 0) /*recordsign */
n=-n;	/* make n positive */
i = 0;
do {	/* generatedigitsinreverse order */
s [i + + ] = n % 10 + ' 0 '; /* get next digit */
}while( (n /= 10) > 0);	/* delete it */
if (sign < 0)
s[i++] =' - ';
s[i] = '\0';
reverse(s);
}",______函数的作用是将一个整数转换为字符串。,"
 请根据以下文本内容出一道填空题:

void itoa(int n, char s [])
{
int sign;
if((sign=n) < 0) /*recordsign */
n=-n;	/* make n positive */
i = 0;
do {	/* generatedigitsinreverse order */
s [i + + ] = n % 10 +'0 '; /* get next digit */
}while( (n /= 10) > 0);	/* delete it */
if (sign < 0)
s[i++] =' - ';
s[i] = '\0';
reverse(s);
}","
 ______函数的作用是将一个整数转换为字符串。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
这里有必要使用do-while语句，至少使用do-while语句会方便一些，因为即使n的值为0,也至少要把一个字符放到数组s中。其中的do-while语句体中只有一条语句，尽管没有必要，但我们仍然用花括号将该语句括起来了，这样做可以避免草率的读者将while 部分误认为是另个while循环的开始。",______语句在这种情况下会更方便一些。,"
 请根据以下文本内容完成填空题：

这里有必要使用do-while语句，至少使用do-while语句会方便一些，因为即使n的值为0，也至少要把一个字符放到数组s中。其中的do-while语句体中只有一条语句，尽管没有必要，但我们仍然用花括号将该语句括起来了，这样做可以避免草率的读者将while 部分误认为是另个while循环的开始。

填空题：

在上述文本中，do-while语句体中的花括号用来括起来的语句是______。","
 ______语句在这种情况下会更方便一些。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
不通过循环头部或尾部的条件测试而跳出循环，有时是很方便的。break语句可用于从 for、whiee与do-while等循环中提前退出，就如同从switch语句中提前退出一样。break 语句能使程序从switch语句或最内层循环中立即跳出。",______语句可用于从循环中提前退出，就如同从switch语句中提前退出一样。,"
 break 语句可用于从 for、while 与 do-while 等循环中提前退出，就如同从 switch 语句中提前退出一样。break 语句能使程序从 switch 语句或最内层循环中立即跳出。

空缺部分为：__________。

填空后句子为：break 语句可用于从 for、while 与 do-while 等循环中提前退出，就如同从 switch 语句中提前退出一样。break 语句能使程序从 switch 语句或最内层循环中立即跳出。","
 ______语句可用于从循环中提前退出，就如同从switch语句中提前退出一样。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
int trim(char s[])
{
int n;
for(n=strlen(s)-1;n>=0;n--)
if(s[n]!=' '&&s[n]!='\t'&&s[n]!='/n')
break;
s[n+1]='\0';
return n;
}",______函数的功能是对字符串进行修剪，去除末尾的空格、制表符和换行符。,"
 请根据以下文本内容出一道填空题:

void trim(char \*s)
{
int n;
for(n=strlen(s)-1;n>=0;n--)
if(s[n]!=' '&&s[n]!='\t'&&s[n]!='/n')
break;
s[n+1]='\0';
return n;
}","
 ______函数的功能是对字符串进行修剪，去除最后的空格、制表符和换行符。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
strlen函数返回字符串的长度。for循环从字符串的末尾开始反方向扫描寻找第一个不 是空格符、制表符以及换行符的字符。当找到符合条件的第一个字符，或当循环控制变量n 变为负数时(即整个字符串都被扫描完时)，循环终止执行。读者可以验证，即使字符串为空或仅包含空白符，该函数也是正确的。",______函数返回字符串的长度。,"
 下面是一个根据你提供的文本内容出的填空题：

使用C语言编写一个函数，该函数返回字符串的长度。在函数中，使用for循环从字符串的末尾开始反向扫描字符，寻找第一个不是空格符、制表符以及换行符的字符。当找到符合条件的第一个字符，或当循环控制变量n变为负数时（即整个字符串都被扫描完时），循环终止执行。读者可以验证，即使字符串为空或仅包含空白符，该函数也是正确的。

答案：
```
int strlen(char *str);
```","
 ______函数返回字符串的长度。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
continue语句与break语句是相关联的，但它没有break语句常用。continue语句用于使for、while或do-while语句开始下一次循环的执行。在while与do-while 语句中,continue语句的执行意味着立即执行测试部分；在for循环中，则意味着使控制转移到递增循环变量部分。continue语句只用于循环语句，不用于switch语句。某个循环包含的switch语句中的continue语句，将导致进入下一次循环。",______语句用于使for、while或do-while语句开始下一次循环的执行。,"
 continue语句与break语句是相关联的，但它没有break语句常用。continue语句用于使for、while或do-while语句开始下一次循环的执行。在while与do-while语句中,continue语句的执行意味着立即执行测试部分；在for循环中，则意味着使控制转移到递增循环变量部分。continue语句只用于循环语句，不用于switch语句。某个循环包含的switch语句中的continue语句，将导致进入下一次循环。

填空题：continue语句在for循环中执行的意思是____。","
 ______语句用于使for、while或do-while语句开始下一次循环的执行。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
例如，下面这段程序用于处理数组a中的非负元素。如果某个元素的值为负，则跳过不处理。
for(i = 0; i < n; i++)
if(a [i] < 0)	
continue;",______是用于处理数组中的非负元素的关键字。,"
 以下是一个关于这段程序的填空题：

给定一个数组a，其中的元素都是非负整数，编写一个C语言程序，使用for循环和if语句，检查数组a中的每个元素。如果某个元素的值为负，则跳过该元素的处理。其他元素的值都将被处理。最后，请输出处理后的元素个数。

```c
for(i = 0; i < n; i++) {
    if (a[i] < 0) {
        continue;
    }
    /* 在这里处理元素a[i] */
}

int main() {
    int a[] = {1, 2, 3, 4, -5, 6, -7, 8, 9};
    int n = sizeof(a) / sizeof(a[0]);
    int count = 0;

    for (i = 0; i < n; i++) {
        if (a[i] < 0) {
            continue;
        }
        count++;
    }

    printf(""Number of non-negative elements: %d\n"", count);
    return 0;
}
```","
 ______是用于处理数组中的非负元素的关键字。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
当循环的后面部分比较复杂时，常常会用到continue语句。这种情况下，如果不使用 continue语句，则可能需要把测试颠倒过来或者缩进另一层循环，这样做会使程序的嵌套更深。 ",______时常用到continue语句，如果不使用它，可能需要把测试颠倒过来或者缩进另一层循环，这样做会使程序的嵌套更深。,"
 请根据以下文本内容出一道填空题:

当循环的后面部分比较复杂时，常常会用到continue语句。这种情况下，如果不使用 continue语句，则可能需要把测试颠倒过来或者缩进另一层循环，这样做会使程序的嵌套更深。 

问题：在上述文本中，空缺的部分是______。

选项：

A. continue语句
B. test
C. 循环
D. 嵌套","
 ______时常用到continue语句，如果不使用它，可能需要把测试颠倒过来或者缩进另一层循环，这样做会使程序的嵌套更深。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
C语言提供了可随意滥用的goto语句以及标记跳转位置的标号。从理论上讲，goto语 句是没有必要的，实践中不使用goto语句也可以很容易地写出代码。至此，本书中还没有使用goto语句。
但是，在某些场合下goto语句还是用得着的。最常见的用法是终止程序在某些深度嵌套的结构中的处理过程，例如一次跳出两层或多层循环。这种情况下使用break语句是不能达到目的的，它只能从最内层循环退出到上一级的循环。",______语句在C语言中被认为是可随意滥用的，但在某些场合下仍然有用。,"
 C语言提供了可随意滥用的goto语句以及标记跳转位置的标号。从理论上讲，goto语句是没有必要的，实践中不使用goto语句也可以很容易地写出代码。至此，本书中还没有使用goto语句。
但是，在某些场合下goto语句还是用得着的。最常见的用法是终止程序在某些深度嵌套的结构中的处理过程，例如一次跳出两层或多层循环。这种情况下使用break语句是不能达到目的的，它只能从最内层循环退出到上一级的循环。

填空题：C语言提供了可随意滥用的goto语句以及标记跳转位置的标号。从理论上讲，goto语句是没有必要的，实践中不使用goto语句也可以很容易地写出代码。至此，本书中还没有使用goto语句。但是，在某些场合下goto语句还是用得着的。最常见的用法是终止程序在某些深度嵌套的结构中的处理过程，例如一次跳出两层或多层循环。这种情况下使用break语句是不能达到目的的，它只能从最内层循环退出到上一级的循环。

填空：C语言提供了可随意滥用的goto语句以及标记跳转位置的标号。从理论上讲，goto语句是没有必要的，实践中不使用goto语句也可以很容易地写出代码。至此，本书中还没有使用goto语句。但是，在某些场合下goto语句还是用得着的。最常见的用法是终止程序在某些深度嵌套的结构中的处理过程，例如一次跳出两层或多层循环。这种情况下使用break语句是不能达到目的的，它只能从最内层循环退出到上一级的循环。

答案：C语言提供了可随意滥用的goto语句以及标记跳转位置的标号。从理论上讲，goto语句是没有必要的，实践中不使用goto语句也可以很容易地写出代码。至此，本书中还没有使用goto语句。但是，在某些场合下goto语句还是用得着的。最常见的用法是终止程序在某些深度嵌套的结构中的处理过程，例如一次跳出两层或多层循环。这种情况下使用break语句是不能达到目的的，它只能从最内层循环退出到上一级的循环。","
 ______语句在C语言中被认为是在某些场合下用得着的，特别是在终止程序在深度嵌套结构中的处理过程中。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
下面是使用goto语句的一个例子：
for (...) for( ...){
if (disaster) 
goto error;
}
error:
/* clean up the mess */
在该例子中，如果错误处理代码很重要，并且错误可能出现在多个地方，使用got。语句将会 比较方便。",______语句的使用在错误处理中可能会比较方便。,"
 在这段代码中，使用goto语句的一个例子是：for (...) for(...){ 
if (disaster) 
goto error;
}
error:
/* clean up the mess */","
 ______语句的使用在错误处理中可能会比较方便。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
我们来看另外一个例子。考虑判定两个数组a与b中是否具有相同元素的问题。一种可 能的解决方法是：
for (i = 0; i < n; i++)
for (j = 0; j < m; j++) 
if (a[i( == b[j]) goto found;
/* didn't find any common element */
found:
/* got one: a[i] == b[j]*/",______问题是判定两个数组中是否具有相同元素。,"
 以下是一道基于上述文本的填空题:

考虑两个数组a和b中是否具有相同元素的问题,以下哪个选项不是一种可能的解决方法?

A) for (i = 0; i < n; i++)
for (j = 0; j < m; j++) 
if (a[i] == b[j]) goto found;
/* didn't find any common element */
found:
/* got one: a[i] == b[j] */
B) for (i = 0; i < n; i++)
for (j = 0; j < m; j++) 
if (a[i]!= b[j]) goto found;
/* didn't find any common element */
found:
/* got one: a[i]!= b[j] */
C) for (i = 0; i < n; i++)
for (j = 0; j < m; j++) 
if (a[i] == b[j]) goto found;
/* didn't find any common element */
found:
/* got one: a[i] == b[j] */
D) for (i = 0; i < n; i++)
for (j = 0; j < m; j++) 
if (a[i]!= b[j]) goto end;
/* didn't find any common element */
end:
/* got one: a[i] == b[j] */","
 ______问题是判定两个数组中是否具有相同元素。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
所有使用了goto语句的程序代码都能改写成不带goto语句的程序，但可能会增加一些 额外的重复测试或变量。例如，可将上面判定是否具有相同数组元素的程序段改写成下列形 式：
found = 0;
for (i = 0; i < n && !found; i + + )
for (j = 0; j < m && !found; j ++) 
if (a[i] == b[j])
found = 1;
if (found)
/*got one: a [ i-1] == b [ j-1] */
else
/* didn't find any common element*/",______语句的使用可以通过增加额外的重复测试或变量来替代。,"
 题目：下面哪一部分是使用goto语句的程序代码？
A. found = 0;
B. for (i = 0; i < n &&!found; i++)
C. for (j = 0; j < m &&!found; j++) if (a[i] == b[j])
D. if (found) else","
 ______语句的使用可以通过增加额外的重复测试或变量来替代。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
大多数情况下，使用goto语句的程序段比不使用goto语句的程序段要难以理解和维护, 少数情况除外，比如我们前面所举的几个例子。尽管该问题并不太严重，但我们还是建议尽可能少地使用goto语句。 ",______语句的滥用会导致程序段难以理解和维护。,"
 使用goto语句的程序段往往比不使用goto语句的程序段难以理解和维护，除非是少数情况，比如前面所举的几个例子。尽管该问题并不太严重，但我们还是建议尽可能少地使用goto语句。

填空题：空格处应填入“尽管该问题并不太严重”。","
 ______语句的滥用会导致程序段难以理解和维护。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数可以把大的计算任务分解成若干个较小的任务，程序设计人员可以基于函数进一步构造程序，而不需要重新编写一些代码。一个设计得当的函数可以把程序中不需要了解的具体操作细节隐藏起来，从而使整个程序结构更加清晰，并降低修改程序的难度。
C语言在设计中考虑了函数的高效性与易用性这两个因素。C 语言程序一般都由许多小的函数组成，而不是由少量较大的函数组成。一个程序可以保存在一个或者多个源文件中。各个文件可以单独编译，并可以与库中已编译过的函数一起加载。
",______可以把大的计算任务分解成若干个较小的任务，程序设计人员可以基于函数进一步构造程序，而不需要重新编写一些代码。,"
 C语言在设计中考虑了函数的______与易用性这两个因素。

答案：高效性","
 ______可以把大的计算任务分解成若干个较小的任务，程序设计人员可以基于函数进一步构造程序，而不需要重新编写一些代码。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
ANSI 标准对C语言所做的最明显的修改是函数声明与函数定义这两方面。为了使函数的声明与定义相适应，ANSI 标准对函数定义的语法也做了修改。基于该原因，编译器就有可能检测出比以前的C语言版本更多的错误。并且，如果参数声明得当，程序可以自动地进行适当的强制类型转换。
ANSI 标准进一步明确了名字的作用域规则，特别要求每个外部对象只能有一个定义。初始化的适用范围也更加广泛了，自动数组与结构都可以进行初始化。
C语言预处理的功能也得到了增强。新的预处理器包含一组更完整的条件编译指令（一种通过宏参数创建带引号的字符串的方法），对宏扩展过程的控制更严格。",______的作用域规则得到了明确的规定，特别要求每个外部对象只能有一个定义。,"
 根据ANSI标准对C语言所做的最明显的修改是函数声明与函数定义这两方面，可以推断出以下语句中的空缺部分：

ANSI标准对函数定义的语法也做了修改，以使函数的声明与定义相适应。基于该原因，编译器就有可能检测出比以前的C语言版本更多的错误。并且，如果参数声明得当，程序可以自动地进行适当的强制类型转换。

此外，ANSI标准进一步明确了名字的作用域规则，特别要求每个外部对象只能有一个定义。初始化的适用范围也更加广泛了，自动数组与结构都可以进行初始化。

C语言预处理的功能也得到了增强。新的预处理器包含一组更完整的条件编译指令（一种通过宏参数创建带引号的字符串的方法），对宏扩展过程的控制更严格。

填空题：ANSI标准对C语言所做的最明显的修改是函数声明与函数定义这两方面。为了使函数的声明与定义相适应，ANSI标准对函数定义的语法也做了修改，以使函数的声明与定义相适应。基于该原因，编译器就有可能检测出比以前的C语言版本更多的错误。并且，如果参数声明得当，程序可以自动地进行适当的强制类型转换。","
 ______的作用域规则得到了明确的规定，特别要求每个外部对象只能有一个定义。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
首先我们来设计并编写一个程序，它将输入中包含特定“模式”或字符串的各行打印出来，例如，在下列一组文本行中查找包含字符串“ ould”的行：
Ah Love! could you and I with Fate conspire
To grasp this sorry Scheme of Things entire,
Would not we shatter it to bits -- and then
Re-mould it nearer to the Heart's Desire!
程序执行后输出下列结果：
Ah Love! could you and I with Fate conspire
Would not we shatter it to bits -- and then
Re-mould it nearer to the Heart's Desire!
该任务可以明确地划分成下列 3 部分：
whiel (还有未处理的行)
if (该行包含指定的模式)
打印该行
尽管可以把所有的代码都放在主程序 main 中，但更好的做法是利用其结构把每一部分设计成一个独立的函数。分别处理 3个小的部分比处理一个大的整体更容易，因为这样可以把不相关的细节隐藏在函数中，从而减少了不必要的相互影响的机会，并且这些函数也可以在其它程序中使用。
用函数getline实现“还有未处理的行”；用printf函数实现“打印该行”。也就是说，我们只需要编写一个判定“该行包含指定的模式”的函数。
我们编写函数strindex(s,t)实现该目标。该函数返回字符串t在字符串s中出现的起始位置或索引。当s不包含t时，返回值为-1。由于C语言数组的下标从0开始，下标的值只可能为0或正数，因此可以用像-1这样的负数表示失败的情况。如果以后需要进行更复杂的模式匹配，只需替换 strindex 函数即可，程序的其余部分可保持不变。（标准库中提供的库函数strstr的功能类似于 strindex函数，但该库函数返回的是指针而不是下标值。）

",______是设计并编写一个程序，它将输入中包含特定“模式”或字符串的各行打印出来的任务。,"3种不同的输入: 输入1：字符串模式模式模式
输入2：字符串模式模式模式
输入3：字符串模式模式模式

首先，我们需要编写一个函数来读取输入的字符串，并返回包含指定模式的行。然后，我们需要编写一个函数来检查一行是否包含指定模式。最后，我们需要编写一个函数来打印包含指定模式的行。

下面是实现这些功能的函数原型：

```
void read_input(char *input);
int contains_pattern(char *line, const char *pattern);
void print_line(char *line);
```

请根据以上信息，为上述函数填写具体的实现代码。 

题目要求使用C语言编写，解答中需要详细说明每个函数的具体实现。 

下面是一个可能的解答:

```
#include <stdio.h>
#include <string.h>

void read_input(char *input);
int contains_pattern(char *line, const char *pattern);
void print_line(char *line);

int main()
{
    char input1[100], input2[100], input3[100];
    int result1, result2, result3;

    printf(""请输入字符串模式模式模式: "");
    scanf(""%s"", input1);
    printf(""请输入字符串模式模式模式: "");
    scanf(""%s"", input2);
    printf(""请输入字符串模式模式模式: "");
    scanf(""%s"", input3);

    result1 = read_input(input1);
    result2 = read_input(input2);
    result3 = read_input(input3);

    if (result1 && contains_pattern(input1, ""ould"")) {
        print_line(input1);
    }
    if (result2 && contains_pattern(input2, ""ould"")) {
        print_line(input2);
    }
    if (result3 && contains_pattern(input3, ""ould"")) {
        print_line(input3);
    }

    return 0;
}

void read_input(char *input)
{
    char *token;
    token = strtok","
 ______是设计并编写一个程序，它将输入中",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#include <stdio.h>
#define MAXLINE 1000 /* maximum input line length */
int getline(char line[], int max)
int strindex(char source[], char searchfor[]);
char pattern[] = ""ould"";   /* pattern to search for */
/* find all lines matching pattern */
#include <stdio.h>
#define MAXLINE 1000 /* maximum input line length */
int getline(char line[], int max)
int strindex(char source[], char searchfor[]);
char pattern[] = ""ould"";   /* pattern to search for */
/* find all lines matching pattern */
int main()
{
char line[MAXLINE];
int found = 0;
while (getline(line, MAXLINE) > 0)
if (strindex(line, pattern) >= 0) {
printf(""%s"", line);
found++;
}
return found;
}
/* getline: get line into s, return length */
int getline(char s[], int lim)
{
int c, i;
i = 0;
while (--lim > 0 && (c=getchar()) != EOF && c != '\n')
s[i++] = c;
if (c == '\n')
s[i++] = c;
s[i] = '\0';
return i;
}
/* strindex:  return index of t in s, -1 if none */
int strindex(char s[], char t[])
{
int i, j, k;
for (i = 0; s[i] != '\0'; i++) {
for (j=i, k=0; t[k]!='\0' && s[j]==t[k]; j++, k++)
;
if (k > 0 && t[k] == '\0')
return i;
}
return -1;
}",______是用来搜索的模式。,"length of s if successful */
int getline(char s[], int m)
{
if (fgets(s, m, stdin) == NULL) {
return 0;
}
return strlen(s);
}
/* strindex: search for s in string */
int strindex(char s[], char *p)
{
int i;
for (i = 0; i < strlen(s); i++) {
if (s[i] == *p) {
return i;
}
}
return -1;
}","
 ______",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数的定义形式如下：
返回值类型  函数明(参数声明表)
{
声明和语句
}
函数定义中的各构成部分都可以省略。最简单的函数如下所示：
dummy(){}
该函数不执行任何操作也不返回任何值。这种不执行任何操作的函数有时很有用，它可以在程序开发期间用以保留位置（留待以后填充代码）。如果函数定义中省略了返回值类型，则默认为int类型。
程序可以看成是变量定义和函数定义的集台。函数之间的通信可以通过参数、函数返回值以及外部变量进行。函数在源文件中出现的次序可以是任意的。只要保证每一个函数不被分离到多个文件中，源程序就可以分成多个文件。
被调用函数通过return语句向调用者返回值，return语句的后面可以跟任何表达式：
return 表达式；
在必要时，表达式将被转换为函数的返回值类型。表达式两边通常加一对圆括号，此处的括号是可选的。
调用函数可以忽略返回值。并且，return语句的后面也不一定需要表达式。当return语句的后面没有表达式时，函数将不向调用者返回值。当被调用函数执行到最后的右花括号而结束执行时，控制同样也会返回给调用者（不返回值）。如果某个函数从一个地方返回时有返回值，而从另一个地方返回时没有返回值，该函数并不非法，但可能是一种出问题的征兆。在任何情况下，如果函数没有成功地返回一个值，则它的“值”肯定是无用的。",______的定义形式如下：返回值类型  函数明(参数声明表){声明和语句}。,"。
下面是一些示例：

1. 函数定义中省略了返回值类型，默认为int类型，如：dummy() {}
2. 函数返回值为整型，如：dummy() int
3. 函数返回值为浮点型，如：dummy() float
4. 函数返回值为字符串类型，如：dummy() char *
5. 函数返回值为自定义类型，如：dummy() struct { int a; int b; }
6. 函数定义中省略了参数声明表，默认第一个参数为整型，如：dummy(int x) {}
7. 函数定义中省略了参数声明表，默认第一个参数为整型，如：dummy(float x) {}
8. 函数定义中省略了参数声明表，默认第一个参数为整型，如：dummy(char x) {}
9. 函数返回值为 void 类型，如：dummy()

请根据上述文本，以下哪一项是不正确的?

A. 函数定义中可以省略返回值类型，但必须至少有一个参数。
B. 函数返回值为整型，如：dummy() int。","
 ______的定义形式如下：返回值类型  函数明(",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在不同的系统中，保存在多个源义件中的 C 语言程序的编译与加载机制是不同的。例如，在UNIX系统中，可以使用第1章中提到过的cc命令执行这一任务。假定有3个函数分别存放在名为main.c、getline.c与strindex.c的3个文件中，则可以使用命令
cc main.c getline.c strindex.c来编译这3个文件，并把生成的目标代码分别存放在文件main.o、getline.o与strindex.o中，然后再把这3个文件一起加载到可执行文件a.out中。如果源程序中存在错误（比如文件main.c中存在错误），则可以通过命令
cc main.c getline.o strindex.o对main.c文件重新编译，并将编译的结果与以前已编译过的目标文件getline.o和strindex.o一起加载到可执行文件中。cc 命令使用“ .c”与“ .o”这两种扩展名来区分 源文件与目标文件",______的编译与加载机制在不同的系统中有所不同,"扩展名来指定编译的源文件和目标文件。

在不同的系统中，保存在多个源义件中的 C 语言程序的编译与加载机制是不同的。例如，在 UNIX 系统中，可以使用第 1 章中提到过的 cc 命令执行这一任务。假设有一个名为 main.c 的源文件，它包含一个函数 main()，该函数接受两个整数参数 a 和 b，并返回它们的和。main() 函数的源代码如下：

```
int main(int a, int b) {
    return a + b;
}
```

请根据上述文本内容，完成以下填空题：

在 UNIX 系统中，使用 cc 命令可以执行______来编译 main.c 文件。

在 UNIX 系统中，使用 cc 命令可以执行______来编译 getline.c 文件。

在 UNIX 系统中，使用 cc 命令可以执行______来编译 strindex.c 文件。

在 UNIX 系统中，使用 cc 命令可以执行______来编译 main.c 文件并重新编译 getline.o 和 strindex.o 文件。","
 ______的编译与加载机制在不同的系统中",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
到目前为止，我们所讨论的函数都是不返回任何值（void）或只返回 int 类型值的函数。 假如某个函数必须返回其它类型的值， 该怎么办呢？ 许多数值函数（如sqrt、sin 与cos等函数）返回的是 double 类型的值，某些专用函数则返回其它类型的值。我们通过函数atof(s)来说明函数返回非整型值的方法。该函数把字符串s转换为相应的双精度浮点数。atof 函数是atoi函数的扩展，atof函数需要处理可选的符号和小数点，并要考虑可能缺少整数部分或小数部分的情况。标准库中包含类似功能的 atof 函数，在头文件<stdlib.h>中声明。",______函数返回的是double类型的值。,"
 请根据以上文本内容，将下面的代码中的空格替换为相应的字符或语句：

到目前为止，我们所讨论的函数都是不返回任何值（void）或只返回 int 类型值的函数。 假如某个函数必须返回其它类型的值， 该怎么办呢？ 许多数值函数（如sqrt、sin 与cos等函数）返回的是 double 类型的值，某些专用函数则返回其它类型的值。我们通过函数atof(s)来说明函数返回非整型值的方法。该函数把字符串s转换为相应的双精度浮点数。atof 函数是atoi函数的扩展，atof函数需要处理可选的符号和小数点，并要考虑可能缺少整数部分或小数部分的情况。标准库中包含类似功能的 atof 函数，在头文件<stdlib.h>中声明。","
 ______函数返回的是double类型的值。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#include <ctype.h>
/* atof:  convert string s to double */
double atof(char s[])
{
double val, power;
int i, sign;
for (i = 0; isspace(s[i]); i++)  /* skip white space */
;
sign = (s[i] == '-') ? -1 : 1;
if (s[i] == '+' || s[i] == '-')
i++;
for (val = 0.0; isdigit(s[i]); i++)
val = 10.0 * val + (s[i] - '0');
if (s[i] == '.')
i++;
for (power = 1.0; isdigit(s[i]); i++) {
val = 10.0 * val + (s[i] - '0');
power *= 10;
}
return sign * val / power;
}",______函数用于将字符串转换为双精度浮点数。,"return sign * val * pow(10, power);
}","
 ______函数用于将字符串转换为双精度浮点数",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
调用函数必须知道 atof 函数返回的是非整型值，这一点也是很重要的。为了达到该目的，一种方法是在调用函数中显式声明atof函数。",______函数返回的是非整型值，这一点也是很重要的。,"
 题目：在调用atof函数时，为了确保返回值是非整型值，我们需要在调用函数中显式声明什么？

A. int
B. float
C. double
D. char","
 ______函数返回的是非整型值，这一点也是很重要的。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#include <stdio.h>
#define MAXLINE 100
/* rudimentary calculator */
main()
{
double sum, atof(char []);//表明sum是一个double类型的变量，atof函数带有个char[]类型的参数，且返回一个double类型的值
char line[MAXLINE];
int getline(char line[], int max);
sum = 0;
while (getline(line, MAXLINE) > 0)
printf(""\t%g\n"", sum += atof(line));
return 0;
}
",______是一个C语言预处理指令，用于包含标准输入输出库的头文件。,"
 请根据以下文本内容出一道填空题:

#include <stdio.h>
#define MAXLINE 100
/* rudimentary calculator */
main()
{
double sum, atof(char \*);//表明sum是一个double类型的变量，atof函数带有个char[]类型的参数，且返回一个double类型的值
char line[MAXLINE];
int getline(char line[], int max);
sum = 0;
while (getline(line, MAXLINE) > 0)
printf(""\t%g\n"", sum += atof(line));
return 0;
}

空格处应填入什么内容?","
 ______是一个C语言预处理指令，用于包含标准输入输出库的头文件。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:

根据前面有关函数的声明如何与定义保持一致的讨论，发生不匹配现象似乎很令人吃惊。其中的一个原因是，如果没有函数原型，则函数将在第一次出现的表达式中被隐式声明，例如：
sum += atof(line)
如果先前没有声明过的一个名字出现在某个表达式中，并且其后紧跟一个左圆括号，那么上下文就会认为该名字是一个函数名字， 该函数的返回值将被假定为int类型，但上下文并不对其参数作任何假设。并且，如果函数声明中不包含参数，例如：
double atof();
那么编译程序也不会对函数atof的参数作任何假设，并会关闭所有的参数检查。对空参数表的这种特殊处理是为了使新的编译器能编译比较老的C语言程序。不过，在新编写的程序中这么做是不提倡的。如果函数带有参数，则要声明它们；如果没有参数，则使用void进行声明。",______是为了使新的编译器能编译比较老的C语言程序。,"
 问题：在以下代码中，哪个变量被声明了但未赋值？

```c
double atof();
int main() {
    double sum = atof(line);
    //...
}
```

答案：`double atof();`","
 ______是为了使新的编译器能编译比较旧的C语言程序。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
/* atoi: convert string s to integer using atof */
int atoi(char s[])
{
double atof(char s[]);
return (int) atof(s);
}
",______函数可以将字符串转换为整数。,"
 以下是一道填空题:

void atoi(char \*s)
{
double atof(char \*s);
return (int) atof(s);
}","
 ______函数可以将字符串转换为整数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
请注意函数的声明和 return 语句的结构。在下列形式的 return 语句中：
return(表达式);
其中，表达式的值在返回之前将被转换为函数的类型。因为函数atoi的返回值为int类型，所以，return语句中的atof函数的double类型值将被自动转换为int类型值。但是，这种操作可能会丢失信息，某些编译器可能会对此给出警告信息。在该函数中，由于采用了类型转换的方法显式表明了所要执行的转换操作，因此可以防止有关的警告信息。",______的返回值为int类型，所以，return语句中的atof函数的double类型值将被自动转换为int类型值。,"
 下面是一道根据给定文本的填空题：

在C语言中，atoi函数的返回值是______类型。","
 ______的返回值为int类型，所以，return语句中的atof函数的double类型值将被自动转换为int类型值。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
C语言程序可以看成由一系列的外部对象构成，这些外部对象可能是变量或函数。形容词external与internal相对的，internal用于描述定义在函数内部的函数参数及变量。外部变量定义在函数之外，因此可以在许多函数中使用。由于 C 语言不允许在一个函数中定义其它函数，因此函数本身是“外部的”。默认情况下，外部变量与函数具有下列性质：通过同一个名字对外部变量的所有引用（即使这种引用来自于单独编译的不同函数）实际上都是引用同一个对象（标准中把这一性质称为外部链接）。在这个意义上，外部变量类似于Fortran语言的COMMON块或Pascal语言中在最外层程序块中声明的变量。我们将在后面介绍如何定义只能在某一个源文件中使用的外部变量与函数。
因为外部变量可以在全局范围内访问，这就为函数之间的数据交换提供了一种可以代替函数参数与返回值的方式。任何函数都可以通过名字访问一个外部变量，当然这个名字需要通过某种方式进行声明。
如果函数之间需要其享大量的变量，使用外部变量要比使用一个很长的参数表更方便、有效。但是这样做必须非常谨慎，因为这种方式可能对程序结 构产生不良的影响，而且可能会导致程序中各个函数之间具有太多的数据联系。",______是定义在函数内部的函数参数及变量。,"需要传递参数，函数的参数可以看做是函数内部的局部变量。在函数内部，局部变量与函数外部的变量是不同的，因为它们在不同的作用域中。在函数内部，局部变量可以通过名字直接访问，并且可以被修改。函数参数可以看做是函数内部临时存储数据的一种方式，它们通常在函数调用结束后被销毁。

外部变量和函数都是C语言中非常重要的概念，掌握它们可以帮助我们更好地理解C语言程序的结构和功能。","
 ______是定义在函数内部的函数参数",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
外部变量的用途还表现在它们与内部变量相比具有更大的作用域和更长的生存期。自动变量只能在函数内部使用，从其所在的函数被调用时变量开始存在，在函数退出时变量也将消失。而外部变量是永久存在的，它们的值在一次函数调用到下一次函数调用之间保持不变。 因此，如果两个函数必须共享某些数据，而这两个函数互不调用对方，这种情况下最方便的方式便是把这些共享数据定义为外部变量，而不是作为函数参数传递。
",______的作用域和生存期比内部变量更大。,"
 以下哪项关于外部变量的描述是正确的？

A. 外部变量的作用域和生存期比内部变量更大。
B. 自动变量只在函数内部使用，且在函数退出时消失。
C. 外部变量是临时存在的，只在一次函数调用之间保持不变。
D. 外部变量可以被多个函数共享，且其值在函数调用之间保持不变。","
 ______的作用域和生存期比内部变量更大。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
我们的目标是编写一个具有加（+）、减（-）、乘（*）、除（/）四则运算功能的计算器程序。为了更容易实现，我们在计算器中使用逆波兰表示法代替普通的中锻表示法（逆波兰表示法用在某些袖珍计算器中，Forth与Postscript等语言也使用了逆波兰表示法）。
在逆波兰表示法中，所有运算符都跟在操作数的后面。比如，下列中缀表达式：
(1 – 2) * (4 + 5)
采用逆波兰表示法表示为：
1 2 - 4 5 + *
逆波兰表示法中不需要圆括号，只要知道每个运算符需要几个操作数就不会引起歧义。
计算器程序的实现很简单。每个操作数都被依次压入到栈中； 当一个运算符到达时，从栈中弹出相应数目的操作数（对二元运算符来说是两个操作数），把该运算符作用于弹出的操作数，并把运算结果再压入到栈中。例如，对上面的逆波兰表达式来说， 首先把1和2压入到栈中，再用两者之差-1 取代它们；然后，将4和5压入到栈中，再用两者之和9取代它们。最后，从栈中取出栈顶的-1和9，并把它们的积-9 压入到栈顶。到达输入行的末尾时，把栈顶的值弹出并打印。
这样，该程序的结构就构成一个循环，每次循环对一个运算符及相应的操作数执行一次操作：
while (下一个运算符或操作数不是文件结束指示符)
if (是数)
将该数压入到栈中
else if (是运算符)
弹出所需数目的操作数
执行运算
将结果压入到栈中
else if (是换行符)
弹出并打印栈顶的值
else
出错
栈的压入与弹出操作比较简单，但是，如果把错误检测与恢复操作都加进来，该程序就显得很长了，最好把它们设计成独立的函数，而不要把它们作为程序中重复的代码段使用。另外还需要一个单独的函数来取下一个输入运算符或操作数。",______的目标是编写一个具有加、减、乘、除四则运算功能的计算器程序。,"把运算结果放入栈中；当运算符栈顶元素为“0”时，程序结束。

以下是一个C语言实现的示例代码：

```c
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

// 计算表达式
int calculate(char *expression) {
    int result = 0;
    int operation = 0;
    int num1 = 0;
    int num2 = 0;
    int temp1, temp2;
    int stack[100];

    // 栈操作
    for (int i = 0; expression[i]!= '\0'; i++) {
        if (expression[i] =='') {
            continue;
        }

        if (expression[i] == '(') {
            stack[operation++] = expression[i];
        } else if (expression[i] == ')') {
            while (stack[operation]!= '(') {
                result = result * num2 / num1 + stack[operation++];
            }
            stack[operation] = '\0';
        } else {
            num1 = num1 * 10 + (expression[i] - '0');
            num2 = num2 * 10 + (expression[i + 1] - '0');
            if (expression[i] == '+') {
                stack[operation++] = num1 + num2;
            } else if (expression[i] == '-') {
                stack[operation++] = num1 - num2;
            } else if (expression[i] == '*') {
                stack[operation++] = num1 * num2;
            } else if (expression[i] == '/') {
                stack[operation++] = num1 / num2;
            }
        }
    }

    while (stack[operation]!= '0') {
        result = result * stack[operation++];
    }

    return result;
}

int main() {
    char expression[100];
    printf(""请输入一个中缀表达式（例如：1","
 ______的目标是编写一个具有加、",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
到目前为止，我们还没有讨论设计中的一个重要问题：把栈放在哪儿？也就是说，哪些例程可以直接访问它？一种可能是把它放在主函数main中，把栈及其当前位置作为参数传递给对它执行压入或弹出操作的函数。但是main函数不需要了解控制栈的变量信息，它只进行压入与弹出操作。因此，可以把栈及相关信息放在外部变量中，并只供push与pop函数访问，而不能被main函数访问。
把上面这段话转换成代码很容易。如果把该程序放在一个源文件中，程序可能类似于下列形式：
#include...    /* 一些包含头文件  */
#define...     /* 一些 define 定义  */
main 使用的函数声明
main() { ... }
push 与 pop 所使用的外部变量
void push( double f) { ... }
double pop(void) { ... }
int getop(char s[]) { ... }
被 getop 调用的函数
",______是设计中的一个重要问题，即栈应该放在哪里，哪些例程可以直接访问它？,"return 0;
}","
 ______是设计中的一个重要问题，即栈应该放在哪里，哪些例程可以直接访问它",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:

#include <stdio.h>
#include <stdlib.h> /* for  atof() */
#define MAXOP  100 /* max size of operand or operator */
#define NUMBER  '0'  /* signal that a number was found */
int getop(char []);
void push(double);
double pop(void);
/* reverse Polish calculator */
main()
{
int type;
double op2;
char s[MAXOP];
while ((type = getop(s)) != EOF) {
switch (type) {
case NUMBER:
push(atof(s));
break;
case '+':
push(pop() + pop());
break;
case '*':
push(pop() * pop());
break;
case '-':
op2 = pop();
push(pop() - op2);
break;
case '/':
op2 = pop();
if (op2 != 0.0)
push(pop() / op2);
else
printf(""error: zero divisor\n"");
break;
case '\n':
printf(""\t%.8g\n"", pop());
break;
default:
printf(""error: unknown command %s\n"", s);
break;
}
}
return 0;
}",______是用于将操作数压入栈中的函数。,"0) {
push(pop() / op2);
}
else {
printf(""Error: Division by zero\n"");
}
break;
}
printf(""Result: %.4f\n"", pop());
}

return 0;

```

以下哪个操作符在程序中没有用到？

答案：\_\_\_\_\_\_\_\_\_\_","
 ______是用于将操作数压入",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:

#define MAXVAL 100 /* maximum depth of val stack */
int sp = 0;         /* next free stack position */
double val[MAXVAL]; /* value stack */
/* push: push f onto value stack */
void push(double f)
{
if (sp < MAXVAL)
val[sp++] = f;
else
printf(""error: stack full, can't push %g\n"", f);
}
/* pop: pop and return top value from stack */
double pop(void)
{
if (sp > 0)
return val[--sp];
else {
printf(""error: stack empty\n"");
return 0.0;
}
}",______是将一个元素压入栈中的操作。,"
 请根据以下文本内容出一道填空题:

#define MAXVAL 100 /* maximum depth of val stack */
int sp = 0;         /* next free stack position */
double val[MAXVAL]; /* value stack */
/* push: push f onto value stack */
void push(double f)
{
if (sp < MAXVAL)
val[sp++] = f;
else
printf(""error: stack full, can't push %g\n"", f);
}
/* pop: pop and return top value from stack */
double pop(void)
{
if (sp > 0)
return val[--sp];
else {
printf(""error: stack empty\n"");
return 0.0;
}
}

根据上述代码，以下哪个函数可以用来将一个整数压入栈中？

A. push
B. pop
C. pushf
D. pushi","
 ______是将一个元素压入栈中的操作。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
如果变量定义在任何函数的外部，则是外部变量。因此，我们把push和pop函数必须共享的栈和栈顶指针定义在这两个函数的外部。但是main函数本身并没有引用栈或栈顶指针，因此，对main函数而言要将它们隐藏起来。",______定义在任何函数的外部被称为外部变量。,"
 以下是一道填空题:

如果变量定义在任何函数的外部,则是外部变量。因此,我们称push和pop函数必须共享的栈和栈顶指针定义在这两个函数的外部。但是main函数本身本身并没有引用栈或栈顶指针,因此,对main函数而言要将它们隐藏起来。

填空题:

将以下代码中的“__attribute__((visibility(push)))”和“__attribute__((visibility(pop)))”替换为“extern”关键字,并确保代码中只保留一个栈。

```c
extern void push(int *stack, int value);
extern void pop(int *stack);

int main() {
    int stack[10];
    int top = 0;
    
    // 压栈
    push(&stack[top], 10);
    
    // 出栈
    printf(""%d\n"", pop(&stack[top]));
    
    return 0;
}
```","
 ______定义在任何函数的外部被称为外部变量。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
getop函数获取下一个运算符或操作数。该任务实现起来比较容易。它需要跳过空格与制表符。如果下一个字符不是数字或小数点，则返回；否则，把这些数字字符串收集起来（其中可能包含小数点），并返回 NUMBER，以标识数已经收集起来了。",______函数用于获取下一个运算符或操作数。,"
 getop函数获取下一个运算符或操作数。该任务实现起来比较容易。它需要跳过空格与制表符。如果下一个字符不是数字或小数点，则返回；否则，把这些数字字符串收集起来（其中可能包含小数点），并返回 NUMBER，以标识数已经收集起来了。

下面是针对该文本内容的填空题：

getop函数获取下一个运算符或操作数。该任务实现起来比较容易。它需要跳过空格与制表符。如果下一个字符不是数字或小数点，则返回；否则，把这些数字字符串收集起来（其中可能包含小数点），并返回 NUMBER，以标识数已经收集起来了。

空格  制表符  数字或小数点    返回值

______  ______  ______  __","
 ______函数用于获取下一个运算符或操作数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:


#include <ctype.h>
int getch(void);
void ungetch(int);
/* getop: get next character or numeric operand */
int getop(char s[])
{
int i, c;
while ((s[0] = c = getch()) == ' ' || c == '\t')
;
s[1] = '\0';
if (!isdigit(c) && c != '.')
return c;     /* not a number */
i = 0;
if (isdigit(c)) /* collect integer part */ 
while (isdigit(s[++i] = c = getch())) 
; 
if (c == '.') /* collect fraction part */ 
while (isdigit(s[++i] = c = getch())) 
; 
s[i] = '\0'; 
if (c != EOF) 
ungetch(c); 
return NUMBER; 
} ",______函数用于获取下一个字符或数字操作数。,"UMBER(s);
}

#include <stdio.h>
int main(void)
{
int num, den;
printf(""Enter numerator: "");
scanf(""%d"", &num);
printf(""Enter denominator: "");
scanf(""%d"", &den);
int result = getop(printf(""%.*f"", num, den));
printf(""Result: %.2f\n"", result);
return 0;
}


这道题的答案是什么？ 

 这道题的答案是：printf(""%.*f"", num, den);","
 ______函数用于获取下一个字符或数字操作数",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
程序中经常会出现这样的情况：程序不能确定它已经读入的输入是否足够，除非超前多读入一些输入。读入一些字符以 合成一个数字的情况便是一例：在看到第一个非数字字符之前，已经读入的数的完整性是不 能确定的。由于程序要超前读入一个字符，这样就导致最后有一个字符不属于当前所要读入的数。
如果能“反读”不需要的字符，该问题就可以得到解决。每当程序多读入一个字符时，就把它压回到输入中，对代码其余部分而言就好像没有读入该字符一样。我们可以编写一对互相协作的函数来比较方便地模拟反取字符操作。getch 函数用于读入下一个待处理的字符， 而 ungetch 函数则用于把字符放回到输入中，这样，此后在调用getch函数时，在读入新的输入之前先返回ungetch函数放回的那个字符。
这两个函数之间的协同工作也很简单。ungetch函数把要压回的字符放到一个共享缓冲区（字符数组）中，当该缓冲区不空时getch函数就从缓冲区中读取字符；当缓冲区为空时，getch函数调用getchar函数直接从输入中读字符。这里还需要增加一个下标变量来记住缓冲区中当前字符的位置。
由于缓冲区与下标变量是供getch与ungetch 函数共享的，且在两次调用之间必须保持值不变，因此它们必须是这两个函数的外部变量。",______是程序中经常出现的情况，程序不能确定它已经读入的输入是否足够，除非超前多读入一些输入。 (提示：名词),简单：如果 ungetch 函数被调用，它将把字符放回到输入中，并返回该字符；如果 getch 函数被调用，它将读入下一个字符，并返回该字符。这样，调用者就可以在不同的时间点使用这两个函数来获取输入，而不必担心程序在某个时刻没有读入字符。,"
 ______是程序中经常会出现的情况，程序不能确定它已经读入的输入是否足够，",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#define BUFSIZE 100
char buf[BUFSIZE];   /* buffer for ungetch */
int bufp = 0;        /* next free position in buf */
int getch(void)  /* get a (possibly pushed-back) character */
{
return (bufp > 0) ? buf[--bufp] : getchar();
}
void ungetch(int c)  /* push character back on input */
{
if (bufp >= BUFSIZE)
printf(""ungetch: too many characters\n"");
else
buf[bufp++] = c;
}",______是用于ungetch函数中的缓冲区大小常量。,"
 请从以下选项中选择正确的函数名:

1. getch
2. ungetch
3. both
4. none","
 ______是用于ungetch函数中的缓冲区大小常量。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
构成 C 语言程序的函数与外部变量可以分开进行编译。一个程序可以存放在几个文件中，原先已编译过的函数可以从库中进行加载。这里我们感兴趣的问题有：
.如何进行声明才能确保变量在编译时被正确声明？
.如何安排声明的位置才能确保程序在加载时各部分能正确连接？
.如何组织程序中的声明才能确保只有一份副本？
.如何初始化外部变量？
为了讨论这些问题，我们重新组织前面的计算器程序，将它分散到多个文件中。从实践的角度来看，计算器程序比较小，不值得分成几个文件存放，但通过它可以很好地说明较大的程序中遇到的类似问题。",______的声明位置可以确保程序在加载时各部分能正确连接？,"
 以下是一道填空题:

C语言程序中的函数和外部变量可以分开进行编译,使得一个程序可以存放在几个文件中,原先已编译过的函数可以从库中进行加载。为了确保变量在编译时被正确声明,需要进行______。为了确保程序在加载时各部分能正确连接,需要安排______的位置。为了确保程序中只有一个份副本文本,需要组织______。为了初始化外部变量,可以使用______方法。","
 ______的声明位置可以确保程序在加载时各部分能正确连接？",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
名字的作用域指的是程序中可以使用该名字的部分。对于在函数开头声明的自动变量来说，其作用域是声明该变量名的函数。不同函数中声明的具有相同名字的各个局部变量之间没有任何关系。函数的参数也是这样的，实际上可以将它看作是局部变量。
外部变量或函数的作用域从声明它的地方开始，到其所在的（待编译的）文件的末尾结束。",______的作用域指的是程序中可以使用该名字的部分。,"
 下面是一个关于名字作用域的填空题：

下列哪个部分是自动变量在函数内的作用域？
A. 声明该变量名的函数
B. 声明该变量名的函数内的所有局部变量
C. 声明该变量名的函数及其外部作用域的结束处
D. 声明该变量名的函数内的所有局部变量和参数","
 ______的作用域指的是程序中可以使用该名字的部分。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
例如，如果main、sp、val、push与pop是依次定义在某个文件中的5个函数或外部变量，如下所示：
main() { ... }
int sp = 0;
double val[MAXVAL];
void push(double f) { ... }
double pop(void) { ... }
那么，在push与pop这两个函数中不需进行任何声明就可以通过名字访问变量sp与val，但是这两个变量名不能用在 main 函数中，push与pop函数也不能用在 main 函数中。",______是依次定义在某个文件中的5个函数或外部变量。,"
 请根据以下文本内容出一道填空题：

例如，如果main、sp、val、push与pop是依次定义在某个文件中的5个函数或外部变量，如下所示：
main() {... }
int sp = 0;
double val[MAXVAL];
void push(double f) {... }
double pop(void) {... }
那么，在push与pop这两个函数中不需进行任何声明就可以通过名字访问变量sp与val，但是这两个变量名不能用在 main 函数中，push与pop函数也不能用在 main 函数中。

填空题：

在上述代码中，以下哪个变量名不能用在main函数中？
A. sp
B. push
C. val
D. pop","
 ______是依次定义在某个文件中的5个函数或外部变量。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
另一方面，如果要在外部变量的定义之前使用该变量，或者外部变量的定义与变量的使用不在同一个源文件中，则必须在相应的变量声明中强制性地使用关键字extern。",______，如果要在外部变量的定义之前使用该变量，或者外部变量的定义与变量的使用不在同一个源文件中，则必须在相应的变量声明中强制性地使用关键字extern。,"
 以下是一道根据给定文本内容出的填空题:

extern 关键字用于在 C 语言程序中 __ __ 的声明之前使用外部变量,或者在外部变量的定义与变量的使用不在同一个源文件中时,用于强制性地声明该变量。

答案:extern 关键字用于在 C 语言程序中 __ __ 的声明之前使用外部变量,或者在外部变量的定义与变量的使用不在同一个源文件中时,用于强制性地声明该变量。","
 ______，如果要在外部变量的定义之前使用该变量，或者外部变量的定义与变量的使用不在同一个源文件中，则必须在相应的变量声明中强制性地使用关键字extern。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
将外部变量的声明与定义严格区分开来很重要。变量声明用于说明变量的属性（主要是变量的类型)，而变量定义除此以外还将引起存储器的分配。如果将下列语句放在所有函数的外部:
int sp;
double val [MAXVAL];
那么这两条语句将定义外部变量sp与val，并为之分配存储单元，同时这两条语句还可以作为该源文件中其余部分的声明。而下面的两行语句:
extern int sp;
extern double val [ ] ;
为源文件的其余部分声明了一个int类型的外部变量 sp以及一个double数组类型的外部变量val(该数组的长度在其它地方确定)，但这两个声明并没有建立变量或为它们分配存储单元。",______是用于说明变量的属性，主要是变量的类型。,"
 问题：在给定的代码段中，哪些语句用于声明外部变量？

选项：
A. int sp;
B. double val [MAXVAL];
C. extern int sp;
D. extern double val [ ];","
 ______是用于说明变量的属性，主要是变量的类型。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在一个源程序的所有源文件中，一个外部变量只能在某个文件中定义一次，而其它文件可以通过extern声明来访问它（定义外部变量的源文件中也可以包含对该外部变量的extern声明)。外部变量的定义中必须指定数组的长度，但extern声明则不一定要指定数组的长度。外部变量的初始化只能出现在其定义中。",______只能在某个文件中定义一次，而其它文件可以通过extern声明来访问它。,"
 以下是一道根据给定文本的填空题:

在一个源程序的所有源文件中,一个外部变量只能在某个文件中定义一次,而其它文件可以通过extern声明来访问它(定义外部变量的源文件中也可以包含对该外部变量的extern声明)。外部变量的定义中必须指定数组的长度,但extern声明则不一定要指定数组的长度。外部变量的初始化只能出现在其定义中。

填空题:

在以下代码中,哪一行定义了一个外部变量并指定了其数组长度?

```
extern int my_var;

int main() {
    extern int my_var;
    my_var = 10;
    return 0;
}
```

答案:

在`extern int my_var;`这一行中,`int my_var`定义了一个外部变量`my_var`,并指定了其数组长度为`int`。","
 ______只能在某个文件中定义一次，而其它文件可以通过extern声明来访问它。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
假定函数push 与pop定义在一个文件中，而变量val与sp在另一个文件中定义并被初始化(通常不大可能这样组织程序),则需要通过下面这些定义与声明把这些函数和变量“绑定”在一起:          在文件file1 中:
extern int sp;
extern double val [ ];
void push (double f) { ... }double pop ( void){ ... }在文件 file2中:
int sp = 0;
double val [ MAXVAL];
由于文件 filel中的extern声明不仅放在函数定义的外面，而且还放在它们的前面，因此它们适用于该文件中的所有函数。对于file1，这样一组声明就够了。如果要在同一个文件中先使用、后定义变量sp 与val，也需要按照这种方式来组织文件。",______函数和变量“绑定”在一起的方式？,"
 以下是一道基于上述文本的填空题:

在文件file1中,需要通过以下方式将函数push和变量val绑定在一起:

extern int \_\_\_\_\_\_\_;
extern double \_\_\_\_\_\_\_[];
void \_\_\_\_\_\_\_ (double f);
double \_\_\_\_\_\_\_ (void);

在文件file2中,需要通过以下方式将函数push和变量val绑定在一起:

int \_\_\_\_\_\_\_ = 0;
double \_\_\_\_\_\_\_ [MAXVAL];

对于file1,这样一组声明就够了。如果要在同一个文件中先使用、后定义变量sp与val,也需要按照这种方式来组织文件。

【答案】

在文件file1中,需要通过以下方式将函数push和变量val绑定在一起:
extern int sp;
extern double val [ ];
void push (double f) {... }double pop ( void){... }

在文件file2中,需要通过以下方式将函数push和变量val绑定在一起:
int sp = 0;
double val [ MAXVAL];

对于file1,这样一组声明就够了。如果要在同一个文件中先使用、后定义变量sp与val,也需要按照这种方式来组织文件。","
 ______函数和变量“绑定”在一起的方式？",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
下面我们来考虑把上述的计算器程序分割到若干个源文件中的情况。如果该程序的各组成部分很长，这么做还是有必要的。我们这样分割:将主函数 main单独放在文件main.c中;将push 与 pop 函数以及它们使用的外部变量放在第二个文件 stack.c中;将getop函数放在第三个文件getop.c中;将getch 与ungetch 函数放在第四个文件 getch.c中。之所以分割成多个文件，主要是考虑在实际的程序中，它们分别来自于单独编译的库。
此外，还必须考虑定义和声明在这些文件之间的共享问题。我们尽可能把共享的部分集中在一起，这样就只需要一个副本，改进程序时也容易保证程序的正确性。我们把这些公共部分放在头文件 calc.h中，在需要使用该头文件时通过#include 指令将它包含进来",______的分割和共享问题在C语言程序设计中是非常重要的。,"
 下面我们来考虑把上述的计算器程序分割到若干个源文件中的情况。如果该程序的各组成部分很长，这么做还是有必要的。我们这样分割:将主函数 main 单独放在文件 main.c 中;将 push 与 pop 函数以及它们使用的外部变量放在第二个文件 stack.c 中;将 getop 函数放在第三个文件 getop.c 中;将 getch 与 ungetch 函数放在第四个文件 getch.c 中。之所以分割成多个文件，主要是考虑在实际的程序中，它们分别来自于单独编译的库。
此外，还必须考虑定义和声明在这些文件之间的共享问题。我们尽可能把共享的部分集中在一起，这样就只需要一个副本，改进程序时也容易保证程序的正确性。我们把这些公共部分放在头文件 calc.h 中，在需要使用该头文件时通过 #include 指令将它包含进来。

填空题：在上述文本中，主函数 main 被放在哪个文件中？
答案：main.c","
 ______的分割和共享问题在C语言程序设计中是非常重要的。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
我们对下面两个因素进行了折衷:一方面是我们期望每个文件只能访问它完成任务所需的信息;另一方面是现实中维护较多的头文件比较困难。我们可以得出这样一个结论:对于某些中等规模的程序，最好只用一个头文件存放程序中各部分共享的对象。较大的程序需要使用更多的头文件，我们需要精心地组织它们。",______,"
 根据文本内容，下面这个空格处应填入一个能表示上述结论的语句。例如：

对于某些中等规模的程序，最好只用一个头文件存放程序中各部分共享的对象，因为这样可以减少头文件的维护成本，同时便于程序的阅读和维护。较大的程序需要使用更多的头文件，我们需要精心地组织它们，以提高代码的重用性和模块化程度。","
 ______",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
某些变量，比如文件stack.c 中定义的变量sp与val以及文件 getch.c中定义的变量buf 与 bufp，它们仅供其所在的源文件中的函数使用，其它函数不能访问。用static声明限定外部变量与函数，可以将其后声明的对象的作用域限定为被编译源文件的剩余部分。通过static限定外部对象，可以达到隐藏外部对象的目的，比如，getch-ungetch 复合结构需要共享buf与 bufp两个变量，这样buf与 bufp必须是外部变量，但这两个对象不应该被getch 与ungetch 函数的调用者所访问。",______声明可以将变量的作用域限定为所在的源文件的剩余部分。,"
 根据以上文本，下面哪个选项是正确的？

A. 静态变量可以被所有源文件中的函数访问。
B. 通过static声明限定外部变量与函数，可以将其后声明的对象的作用域限定为被编译源文件的剩余部分。
C. 静态变量必须被外部函数访问。
D. 静态外部变量可以被外部函数访问。","
 ______声明可以将变量的作用域限定为所在的源文件的剩余部分。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
static char buf[BUFSIZE];/* buffer for ungetch */
static int bufp = 0;/* next free position in buf */
int getch (void){ ... }
void ungetch(int c) { ... }",______是用于ungetch函数的缓冲区。,"
 以下是一道填空题:

void ungetch(int c) {
    buf[bufp] = c;
    bufp++;
}","
 ______是用于ungetch函数的缓冲区。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
static也可用于声明内部变量。static类型的内部变量同自动变量一样，是某个特定函数的局部变量，只能在该函数中使用，但它与自动变量不同的是，不管其所在函数是否被调用，它一直存在，而不像自动变量那样，随着所在函数的被调用和退出而存在和消失。换句话说，static类型的内部变量是一种只能在某个特定函数中使用但一直占据存储空间的变量。",______类型的内部变量是某个特定函数的局部变量，与自动变量不同的是，不管其所在函数是否被调用，它一直存在。,"
 根据以上文本，以下是一个关于static类型内部变量的填空题：

static types 的内部变量是某种类型的变量，它同自动变量一样是某个特定函数的局部变量，只能在该函数中使用，但它与自动变量不同的是，不管其所在函数是否被调用，它一直存在，而不像自动变量那样，随着所在函数的被调用和退出而存在和消失。换句话说，static types 的内部变量是一种只能在某个特定函数中使用但一直占据存储空间的变量。","
 ______类型的内部变量是某个特定函数的局部变量，与自动变量不同的是，不管其所在函数是否被调用，它一直存在。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
register声明告诉编译器，它所声明的变量在程序中使用频率较高。其思想是，将register变量放在机器的寄存器中，这样可以使程序更小、执行速度更快。但编译器可以忽略此选项。
register声明的形式如下所示:register int x;
register char c;
register声明只适用于自动变量以及函数的形式参数",______声明告诉编译器，它所声明的变量在程序中使用频率较高。,"
 以下是一个关于register声明的填空题：

register声明告诉编译器，它所声明的变量在程序中使用频率较高。其思想是，将register变量放在机器的寄存器中，这样可以使程序更小、执行速度更快。但编译器可以忽略此选项。register声明的形式如下所示:________ int x;
register char c;
register声明只适用于自动变量以及函数的形式参数。","
 ______声明告诉编译器，它所声明的变量在程序中使用频率较高。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
实际使用时，底层硬件环境的实际情况对寄存器变量的使用会有一些限制。每个函数中只有很少的变量可以保存在寄存器中，且只允许某些类型的变量。但是，过量的寄存器声明并没有什么害处，这是因为编译器可以忽略过量的或不支持的寄存器变量声明。另外，无论寄存器变量实际上是不是存放在寄存器中，它的地址都是不能访问的(有关这一点更详细的信息，我们将在第5章中讨论)。在不同的机器中，对寄存器变量的数目和类型的具体限制也是不同的。
",______对寄存器变量的使用会有一些限制,"
 每个函数中只有很少的变量可以保存在寄存器中，且只允许某些类型的变量。但是，过量的寄存器声明并没有什么害处，这是因为编译器可以忽略过量的或不支持的寄存器变量声明。另外，无论寄存器变量实际上是不是存放在寄存器中，它的地址都是不能访问的（有关这一点更详细的信息，我们将在第5章中讨论）。在不同的机器中，对寄存器变量的数目和类型的具体限制也是不同的。

填空题：在实际的底层硬件环境中，对于寄存器变量的使用会有一些限制，包括每个函数中只能保存少量的变量在寄存器中，并只允许某些类型的变量。即使过量的寄存器声明，也没有什么害处，因为编译器可以忽略这些或不支持的寄存器变量声明。此外，无论寄存器变量是否实际上存放在寄存器中，它的地址是不能访问的。在不同的机器中，对寄存器变量的数目和类型的具体限制也是不同的。","
 ______对寄存器变量的使用会有一些限制",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
C语言并不是Pascal等语言意义上的程序块结构的语言，它不允许在函数中定义函数。但是，在函数中可以以程序块结构的形式定义变量。变量的声明(包括初始化)除了可以紧跟在函数开始的花括号之后，还可以紧跟在任何其它标识复合语句开始的左花括号之后。以这种方式声明的变量可以隐藏程序块外与之同名的变量，它们之间没有任何关系，并在与左花括号匹配的右花括号出现之前一直存在。例如，在下面的程序段中:
",______声明的变量可以隐藏程序块外与之同名的变量。,"
 下面的程序段中:

```
int main() {
  int x, y;
  {
    int z;
    z = 10;
  }
  y = 20;
  printf(""x = %d, y = %d\n"", x, y);
  return 0;
}
```

空格处应填入的词语是：

```
int main() {
  int x, y;
  {
    int z;
    z = 10;
  }
  y = 20;
  printf(""x = %d, y = %d\n"", x, y);
  return 0;
}
```","
 ______声明的变量可以隐藏程序块外与之同名的变量。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在不进行显式初始化的情况下，外部变量和静态变量都将被初始化为0，而自动变量和寄存器变量的初值则没有定义（即初值为无用的信息)。
定义标量变量时，可以在变量名后紧跟一个等号和一个表达式来初始化变量
对于外部变量与静态变量来说，初始化表达式必须是常量表达式，且只初始化一次（从概念上讲是在程序开始执行前进行初始化)。对于自动变量与寄存器变量，则在每次进入函数或程序块时都将被初始化。
对于自动变量与寄存器变量来说，初始化表达式可以不是常量表达式:表达式中可以包含任意在此表达式之前已经定义的值，包括函数调用",______变量在不进行显式初始化的情况下将被初始化为0。,"
 根据文本内容，以下是一道填空题：

在定义标量变量时，可以通过在变量名后紧跟一个等号和一个表达式来初始化变量，其中表达式中可以包含任意在此表达式之前已经定义的值，包括函数调用。对于自动变量和寄存器变量，则需要在每次进入函数或程序块时进行初始化。而对于外部变量和静态变量，初始化表达式必须是常量表达式，且只初始化一次（从概念上讲是在程序开始执行前进行初始化）。","
 ______变量在不进行显式初始化的情况下将被初始化为0。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
数组的初始化可以在声明的后面紧跟一个初始化表达式列表，初始化表达式列表用花括号括起来，各初始化表达式之间通过逗号分隔。例如，如果要用一年中各月的天数初始化数组days，其变量的定义如下:
int days [ ] = { 31,28，31,30，31,30，31，31,30，31，30，31};当省略数组的长度时，编译器将把花括号中初始化表达式的个数作为数组的长度，在本例中数组的长度为12。
如果初始化表达式的个数比数组元索数少，则对外部变量、静态变量和自动变量来说，没有初始化表达式的元素将被初始化为0，如果初始化表达式的个数比数组元素数多，则是错误的。不能一次将一个初始化表达式指定给多个数组元素，也不能跳过前面的数组元素而直接初始化后面的数组元素。
对于外部变量与静态变量来说，初始化表达式必须是常量表达式，且只初始化一次（从概念上讲是在程序开始执行前进行初始化)。对于自动变量与寄存器变量，则在每次进入函数或程序块时都将被初始化。
对于自动变量与寄存器变量来说，初始化表达式可以不是常量表达式:表达式中可以包含任意在此表达式之前已经定义的值，包括函数调用，我们在3.3节中介绍的折半查找程序的初始化可以采用下列形式:",______的初始化可以在声明的后面紧跟一个初始化表达式列表，初始化表达式列表用花括号括起来，各初始化表达式之间通过逗号分隔。,初始化表达式写成两个或多个，并且每个初始化表达式必须独立写出一个，否则将无法表达式为有效的初始化表达式。,"
 ______的初始化可以在声明的后面紧跟一个初始化表达式列表，初始化表达式列表用",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
字符数组的初始化比较特殊:可以用一个字符串来代替用花括号括起来并用逗号分隔的初始化表达式序列。例如:
char pattern[ ] = ""ould "";它同下面的声明是等价的:
char pattern[ ] = { 'o ', 'u ', 'l', 'd'};
这种情况下，数组的长度是5(4个字符加上一个字符串结束符'\0 ')。
",______的初始化可以用一个字符串来代替用花括号括起来并用逗号分隔的初始化表达式序列。,"
 题目：下面哪个选项是正确的字符数组初始化表达式序列？

A. { 'a', 'b', 'c' }
B. ""hello""
C. { 'x', 'y', 'z' }
D. ""world""","
 ______的初始化可以用一个字符串来代替用花括号括起来并用逗号分隔的初始化表达式序列。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#include <stdio.h>
/* printd:print n in decimal /
void printd (int n)
{
if (n < 0 ){
putchar ( '-');
n = -n;
}
if (n / 10)
   printd ( n / 10);
putchar (n %10 +'0');
}",______是用来打印十进制数的函数。,"
 根据给出的文本，以下是一个填空题：

在以下代码中，void printd (int n) 的作用是：

______

选项：
A. 计算并打印 n 的绝对值
B. 计算并打印 n 的平方
C. 计算并打印 n 的十进制表示
D. 计算并打印 n 的二进制表示","
 ______是用来打印十进制数的函数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
C语言中的函数可以递归调用，即函数可以直接或间接调用自身。我们考虑一下将一个数作为字符串打印的情况。前面讲过，数字是以反序生成的:低位数字先于高位数字生成，但它们必须以与此相反的次序打印。",______可以直接或间接调用自身。,"
 C语言中的函数可以递归调用，即函数可以直接或间接调用自身。我们考虑一下将一个数作为字符串打印的情况。前面讲过，数字是以反序生成的:低位数字先于高位数字生成，但它们必须以与此相反的次序打印。

下面是针对这个文本内容的填空题:

在C语言中，函数可以通过以下方式实现递归调用：

空格: 

A. 函数可以直接调用自身
B. 函数可以间接调用自身
C. 函数只能直接调用自身，不能间接调用自身

在将一个数作为字符串打印时，数字是以反序列生成的，即：

空格: 

A. 高位数字先于低位数字生成并打印
B. 低位数字先于高位数字生成并打印
C. 高位数字先于低位数字生成，但它们必须以与此相反的次序打印

根据文本内容，填空题如下：

将一个数作为字符串打印时，数字是以反序列生成的，即：

空格: 

C. 高位数字先于低位数字生成，但它们必须以与此相反的次序打印","
 ______可以直接或间接调用自身。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
/* qsort: sort v[left]...v[right] into increasing order */
void qsort ( int v[], int left, int right)
{
int i, last;
void swap (int v[], int i, int j);
if ( left >= right)/* do nothing if array contains */
      return;
/*fewer than two elements */
swap(v, left,(left + right)/2);/* move partition elem */
last = left ;  /*to v[0]*/
for (i = left + 1; i <= right; i++)  /* partition */
  if(v[i] < v [left])
     swap ( v,++last, i);
swap ( v, left, last) ;
/*restore partition elem */
qsort (v, left, last-1);
qsort (v, last+1, right) ;
}",______函数用于将数组中的元素按升序排列。,"
 下面是填空题：

/* qsort: sort v[left]...v[right] into increasing order */
void qsort ( int v[], int left, int right)
{
int i, last;
void swap (int v[], int i, int j);
if ( left >= right)/* do nothing if array contains */
      return;
/*fewer than two elements */
swap(v, left,(left + right)/2);/* move partition elem */
last = left ;  /*to v[0]*/
for (i = left + 1; i <= right; i++)  /* partition */
  if(v[i] < v [left])
     swap ( v,++last, i);
swap ( v, left, last) ;
/*restore partition elem */
qsort (v, left, last-1);
qsort (v, last+1, right) ;
}

请填写空缺的部分：
1. void qsort ( int v[], int left, int right) 的目的是什么？
2. 在 qsort() 函数中，swap() 函数的作用是什么？
3. qsort() 函数在哪些情况下会返回 early？
4. 在 qsort() 函数中，last 变量用于什么目的？
5. qsort() 函数的最后一个参数是什么？","
 ______函数用于将数组中的元素按照递增顺序进行排序。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
递归并不节省存储器的开销，因为递归调用过程中必须在某个地方维护一个存储处理值的栈。递归的执行速度并不快，但递归代码比较紧凑，并且比相应的非递归代码更易于编写与理解。在描述树等递归定义的数据结构时使用递归尤其方便。我们将在6.5节中介绍一个比较好的例子。",______是递归调用过程中必须在某个地方维护一个存储处理值的栈。,"
 递归并不节省存储器的开销，因为递归调用过程中必须在某个地方维护一个存储处理值的栈。递归的执行速度并不快，但递归代码比较紧凑，并且比相应的非递归代码更易于编写与理解。在描述树等递归定义的数据结构时使用递归尤其方便。我们将在6.5节中介绍一个比较好的例子。

填空题：
递归并不节省存储器的开销，因为递归调用过程中必须在某个地方维护一个存储处理值的栈。递归的执行速度并不快，但递归代码比较紧凑，并且比相应的非递归代码更易于编写与理解。在描述树等递归定义的数据结构时使用递归尤其方便。我们将在6.5节中介绍一个比较好的例子。

空格处应填：递归并不节省存储器的开销，因为递归调用过程中必须在某个地方维护一个存储处理值的栈。递归的执行速度并不快，但递归代码比较紧凑，并且比相应的非递归代码更易于编写与理解。在描述树等递归定义的数据结构时使用递归尤其方便。我们将在6.5节中介绍一个比较好的例子。

答案：递归并不节省存储器的开销，因为递归调用过程中必须在某个地方维护一个存储处理值的栈。递归的执行速度并不快，但递归代码比较紧凑，并且比相应的非递归代码更易于编写与理解。在描述树等递归定义的数据结构时使用递归尤其方便。我们将在6.5节中介绍一个比较好的例子。","
 ______是递归调用过程中必须在某个地方维护一个存储处理值的栈。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
C语言通过预处理器提供了一些语言功能。从概念上讲，预处理器是编译过程中单独执行的第一个步骤。两个最常用的预处理器指令是: #include 指令(用于在编译期间把指定文件的内容包含进当前文件中）和#define指令(用任意字符序列替代一个标记)。本节还将介绍预处理器的其它一些特性，如条件编译与带参数的宏。",______是编译过程中单独执行的第一个步骤。,"
 C语言通过预处理器提供了一些语言功能。从概念上讲，预处理器是编译过程中单独执行的第一个步骤。两个最常用的预处理器指令是: 

填空：C语言通过预处理器提供了一些语言功能。从概念上讲，预处理器是编译过程中单独执行的第一个步骤。两个最常用的预处理器指令是: 

#include 指令和 #define 指令。本节还将介绍预处理器的其它一些特性，如条件编译与带参数的宏。","
 ______是编译过程中单独执行的第一个步骤。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
包含#include ""文件名""或#include <文件名> 的行都将被替换为由文件名指定的文件的内容。如果文件名用引号引起来，则在源文件所在位置查找该文件;如果在该位置没有找到文件，或者如果文件名是用尖括号<与>括起来的，则将根据相应的规则查找该文件，这个规则同具体的实现有关。被包含的文件本身也可包含#include 指令。
源文件的开始处通常都会有多个#include 指令，它们用以包含常见的#define语句和extern声明，或从头文件中访问库函数的函数原型声明，比如<stdio.h>。(严格地说，这些内容没有必要单独存放在文件中;访问头文件的细节同具体的实现有关。>
在大的程序中，#include 指令是将所有声明捆绑在一起的较好的方法。它保证所有的源文件都具有相同的定义与变量声明，这样可以避免出现一些不必要的错误。很自然，如果某个包含文件的内容发生了变化，那么所有依赖于该包含文件的源文件都必须重新编译。",______是将所有声明捆绑在一起的较好的方法。,"重新编译。

下面是一个例子,假设我们要包含 ""stdio.h"" 文件,可以在程序中这样写:

```
#include <stdio.h>
```

或者

```
#include ""stdio.h""
```

根据上述文本内容，下面是一个填空题：

在程序中，可以使用#include指令包含 ``` 的文件内容。

答案：<stdio.h>","
 ______是将所有声明捆绑在一起的较好的方法",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
宏定义的形式如下:#define 名字替换文本
这是一种最简单的宏替换――后续所有出现名字记号的地方都将被替换为替换文本。#define指令中的名字与变量名的命名方式相同，替换文本可以是任意字符串。通常情况下.#define指令占一行，替换文本是#define指令行尾部的所有剩余部分内容，但也可以把.个较长的宏定义分成若干行，这时需要在待续的行末尾加上一个反斜杠符\。#define 指令定义的名字的作用域从其定义点开始，到被编译的源文件的末尾处结束。宏定义中也可以使用前面出现的宏定义。替换只对记号进行，对括在引号中的字符串不起作用。例如，如果YES是一个通过#define指令定义过的名字,则在printf(""YES"")或YESMAN中将不执行替换。",______的形式如下:#define 名字替换文本,"
 以下是一道填空题:

宏定义的形式如下:______

是一种最简单的宏替换――后续所有出现______的地方都将被替换为替换文本。______指令中的名字与变量名的命名方式相同，替换文本可以是任意字符串。通常情况下______.______指令占一行，替换文本是______指令行尾部的所有剩余部分内容，但也可以把______个较长的宏定义分成若干行，这时需要在待续的行末尾加上一个反斜杠符______。______指令定义的名字的作用域从其定义点开始，到被编译的源文件的末尾处结束。宏定义中也可以使用前面出现的宏定义。替换只对记号进行，对括在引号中的字符串不起作用。例如，如果______是一个通过#define指令定义过的名字,则在______或______中将不执行替换。","
 ______的形式如下:#define 名字替换文本",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
宏定义也可以带参数，这样可以对不同的宏调用使用不同的替换文本。例如，下列宏定义定义了一个宏max:
#define max(A,B)((A)>(B)?(A): (B))
使用宏max看起来很像是函数词用，但宏调用直接将替换文本插入到代码中。形式参数（在此为A或B）的每次出现都将被替换成对应的实际参数。因此，语句:
x = max(p+q, r+s ) ;
将被替换为下列形式:
x = ( (p+a)> (r+s) ?(p+a): (r+s ) );",______可以带参数，这样可以对不同的宏调用使用不同的替换文本。,"
 请根据以下文本内容出一道填空题:

宏定义也可以带参数，这样可以对不同的宏调用使用不同的替换文本。例如，下列宏定义定义了一个宏max:
#define max(A,B)((A)>(B)?(A): (B))
使用宏max看起来很像是函数词用，但宏调用直接将替换文本插入到代码中。形式参数（在此为A或B）的每次出现都将被替换成对应的实际参数。因此，语句:
x = max(p+q, r+s ) ;
将被替换为下列形式:
x = ( (p+q)> (r+s)?(p+q): (r+s ) );","
 ______可以带参数，这样可以对不同的宏调用使用不同的替换文本。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
可以通过#undef指令取消名字的宏定义，这样做可以保证后续的调用是函数调用，而不是宏调用:",______可以通过#undef指令取消名字的宏定义，这样做可以保证后续的调用是函数调用，而不是宏调用。,"
 以下是一道填空题:

可以通过#undef指令取消名字的宏定义,这样做可以保证后续的调用是函数调用,而不是宏调用:

答案: 取消名字的宏定义","
 ______可以通过#undef指令取消名字的宏定义，这样做可以保证后续的调用是函数调用，而不是宏调用。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
指针是一种保存变量地址的变量。在 C 语言中，指针的使用非常广泛，原因之一是，指针常常是表达某个计算的惟一途径，另一个原因是，同其它方法比较起来，使用指针通常可以生成更高效、更紧凑的代码。指针与数组之间的关系十分密切，我们将在本章中讨论它们之间的关系，并探讨如何利用这种关系。",______是一种保存变量地址的变量。,"
 C语言中，指针是一种保存变量地址的变量，其使用广泛的原因之一是________，另一个原因是________。指针与数组之间的关系密切，我们将在本章中讨论它们之间的关系，并探讨如何利用这种关系。","
 ______是一种保存变量地址的变量。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
指针和 goto 语句一样，会导致程序难以理解。如果使用者粗心，指针很容易就指向了错误的地方。但是，如果谨慎地使用指针，便可以利用它写出简单、清晰的程序。",______，会导致程序难以理解。,"
 以下是一道填空题:

使用指针和 goto 语句一样,会导致程序难以理解。如果使用者粗心,指针很容易就指向了错误的地方。但是,如果谨慎地使用指针,便可以利用它写出简单、清晰的程序。

空格处应填:指针和____语句一样,会导致程序难以理解。","
 ______，会导致程序难以理解。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
通常的机器都有一系列连续编号或编址的存储单元，过些存储单元可以单个进行操纵，也可以以连续成组的方式操纵。通常情况下，机器的一个字节可以存放一个 char 类型的数据，两个相邻的字节存储单元可存储一个 short（短整型）类型的数据，而 4 个相邻的字节存储单元可存储一个 long（长整型）类型的数据。指针是能够存放一个地址的一组存储单元（通常是两个或 4 个字节）。",______可以存放一个 char 类型的数据。,"
 题目：以下关于指针的描述哪个是正确的？

A. 指针是一组能够存放一个地址的两个存储单元。
B. 指针是一组能够存放一个地址的四个存储单元。
C. 指针是一组能够存放一个字符数据的存储单元。
D. 指针是一组能够存放一个short类型数据的存储单元。","
 ______可以存放一个 char 类型的数据。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
一元运算符&可用于取一个对象的地址，因此，下列语句：
p = &c; 
将把 c 的地址赋值给变量 p，我们称 p 为“指向”c 的指针。地址运算符&只能应用于内存中的对象，即变量与数组元素。它不能作用于表达式、常量或 register 类型的变量。",______可用于取一个对象的地址。,"
 问题：在 C 语言中，以下哪个运算符不能用于取一个对象的地址？

A. &
B. *
C. /
D. %","
 ______可用于取一个对象的地址。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
一元运算符*是间接寻址或间接引用运算符。当它作用于指针时，将访问指针所指向的对象。",______是间接寻址或间接引用运算符。,"
 请根据以下文本内容出一道填空题:

一元运算符**是间接寻址或间接引用运算符。当它作用于指针时，将访问指针所指向的对象。

题目：下面哪个选项是正确的？

A. **是间接寻址运算符**
B. **是间接引用运算符**
C. **是间接寻址或间接引用运算符**
D. **不是运算符**","
 ______是间接寻址或间接引用运算符。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
int x = 1, y = 2, z[10]; 
 int *ip; /* ip is a pointer to int */ 
 ip = &x; /* ip now points to x */ 
 y = *ip; /* y is now 1 */ 
 *ip = 0; /* x is now 0 */ 
 ip = &z[0]; /* ip now points to z[0] */",______是一个指向整数的指针。,"
 请根据以下文本内容完成填空题：

int x = 1, y = 2, z[10]; 
int *ip; /* ip is a pointer to int */ 
ip = &x; /* ip now points to x */ 
y = *ip; /* y is now 1 */ 
*ip = 0; /* x is now 0 */ 
ip = &z[0]; /* ip now points to z[0] */

根据给定的文本内容，以下哪个选项是正确的？

A. x = 1, y = 2, z[10] = 0
B. x = 1, y = 2, z[10] = 0, ip = &z[0]
C. x = 1, y = 2, z[10] = 0, ip = &x
D. x = 1, y = 2, z[10] = 0, ip = &z[1]","
 ______是一个指向整数的指针。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
我们来看指针 ip 的声明，如下所示：
int *ip；
这样声明是为了便于记忆。该声明语句表明表达式*ip 的结果是 int 类型。这种声明变量的语法与声明该变量所在表达式的语法类似。同样的原因，对函数的声明也可以采用这种方式。
例如，声明
double *dp，atof(char *); 
表明，在表达式中，*dp 和 atof(s)的值都是 double 类型，且 atof 的参数是一个指向 char类型的指针。",______的声明语句表明表达式*ip的结果是int类型。,"
 以下是一道根据文本内容的填空题：

我们来看指针 ip 的声明，如下所示：
int *ip；
这样声明是为了便于记忆。该声明语句表明表达式*ip 的结果是 int 类型。这种声明变量的语法与声明该变量所在表达式的语法类似。同样的原因，对函数的声明也可以采用这种方式。
例如，声明
double *dp，atof(char *); 
表明，在表达式中，*dp 和 atof(s)的值都是 double 类型，且 atof 的参数是一个指向 char类型的指针。

填空题：ip 是 int 类型的指针；
dp 是 double 类型的指针；
atof 的参数是一个指向 char类型的指针。","
 ______的声明语句表明表达式*ip的结果是int类型。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
我们应该注意，指针只能指向某种特定类型的对象，也就是说，每个指针都必须指向某种特定的数据类型。一个例外情况是指向 void 类型的指针可以存放指向任何类型的指针，但它不能间接引用其自身。",______只能指向某种特定类型的对象。,"
 下面是一个关于指针的填空题：

每个指针都必须指向某种特定的数据类型，除了______类型的指针可以存放指向任何类型的指针。

答案：void","
 ______只能指向某种特定类型的对象。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
如果指针 ip 指向整型变量，那么在 x 可以出现的任何上下文中都可以使用*ip，因此，语句
*ip = *ip + 10; 
将把*ip 的值增加 10。
一元运算符*和&的优先级比算术运算符的优先级高，因此，赋值语句
y = *ip + 1 
将把*ip 指向的对象的值取出并加 1，然后再将结果赋值给 y，而下列赋值语句：
*ip += 1 
则将 ip 指向的对象的值加 1，它等同于
++*ip 
或
(*ip)++ 
语句的执行结果。语句(*ip)++中的圆括号是必需的，否则，该表达式将对 ip 进行加 1 运算，而不是对 ip 指向的对象进行加 1 运算，这是因为，类似于*和++这样的一元运算符遵循从右至左的结合顺序。",______指向的对象的值加 1,"
 请根据上述文本内容，将下面的语句中的空格填上正确的内容。

语句：y = *ip + 1
将把\_\_\_\_\_\_\_\_ 指向的对象的值取出并加 1，然后再将结果赋值给 y。

语句：*ip += 1
则将 ip 指向的对象的值加 1，它等同于\_\_\_\_\_\_\_\_ 
或 \_\_\_\_\_\_\_\_ 
语句(*ip)++中的圆括号是必需的，否则，该表达式将对 ip 进行加 1 运算，而不是对 ip 指向的对象进行加 1 运算，这是因为，类似于*和++这样的一元运算符遵循从右至左的结合顺序。","
 ______指向的对象的值加 1",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
由于指针也是变量，所以在程序中可以直接使用，而不必通过间接引用的方法使用。例如，如果 iq 是另一个指向整型的指针，那么语句
iq = ip 
将把 ip 中的值拷贝到 iq 中，这样，指针 iq 也将指向 ip 指向的对象。",______是另一个指向整型的指针。,"
 以下是一道根据文本内容出的填空题:

由于指针也是变量,所以在程序中可以直接使用,而不必通过间接引用的方法使用。例如,如果 iq 是另一个指向整型的指针,那么语句____将把 ip 中的值拷贝到 iq 中,这样,指针 iq 也将指向 ip 指向的对象。

答案:iq = ip","
 ______是另一个指向整型的指针。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
由于 C 语言是以传值的方式将参数值传递给被调用函数。因此，被调用函数不能直接修改主调函数中变量的值。例如，排序函数可能会使用一个名为 swap 的函数来交换两个次序颠
倒的元素。但是，如果将 swap 函数定义为下列形式：
 void swap(int x, int y) /* WRONG */ 
 { 
 int temp; 
 temp = x; 
 x = y; 
 y = temp; 
 } 
则下列语句无法达到该目的。
swap(a, b); 
这是因为，由于参数传递采用传值方式，因此上述的 swap 函数不会影响到调用它的例程中的参数 a 和 b 的值。该函数仅仅交换了 a 和 b 的副本的值。那么，如何实现我们的目标呢，可以使主调程序将指向所要交换的变量的指针传递给被调用函数，即：
swap(&a, &b); 
由于一元运算符&用来取变量的地址，这样&a 就是一个指向变量 a 的指针。swap 函数的所有参数都声明为指针，并且通过这些指针来间接访问它们指向的操作数。
 void swap(int *px, int *py) /* interchange *px and *py */ 
 { 
 int temp; 
 temp = *px; 
 *px = *py; 
 *py = temp; 
 }",______是以传值的方式将参数值传递给被调用函数。,符“&”返回变量的地址，所以上述语句会将 a 和 b 的地址传递给 swap 函数，swap 函数可以修改这些地址所指向的变量的值。,"
 ______是以传值的方式将参数值传递",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数 getint 接受自由格式的输入，并执行转换，将输入的字符流分解成整数，且每次调用得到一个整数。getint 需要返回转换后得到的整数，并且，在到达输入结尾时要返回文件结束标记。这些值必须通过不同的方式返回。EOF（文件结束标记）可以用任何值表示，当然也可用一个输入的整数表示。可以这样设计该函数：将标识是否到达文件结尾的状态作为 getint 函数的返回值，同时，使用一个指针参数存储转换后得到的整数并传回给主调函数。函数 scanf 的实现就采用了这种方法，下面的循环语句调用 getint 函数给一个整型数组赋值：
 int n, array[SIZE], getint(int *); 
 for (n = 0; n < SIZE && getint(&array[n]) != EOF; n++) 
每次调用 getint 时，输入流中的下一个整数将被赋值给数组元素 array[n]，同时，n 的值将增加 1。请注意，这里必须将 array[n]的地址传递给函数 getint，否则函数 getint将无法把转换得到的整数传回给调用者。该版本的 getint 函数在到达文件结尾时返回 EOF，当下一个输入不是数字时返回 0，当输入中包含一个有意义的数字时返回一个正值。",______函数接受自由格式的输入，并执行转换，将输入的字符流分解成整数，且每次调用得到一个整数。,"字符将作为输入并传递给 scanf。

请根据以上文本内容，完成下面的填空题：

在下面的代码中，哪个选项能够正确实现 scanf 的功能？

A. scanf(""%d"", &array[0]); 
B. scanf(""%d %d"", &array[0], &array[1]); 
C. scanf(""%d"", &array[0]); 
D. scanf(""%d %d %d"", &array[0], &array[1], &array[2]); 

正确答案是：__C__","
 ______函数接受自由格式的输入，并执行转换，将输入的字符流分解成整",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#include <ctype.h> 
 int getch(void); 
 void ungetch(int); 
 /* getint: get next integer from input into *pn */ 
 int getint(int *pn) 
 { 
 int c, sign; 
 while (isspace(c = getch())) /* skip white space */ 
 ; 
 if (!isdigit(c) && c != EOF && c != '+' && c != '-') { 
 ungetch(c); /* it is not a number */ 
 return 0; 
 } 
 sign = (c == '-') ? -1 : 1; 
 if (c == '+' || c == '-') 
 c = getch(); 
 for (*pn = 0; isdigit(c), c = getch()) 
 *pn = 10 * *pn + (c - '0'); 
 *pn *= sign; 
 if (c != EOF) 
 ungetch(c); 
 return c; 
 }",______函数用于从输入中获取下一个整数并存储到指针pn所指向的位置。,"pn += sign; 
 return *pn; 
 } 
 下面哪个函数是不正确的?

A. getch() 
B. ungetch() 
C. getint() 
D. putch() 
 
 
 ","
 ______函数用于从输入中获取下一个整数并存储到指针pn所",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
通过数组下标所能完成的任何操作都可以通过指针来实现。一般来说，用指针编写的程序比用数组下标编写的程序执行速度快，但另一方面，用指针实现的程序理解起来稍微困难一些。",______可以通过指针来实现，一般来说，用指针编写的程序比用数组下标编写的程序执行速度快。,"
 以下是一个与该文本相关的填空题：

通过数组下标所能完成的任何操作都可以通过______来实现。一般来说，用指针编写的程序比用数组下标编写的程序执行速度快，但另一方面，用指针实现的程序______起来稍微困难一些。

答案：指针 理解起来","
 ______可以通过指针来实现，一般来说，用指针编写的程序比用数组下标编写的程序执行速度快。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
声明
int a[10]; 
定义了一个长度为 10 的数组 a。换句话说，它定义了一个由 10 个对象组成的集合，这 10 个对象存储在相邻的内存区域中，名字分别为 a[0]、a[1]、…、a[9]。a[i]表示该数组的第 i 个元素。如果 pa 的声明为
int *pa; 
则说明它是一个指向整型对象的指针，那么，赋值语句
pa = &a[0]; 
则可以将指针 pa 指向数组 a 的第 0 个元素，也就是说，pa 的值为数组元素 a[0]的地址。这样，赋值语句
x = *pa; 
将把数组元素 a[0]中的内容复制到变量 x 中。如果 pa 指向数组中的某个特定元素，那么，根据指针运算的定义，pa+1 将指向下一个元素，pa+i 将指向 pa 所指向数组元素之后的第 i 个元素，而 pa-i 将指向 pa 所指向数组元素之前的第 i 个元素。因此，如果指针 pa 指向 a[0]，那么*(pa+1)引用的是数组元素a[1]的内容，pa+i 是数组元素 a[i]的地址，*(pa+i)引用的是数组元素 a[i]的内容无论数组 a 中元素的类型或数组长度是什么，上面的结论都成立。“指针加 1”就意味着，pa+1 指向 pa 所指向的对象的下一个对象。相应地，pa+i 指向 pa 所指向的对象之后的第 i个对象。下标和指针运算之间具有密切的对应关系。根据定义，数组类型的变量或表达式的值是该数组第 0 个元素的地址。执行赋值语句
pa = &a[0]；
后，pa 和 a 具有相同的值。因为数组名所代表的就是该数组最开始的一个元素的地址，所以，赋值语句 pa=&a[0]也可以写成下列形式：
pa = a; 
对数组元素 a[i]的引用也可以写成*(a+i)这种形式。在计算数组元素 a[i]的值时，C 语言实际上先将其转换为*(a+i)的形式，然后再进行求值，因此在程序中这两种形式是等价的。如果对这两种等价的表示形式分别施加地址运算符&，便可以得出这样的结论：&a[i]和 a+i 的含义也是相同的。a+i 是 a之后第 i 个元素的地址。相应地，如果 pa 是个指针，那么，在表达式中也可以在它的后面加下标。pa[i]与*(pa+i)是等价的。简而言之，一个通过数组和下标实现的表达式可等价地通过指针和偏移量实现。",______是一个指向整型对象的指针。,"。

题目：下面哪个选项是正确的赋值语句?

A. pa = &a[0]; 
B. x = *pa; 
C. pa+1 = a[0]; 
D. x = a[0]; 

正确答案是：__D__。","
 ______",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
数组名和指针之间有一个不同之处，指针是一个变量，因此，在 C语言中，语句 pa=a 和 pa++都是合法的。但数组名不是变量，因此，类似于 a=pa 和 a++形式的语句是非法的。",______和指针之间有一个不同之处，指针是一个变量，因此，在 C语言中，语句 pa=a 和 pa++都是合法的。但数组名不是变量，因此，类似于 a=pa 和 a++形式的语句是非法的。,"
 以下是一道根据文本内容出的填空题:

数组名和指针之间有一个不同之处,指针是一个变量,因此,在 C语言中,语句 $a=a 和 $a++$ 都是合法的。但数组名不是变量,因此,类似于 $a=pa 和 $a++$ 形式的语句是非法的。

填空题:

$ \text{数组名} $ 和指针之间有一个不同之处,指针是一个变量,因此,在 C语言中,语句 $ \text{数组名} $ = $ \text{数组名} $ 和 $ \text{数组名} $ 都是合法的。但数组名不是变量,因此,类似于 $ \text{数组名} $ = $ \text{指针} $ 和 $ \text{数组名} $++ 形式的语句是非法的。","
 ______和指针之间有一个不同之处，指针是一个变量，因此，在 C语言中，语句 pa=a 和 pa++都是合法的。但数组名不是变量，因此，类似于 a=pa 和 a++形式的语句是非法的。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
当把数组名传递给一个函数时，实际上传递的是该数组第一个元索的地址。在被调用函数中，该参数是一个局部变量，因此，数组名参数必须是一个指针，也就是一个存储地址值的变量。",______时，实际上传递的是该数组第一个元素的地址。,"
 下面是一个相应的填空题：

当把数组名传递给一个函数时，实际上传递的是该数组第一个元素的地址。在被调用函数中，该参数是一个______，因此，数组名参数必须是一个指针，也就是一个存储地址值的变量。","
 ______时，实际上传递的是该数组第一个元素的地址。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
/* strlen: return length of string s */ 
 int strlen(char *s) 
 { 
 int n; 
 for (n = 0; *s != '\0', s++) 
 n++; 
 return n; 
 }",______函数的作用是返回字符串的长度。,"
 以下是一道填空题:

void strlen(char \*s) 
{ 
 int n; 
 for (n = 0; *s!= '\0'; s++) 
 n++; 
 return n; 
 }","
 ______函数的作用是返回字符串的长度。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在函数定义中，形式参数
char s[]; 
和
char *s; 
是等价的。我们通常更习惯于使用后一种形式，因为它比前者更直观地表明了该参数是一个指针。如果将数组名传递给函数，函数可以根据情况判定是按照数组处理还是按照指针处理，随后根据相应的方式操作该参数。为了直观且恰当地描述函数，在函数中甚至可以同时使用数组和指针这两种表示方法。也可以将指向子数组起始位置的指针传递给函数，这样，就将数组的一部分传递给了函数。例如，如果 a 是一个数组，那么下面两个函数调用
f(&a[2]) 
与
f(a+2) 
都将把起始于 a[2]的子数组的地址传递给函数 f。在函数 f 中，参数的声明形式可以为
 f(int arr[]) { ... } 
或
 f(int *arr) { ... } 
对于函数 f 来说，它并不关心所引用的是否只是一个更大数组的部分元素。",______是函数定义中的形式参数，可以根据情况判定是按照数组处理还是按照指针处理。,"int *arr) {... } 
答案： 
在函数定义中，形式参数
char s[]; 
和
char *s; 
是等价的。","
 ______是函数定义中的形式参数，可以根据情况判定是按照数组处理还是按照指",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
如果确信相应的元素存在，也可以通过下标访问数组第一个元素之前的元素。类似于p[-1]、p[-2]这样的表达式在语法上都是合法的，它们分别引用位于 p[0]之前的两个元素。当然，引用数组边界之外的对象是非法的。",______可以通过下标访问数组第一个元素之前的元素。,"
 以下是一道填空题:

在C语言中,通过下标访问数组第一个元素之前的元素,可以使用______表达式?

答案:p[-1]、p[-2]","
 ______可以通过下标访问数组第一个元素之前的元素。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
如果 p 是一个指向数组中某个元素的指针，那么 p++将对 p 进行自增运算并指向下一个元素，而 p+=i 将对 p 进行加 i 的增量运算，使其指向指针 p 当前所指向的元素之后的第 i个元素。这类运算是指针或地址算术运算中最简单的形式",______是指向数组中某个元素的指针。,"
 请根据以下文本内容出一道填空题：

如果 p 是一个指向数组中某个元素的指针，那么 p++将对 p 进行自增运算并指向下一个元素，而 p+=i 将对 p 进行加 i 的增量运算，使其指向指针 p 当前所指向的元素之后的第 i 个元素。这类运算是指针或地址算术运算中最简单的形式。

空格部分应填写：自增运算。","
 ______是指向数组中某个元素的指针。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
C 语言中的地址算术运算方法是一致且有规律的，将指针、数组和地址的算术运算集成在一起是该语言的一大优点。为了说明这一点，我们来看一个不完善的存储分配程序。它由两个函数组成。第一个函数 alloc(n)返回一个指向 n 个连续字符存储单元的指针，alloc 函数的调用者可利用该指针存储字符序列。第二个函数 afree(p)释放已分配的存储空间，以便以后重用。之所以说这两个函数是“不完善的”，是因为对 afree 函数的调用次序必须与调用 alloc 函数的次序相反。换句话说，alloc 与 afree 以栈的方式（即后进先出的列表）进行存储空间的管理。
最容易的实现方法是让 alloc 函数对一个大字符数组 allocbuf 中的空间进行分配。该数组是 alloc 和 afree 两个函数私有的数组。由于函数 alloc 和 afree 处理的对象是指针而不是数组下标，因此，其它函数无需知道该数组的名字，这样，可以在包含alloc和afree的源文件中将该数组声明为 static 类型，使得它对外不可见。实际实现时，该数组甚至可以没有名字，它可以通过调用 malloc 函数或向操作系统申请一个指向无名存储块的指针获得。
allocbuf 中的空间使用状况也是我们需要了解的信息。我们使用指针 allocp 指向allocbuf 中的下一个空闲单元。当调用 alloc 申请 n 个字符的空间时，alloc 检查allocbuf 数组中有没有足够的剩余空间。如果有足够的空闲空间，则 alloc 返回 allocp的当前值（即空闲块的开始位置），然后将 allocp 加 n 以使它指向下一个空闲区域。如果空闲空间不够，则 alloc 返回 0。如果 p 在 allocbuf 的边界之内，则 afree(p)仅仅只是将allocp 的值设置为 p。
 static char allocbuf[ALLOCSIZE]; /* storage for alloc */ 
 static char *allocp = allocbuf; /* next free position */ 
 char *alloc(int n) /* return pointer to n characters */ 
 { 
 if (allocbuf + ALLOCSIZE - allocp >= n) { /* it fits */ 
 allocp += n; 
 return allocp - n; /* old p */ 
 } else /* not enough room */ 
 return 0; 
 } 
 void afree(char *p) /* free storage pointed to by p */ 
 { 
 if (p >= allocbuf && p < allocbuf + ALLOCSIZE) 
 allocp = p; 
 }",______是C语言中的一大优点，它将指针、数组和地址的算术运算集成在一起。,allocbuf 的大小。为了实现这一目标，需要对该数组进行初始化。以下是两个函数的实现:,"
 ______是C语言中的一大优点",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
 static char allocbuf[ALLOCSIZE]; /* storage for alloc */ 
 static char *allocp = allocbuf; /* next free position */ 
 char *alloc(int n) /* return pointer to n characters */ 
 { 
 if (allocbuf + ALLOCSIZE - allocp >= n) { /* it fits */ 
 allocp += n; 
 return allocp - n; /* old p */ 
 } else /* not enough room */ 
 return 0; 
 } 
 void afree(char *p) /* free storage pointed to by p */ 
 { 
 if (p >= allocbuf && p < allocbuf + ALLOCSIZE) 
 allocp = p; 
 }",______是用于存储alloc的存储空间。,"
 以下是一道填空题:

void afree(char \*p) \{
if (p \>= \text{allocbuf} && p \< \text{allocbuf} + \text{ALLOCSIZE}) 
\text{allocp} = p; 
\}

填空题提示:

这道题目考察的是动态内存分配的相关知识,需要掌握动态内存分配的原理和实现方法。需要了解 allocbuf 和 allocp 的定义以及它们的作用,同时需要理解 if 语句的条件判断以及 allocp 的更新方法。最后需要掌握 free 函数的作用和使用方法。","
 ______是用于存储 alloc 函数返回的字符指针。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
一般情况下，同其它类型的变量一样，指针也可以初始化。通常，对指针有意义的初始化值只能是 0 或者是表示地址的表达式，对后者来说，表达式所代表的地址必须是在此前已
定义的具有适当类型的数据的地址。例如，声明
static char* allocp = allocbuf; 
将 allocp 定义为字符类型指针，并将它初始化为 allocbuf 的起始地址，该起始地址是程序执行时的下一个空闲位置。上述语句也可以写成下列形式：
static char* allocp = &allocbuf[0]; 
这是因为该数组名实际上就是数组第 0 个元素的地址。",______可以是0或者表示地址的表达式。,"
 问题：在上述示例中，静态变量 allocp 的初始化值是什么？

答案：&allocbuf[0]","
 ______可以是0或者表示地址的表达式。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
下列 if 测试语句：
if (allocbuf + ALLOCSIZE - allocp >= n) { /* it fits */ 
检查是否有足够的空闲空间以满足 n 个字符的存储空间请求。如果空闲空间足够，则分配存储空间后 allocp 的新值至多比 allocbuf 的尾端地址大 1。如果存储空间的申请可以满足，alloc 将返回一个指向所需大小的字符块首地址的指针（注意函数本身的声明）。如果申请无法满足，alloc 必须返回某种形式的信号以说明没有足够的空闲空间可供分配。C 语言保证，0 永远不是有效的数据地址，因此，返回值 0 可用来表示发生了异常事件。在本例中，返回值0 表示没有足够的空闲空间可供分配。",______是用来检查是否有足够的空闲空间以满足 n 个字符的存储空间请求。,"
 下列 if 测试语句：
if (allocbuf + ALLOCSIZE - allocp >= n) { /* it fits */ 
检查是否有足够的空闲空间以满足 n 个字符的存储空间请求。如果空闲空间足够，则分配存储空间后 allocp 的新值至多比 allocbuf 的尾端地址大 1。如果存储空间的申请可以满足，alloc 将返回一个指向所需大小的字符块首地址的指针（注意函数本身的声明）。如果申请无法满足，alloc 必须返回某种形式的信号以说明没有足够的空闲空间可供分配。C 语言保证，0 永远不是有效的数据地址，因此，返回值 0 可用来表示发生了异常事件。在本例中，返回值0 表示没有足够的空闲空间可供分配。

填空题：
下列 if 测试语句的目的是检查是否有足够的空闲空间以满足某个字符串的存储空间请求。如果空闲空间足够，则分配存储空间后allocp 的值至多比allocbuf 的尾端地址大 1。如果存储空间的申请可以满足，alloc 将返回一个指向所需大小的字符块首地址的指针（注意函数本身的声明）。如果申请无法满足，alloc 必须返回某种形式的信号以说明没有足够的空闲空间可供分配。C 语言保证，0 永远不是有效的数据地址，因此，返回值 0 可用来表示发生了异常事件。在本例中，返回值 0 表示没有足够的空闲空间可供分配。

空格处应填：空闲空间","
 ______是用来检查是否有足够的空闲空间以满足 n 个字符的存储空间请求。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
指针与整数之间不能相互转换，但 0 是惟一的例外：常量 0 可以赋值给指针，指针也可以和常量 0 进行比较。程序中经常用符号常量 NULL 代替常量 0，这样便于更清晰地说明常量0 是指针的一个特殊值。符号常量 NULL 定义在标准头文件<stddef.h>中。我们在后面部分经常会用到 NULL。",______不能赋值给指针，但是常量0可以赋值给指针。,"
 题目：指针与整数之间不能相互转换，但 0 是惟一的例外，这里的“但”字后面应填入什么词语？","
 ______不能赋值给指针，但是常量0可以赋值给指针。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
类似于
if (allocbuf + ALLOCSIZE - allocp >= n) { /* it fits */ 以及
if (p >= allocbuf && p < allocbuf + ALLOCSIZE) 
的条件测试语句表明指针算术运算有以下几个重要特点。首先，在某些情况下对指针可以进行比较运算。例如，如果指针 p 和 q 指向同一个数组的成员，那么它们之间就可以进行类似于==、!=、<、>=的关系比较运算。如果 p 指向的数组元素的位置在 q 指向的数组元素位置之前，那么关系表达式p < q 的值为真。任何指针与 0 进行相等或不等的比较运算都有意义。但是，指向不同数组的元素的指针之间的算术或比较运算没有定义。（这里有一个特例：指针的算术运算中可使用数组最后一个元素的下一个元素的地址。）
其次。我们从前面可以看到，指针可以和整数进行相加或相减运算。例如，结构
p + n 
表示指针 p 当前指向的对象之后第 n 个对象的地址。无论指针 p 指向的对象是何种类型，上述结论都成立。在计算 p+n 时，n 将根据 p 指向的对象的长度按比例缩放，而 p 指向的对象的长度则取决于 p 的声明。例如，如果 int 类型占 4 个字节的存储空间，那么在 int 类型的计算中，对应的 n 将按 4 的倍数来计算。指针的减法运算也是有意义的：如果 p 和 q 指向相同数组中的元索，且 p<q，那么 q-p+1就是位于 p 和 q 指向的元索之间的元素的数目。",______的算术运算中可使用数组最后一个元素的下一个元素的地址。,"和 p - n 都是有效的运算。此外，指针还可以进行位运算。例如，对于指针 p 指向的数组元素类型为 int，那么 p | n 和 p << n 都是有意义的运算。
最后，指针还可以进行逻辑运算。例如，在 if 语句中，我们可以使用指针进行条件判断。

根据以上文本，下面哪个条件测试语句是正确的？

正确答案：if (p + n >= allocbuf && p + n < allocbuf + ALLOCSIZE)","
 ______的算术运算中可使用",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
指针的算术运算具有一致性：如果处理的数据类型是比字符型占据更多存储空间的浮点类型，并且 p 是一个指向浮点类型的指针，那么在执行 p++后，p 将指向下一个浮点数的地址。因此，只需要将 alloc 和 afree 函数中所有的 char 类型替换为 float 类型，就可以得到一个适用于浮点类型而非字符型的内存分配函数。所有的指针运算都会自动考虑它所指向的对象的长度。",______的算术运算具有一致性。,"
 请根据以上文本内容，用C语言编写一个程序，对输入的浮点数进行自增操作，并在操作后输出结果。

程序要求：
1. 定义一个函数 ptr_inc（），接收两个参数，一个是指向浮点类型的指针 p，另一个是要进行自增操作的浮点数 x。
2. 在函数内部，首先检查 p 是否为空，如果为空，则输出 ""Error: p is null!""，否则执行 p++ 操作，然后输出 p 所指向的浮点数的值（即 p->*）。
3. 定义一个函数 ptr_dec（），接收两个参数，一个是指向浮点类型的指针 p，另一个是要进行自减操作的浮点数 x。
4. 在函数内部，首先检查 p 是否为空，如果为空，则输出 ""Error: p is null!""，否则执行 p->*-- 操作，然后输出 p 所指向的浮点数的值（即 p->*）。","
 ______的算术运算具有一致性。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
有效的指针运算包括相同类型指针之间的赋值运算；指针同整数之间的加法或减法运算；指向相同数组中元素的两个指针间的减法或比较运算；将指针赋值为 0 或指针与 0 之间的比较运算。其它所有形式的指针运算都是非法的，例如两个指针间的加法、乘法、除法、移位或屏蔽运算；指针同 float 或 double 类型之间的加法运算；不经强制类型转换而直接将指向一种类型对象的指针赋值给指向另一种类型对象的指针的运算（两个指针之一是 void *类型的情况除外）",______的指针运算包括相同类型指针之间的赋值运算；指针同整数之间的加法或减法运算；指向相同数组中元素的两个指针间的减法或比较运算；将指针赋值为 0 或指针与 0 之间的比较运算。,"
 以下是一道根据给定文本内容出的填空题:

有效的指针运算包括相同类型指针之间的赋值运算;指针同整数之间的加法或减法运算;指向相同数组中元素的两个指针间的减法或比较运算;将指针赋值为 0 或指针与 0 之间的比较运算。其它所有形式的指针运算都是非法的,例如______、指针同 float 或 double 类型之间的加法运算;不经强制类型转换而直接将指向一种类型对象的指针赋值给指向另一种类型对象的指针的运算(两个指针之一是 void *类型的情况除外);指针同 void * 类型之间的加法运算。

答案:

除法、移位或屏蔽运算;指针同 float 或 double 类型之间的加法运算;不经强制类型转换而直接将指向一种类型对象的指针赋值给指向另一种类型对象的指针的运算(两个指针之一是 void *类型的情况除外);指针同 void * 类型之间的加法运算。","
 ______的指针运算包括相同类型指针之间的赋值运算；指针同整数之间的加法或减法运算；指向相同数组中元素的两个指针间的减法或比较运算；将指针赋值为 0 或指针与 0 之间的比较运算。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
字符串常量是一个字符数组，例如：
""I am a string"" 
在字符串的内部表示中，字符数组以空字符'\0'结尾，所以，程序可以通过检查空字符找到字符数组的结尾。字符串常量占据的存储单元数也因此比双引号内的字符数大 1。",______是一个字符数组，以空字符'\0'结尾，程序可以通过检查空字符找到字符数组的结尾。,"
 以下是一道填空题:

在C语言中,字符串常量的内部表示是由一个字符数组组成的,通常以空字符 '\0' 结尾。程序可以通过检查空字符来找到字符数组的结尾。字符串常量占据的存储单元数也因此比双引号内的字符数大 1。

空格处应填:字符数组的最后一个元素是空字符'\0',通过检查空字符可以找到字符数组的结尾。","
 ______是一个字符数组，以空字符'\0'结尾，程序可以通过检查空字符找到字符数组的结尾。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
字符串常量最常见的用法也许是作为函数参数，例如：
princf(""hello, world\n""}; 
当类似于这样的一个字符串出现在程序中时，实际上是通过字符指针访问该字符串的。在上述语句中，printf 接受的是一个指向字符数组第一个字符的指针。也就是说，字符串常量可通过一个指向其第一个元素的指针访问。",______常见的用法是作为函数参数。,"
 以下是一道根据上述文本的填空题:

在C语言中,字符串常量通常以什么形式表示?

A. 单引号或双引号
B. 字符指针
C. 整数常量
D. 浮点常量","
 ______常见的用法是作为函数参数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
除了作为函数参数外，字符串常量还有其它用法。假定指针 pmessage 的声明如下：
char *pmessage; 
那么，语句
pmessage =""now is the time""; 
将把一个指向该字符数组的指针赋值给 pmessage。该过程并没有进行字符串的复制，而只是涉及到指针的操作。C 语言没有提供将整个字符串作为一个整体进行处理的运算符。",______常常被用作函数参数。,"
 以下是一道填空题：

假定指针 pmessage 的声明如下：
char *pmessage; 
那么，语句 pmessage = ""\00now is the time\00""; 
将把一个指向该字符数组的指针赋值给 pmessage。该过程并没有进行字符串的复制，而只是涉及到指针的操作。C 语言没有提供将整个字符串作为一个整体进行处理的运算符。

答案：pmessage = ""\00now is the time\00"";","
 ______常常被用作函数参数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
下面两个定义之间有很大的差别：
char amessage[] = ""nw is the time""; /* 定义一个数组 */ 
char *pmessage = ""now is the time""; /* 定义一个指针 */ 
上述声明中，amessage 是一个仅仅足以存放初始化字符串以及空字符'\0'的一维数组。数组中的单个字符可以进行修改，但 amessage 始终指向同一个存储位置。另一方面，pmessage是一个指针，其初值指向一个字符串常量，之后它可以被修改以指向其它地址，但如果试图修改字符串的内容，结果是没有定义的。",______是一个仅仅足以存放初始化字符串以及空字符'\0'的一维数组。,"
 下面两个定义之间有很大的差别：
char amessage[] = ""nw is the time""; /* 定义一个数组 */ 
char *pmessage = ""now is the time""; /* 定义一个指针 */ 

在这两个定义中，amessage是一个仅仅足以存放初始化字符串以及空字符'\0'的一维数组。数组中的单个字符可以进行修改，但amessage始终指向同一个存储位置。另一方面，pmessage是一个指针，其初值指向一个字符串常量，之后它可以被修改以指向其它地址，但如果试图修改字符串的内容，结果是没有定义的。

以下哪个选项正确地描述了这两个定义之间的差别？

A. 数组是一个只读的数据结构，指针是一个可读可写的数据结构。
B. 数组中的元素可以被修改，指针可以被重指向不同的地址。
C. 数组始终指向同一个存储位置，指针可以指向不同的地址。
D. 数组是一个只读的数据结构，指针是一个读写数据结构。","
 ______是一个仅仅足以存放初始化字符串以及空字符'\0'的一维数组。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
为了更进一步地讨论指针和数组其它方面的问题，下面以标准库中两个有用的函数为例来研究它们的不同实现版本。第一个函数 strcpy(s, t)把指针 t 指向的字符串复制到指针s 指向的位置。如果使用语句 s=t 实现该功能，其实质上只是拷贝了指针，而并没有复制字符。为了进行字符的复制，这里使用了一个循环语句。strcpy 函数的第 1 个版本是通过数组方法实现的",______函数把指针 t 指向的字符串复制到指针s 指向的位置。,"
 为了更进一步地讨论指针和数组其它方面的问题，下面以标准库中两个有用的函数为例来研究它们的不同实现版本。第一个函数 strcpy(s, t)把指针 t 指向的字符串复制到指针s 指向的位置。如果使用语句 s=t 实现该功能，其实质上只是拷贝了指针，而并没有复制字符。为了进行字符的复制，这里使用了一个循环语句。strcpy 函数的第 1 个版本是通过数组方法实现的。

填空题：strcpy(s, t) 函数的第一个版本是通过数组方法实现的，主要目的是______。","
 ______函数把指针 t 指向的字符串复制到指针s 指向的位置。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
/* strcpy: copy t to s; array subscript version */ 
 void strcpy(char *s, char *t) 
 { 
 int i; 
 i = 0; 
 while ((s[i] = t[i]) != '\0') 
 i++; 
 }",______函数的作用是将字符串t复制到字符串s中。,"
 以下是一道填空题:

void strcpy(char \*__destructive__ char *s, char \*t) 
{ 
\_\_\_\_\_\_\_\_ int i; 
i = 0; 
while ((s[i] = t[i])!= '\0') 
i++; 
}","
 ______函数的作用是将字符串t复制到字符串s中。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
/* strcpy: copy t to s; pointer version */ 
 void strcpy(char *s, char *t) 
 { 
 int i; 
 i = 0; 
 while ((*s = *t) != '\0') { 
 s++; 
 t++; 
 } 
 }",______是将字符串t复制到字符串s的函数。,"
 以下哪个选项可以正确填充空白处，使得代码正常运行？

A. i++;
B. s++;
C. t++;
D. i = 1;","
 ______是将字符串t复制到字符串s的函数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
因为参数是通过值传递的，所以在 strcpy 函数中可以以任何方式使用参数 s 和 t。在此，s和 t 是方便地进行了初始化的指针，循环每执行一次，它们就沿着相应的数组前进一个字符，直到将 t 中的结束符'\0'复制到 s 为止。",______是通过值传递的，所以在 strcpy 函数中可以以任何方式使用参数 s 和 t。,"
 以下是一道根据给定文本的填空题:

在 C 语言中,因为参数是通过值传递的,所以在 strcpy 函数中可以以任何方式使用参数 ____ 和 ____。在此,____ 和 ____ 是方便地进行了初始化的指针,循环每执行一次,它们就沿着相应的数组前进一个字符,直到将 ____ 中的结束符 ____ 复制到 ____ 为止。

答案:s,t,s,t","
 ______是通过值传递的，所以在 strcpy 函数中可以以任何方式使用参数 s 和 t。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
/* strcpy: copy t to s; pointer version 2 */ 
 void strcpy(char *s, char *t) 
 { 
 while ((*s++ = *t++) != '\0') ; 
 }",______是将字符串t复制到字符串s的函数。,"
 以下是一个关于这段C语言代码的填空题：

在上述代码中，void strcpy(char *s, char *t) 
{ 
    while ((*s++ = *t++)!= '\0') ; 
} 的作用是：

将字符串t的内容复制到字符串s中，直到字符串t的末尾字符'\0'。","
 ______是将字符串t复制到字符串s的函数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
/* strcpy: copy t to s; pointer version 3 */ 
 void strcpy(char *s, char *t) 
 { 
 while (*s++ = *t++) 
 ; 
 }",______是用来将字符串t复制到字符串s的函数。,"
 以下是一道填空题:

void strcpy(char \*s, char \*t) \_\_\_ 
{ 
while (\*s++ = \*t++) 
; 
}","
 ______是用来将字符串t复制到字符串s的函数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
标准库（<string.h>）中提供的函数 strcpy 把目标字符串作为函数值返回。",______中提供的函数 strcpy 把目标字符串作为函数值返回。,"
 以下是一道填空题:

标准库（<string.h>）中提供的函数 strcpy 把目标字符串作为函数值返回。

题目:标准库中提供的函数 strcpy 的返回值是什么？

答案：目标字符串。","
 ______中提供的函数 strcpy 把目标字符串作为函数值返回。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
我们研究的第二个函数是字符串比较函数 strcmp(s, t)。该函数比较字符串 s 和 t，并且根据 s 按照字典顺序小于、等于或大于 t 的结果分别返回负整数、0 或正整数。该返回值是 s 和 t 由前向后逐字符比较时遇到的第一个不相等字符处的字符的差值。",______函数的功能是比较两个字符串并返回相应的结果。,"
 以下是一道填空题:

我们研究的第二个函数是字符串比较函数 strcmp(s, t)。该函数比较字符串 s 和 t，并且根据 s 按照字典顺序小于、等于或大于 t 的结果分别返回负整数、0 或正整数。该返回值是 s 和 t 由前向后逐字符比较时遇到的第一个不相等字符处的字符的差值。

空格处应填入：负整数、0 或正整数。","
 ______函数的功能是比较两个字符串并返回相应的结果。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
/* strcmp: return <0 if s<t, 0 if s==t, >0 if s>t */ 
 int strcmp(char *s, char *t) 
 { 
 int i; 
 for (i = 0; s[i] == t[i]; i++) 
 if (s[i] == '\0') 
 return 0; 
 return s[i] - t[i]; 
 }",______函数的作用是比较两个字符串的大小。,"
 以下是一道填空题:

void strcmp(char\* s, char\* t) \{\ }; 

选项:

A. int i; 
B. for (i = 0; s[i] == t[i]; i++) 
C. return s[i] - t[i]; 
D. if (s[i] == '\0') 
E. return 0;","
 ______函数的作用是比较两个字符串的大小。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
/* strcmp: return <0 if s<t, 0 if s==t, >0 if s>t */ 
 int strcmp(char *s, char *t) 
 { 
 for ( ; *s == *t; s++, t++) 
 if (*s == '\0') 
 return 0; 
 return *s - *t; 
 }",______函数的作用是比较两个字符串的大小。,"
 请根据给定的C语言代码，将下面的空格处填上正确的字符。

int strcmp(char \*s, char \*t) 
{ 
\_\_\_\_\_\_\_\_ 
for ( ; \*s == \*t; s++, t++) 
if (\*s == '\0') 
return 0; 
return \*s - \*t; 
}","
 ______函数的作用是比较两个字符串的大小。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
由于++和--既可以作为前缀运算符，也可以作为后缀运算符，所以还可以将运算符*与运算符++和--按照其它方式组合使用，但这些用法并不多见。例如，下列表达式
*--p 
在读取指针 p 指向的字符之前先对 p 执行自减运算。事实上，下面的两个表达式：
*p++ = val; /* 将 val 压入栈 */ 
val = *--p; /* 将栈顶元素弹出到 val 中 */ 
是进栈和出栈的标准用法。",______是进栈和出栈的标准用法。,"
 下列哪个表达式先对指针 p 执行自减运算,然后将 p 指向的字符读取到变量 val 中,并将其弹出到栈顶元素中?

答案:*--p","
 ______是进栈和出栈的标准用法。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
头文件<string.h>中包括标准库中其它一些字符串处理函数的声明。",______中包括标准库中其它一些字符串处理函数的声明。,"
 题目：头文件<string.h>中包括______中一些字符串处理函数的声明。

选项：
A. 标准库
B. C语言标准库
C. 系统库
D. 其他一些字符串处理函数","
 ______中包括标准库中其它一些字符串处理函数的声明。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
由于指针本身也是变量，所以它们也可以像其它变量一样存储在数组中。下面通过编写UNIX 程序 sort 的一个简化版本说明这一点。该程序按字母顺序对由文本行组成的集合进行排序。
现在处理的是长度不一的文本行。并且与整数不同的是，它们不能在单个运算中完成比较或移动操作。我们需要一个能够高效、方便地处理可变长度文本行的数据表示方法。我们引入指针数组处理这种问题。如果待排序的文本行首尾相连地存储在一个长字符数组中，那么每个文本行可通过指向它的第一个字符的指针来访问。这些指针本身可以存储在一个数组中。这样，将指向两个文本行的指针传递给函数 strcmp 就可实现对这两个文本行的比较。当交换次序颠倒的两个文本行时，实际上交换的是指针数组中与这两个文本行相对应的指针，而不是这两个文本行本身。这种实现方法消除了因移动文本行本身所带来的复杂的存储管理和巨大的开销这两个孪生问题。",______是一个能够高效、方便地处理可变长度文本行的数据表示方法。,"长度不同而产生的比较和移动操作的开销。

1. 在这段文本中，提到了一种数据表示方法，它能够高效、方便地处理可变长度文本行。这种数据表示方法是什么？
2. 这段文本中提到了一个程序——sort，它能够按字母顺序对由文本行组成的集合进行排序。请问这个程序是如何实现排序的？
3. 这段文本中提到了一种交换操作，它能够消除了因长度不同而产生的比较和移动操作的开销。请问这种交换操作是什么？

答案：
1. 指针数组
2. 通过比较和移动操作对文本行进行排序
3. 交换指向两个文本行的指针","
 ______是一个能够高效、方便地处理可变长度文本行的数据表示",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#include <stdio.h> 
 #include <string.h> 
 #define MAXLINES 5000 /* max #lines to be sorted */ 
 char *lineptr[MAXLINES]; /* pointers to text lines */ 
 int readlines(char *lineptr[], int nlines); 
 void writelines(char *lineptr[], int nlines); 
 void qsort(char *lineptr[], int left, int right); 
 /* sort input lines */ 
 main() 
 { 
 int nlines; /* number of input lines read */ 
 if ((nlines = readlines(lineptr, MAXLINES)) >= 0) { 
 qsort(lineptr, 0, nlines-1); 
 writelines(lineptr, nlines); 
 return 0; 
 } else { 
 printf(""error: input too big to sort\n""); 
 return 1; 
 } 
 } 
 #define MAXLEN 1000 /* max length of any input line */ 
 int getline(char *, int); 
 char *alloc(int); 
 /* readlines: read input lines */ 
 int readlines(char *lineptr[], int maxlines) 
 { 
 int len, nlines; 
 char *p, line[MAXLEN]; 
 nlines = 0; 
 while ((len = getline(line, MAXLEN)) > 0) 
 if (nlines >= maxlines || p = alloc(len) == NULL) 
 return -1; 
 else { 
 line[len-1] = '\0'; /* delete newline */ 
 strcpy(p, line); 
 lineptr[nlines++] = p; 
 } 
 return nlines; 
 } 
 /* writelines: write output lines */ 
 void writelines(char *lineptr[], int nlines) 
 { 
 int i; 
 for (i = 0; i < nlines; i++) 
 printf(""%s\n"", lineptr[i]); 
 }",______函数的作用是读取输入行。,"MAXLINE 5000 /* max #lines to be read */ 
 char *input; 
 int i; 
 /* read input lines */ 
 for (i = 0; i < MAXLINE; i++) { 
 input = getline(&input, &i); 
 if (input == NULL) { 
 printf(""Error: can't read line %d\n"", i+1); 
 return 1; 
 } 
 lineptr[i] = input; 
 } 
 } 
 } 
 题目：在上述代码中，以下哪个函数是正确的 implementation for 读取输入文件的每一行并将其存储在 `lineptr` 数组中？

A. readlines()
B. getline()
C. qsort()
D. writelines()","
 ______函数",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
指针数组 1ineptr 的声明是新出现的重要概念：
char *lineptr[MAXLINES]; 
它表示 1ineptr 是一个具有 MAXLINES 个元素的一维数组，其中数组的每个元素是一个指向字符类型对象的指针。也就是说，lineptr[i]是一个字符指针，而*lineptr[i]是该指针指向的第 i 个文本行的首字符。由于 1ineptr 本身是一个数组名，因此，可按照前面例子中相同的方法将其作为指针使用",______是一个具有 MAXLINES 个元素的一维数组，其中数组的每个元素是一个指向字符类型对象的指针。,"
 题目：下面关于指针数组 1ineptr 的声明，哪些选项是正确的？

A. 1ineptr 是一个字符指针数组，其中每个元素都是指向一个字符类型对象的指针。
B. 1ineptr 是一个字符指针数组，其中每个元素都是指向一个整类型对象的指针。
C. 1ineptr 是一个字符指针数组，其中每个元素都是指向一个字符串类型对象的指针。
D. 1ineptr 是一个字符指针数组，其中每个元素都是指向一个函数类型的指针。","
 ______是一个具有 MAXLINES 个元素的一维数组，其中数组的每个元素是一个指向字符类型对象的指针。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
/* writelines: write output lines */ 
 void writelines(char *lineptr[], int nlines) 
 { 
 while (nlines-- > 0) 
 printf(""%s\n"", *lineptr++); 
 }",______函数的功能是写输出行。,"
 请根据以下文本内容出一道填空题:

/* writelines: write output lines */ 
 void writelines(char *lineptr[], int nlines) 
 { 
 while (nlines-- > 0) 
 printf(""%s\n"", *lineptr++); 
 }

问题: 

在上述代码中,以下哪个选项不是writelines函数的参数?

A. lineptr
B. nlines
C. 0
D. \*lineptr++

答案: C","
 ______函数的功能是写输出行。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
/* qsort: sort v[left]...v[right] into increasing order */ 
 void qsort(char *v[], int left, int right) 
 { 
 int i, last; 
 void swap(char *v[], int i, int j); 
 if (left >= right) /* do nothing if array contains */ 
 return; /* fewer than two elements */ 
 swap(v, left, (left + right)/2); 
 last = left; 
 for (i = left+1; i <= right; i++) 
 if (strcmp(v[i], v[left]) < 0) 
 swap(v, ++last, i); 
 swap(v, left, last); 
 qsort(v, left, last-1); 
 qsort(v, last+1, right); 
 }",______是用来将v[left]到v[right]的元素按照递增顺序进行排序的函数。,"
 下面是关于上述文本的填空题：

void qsort(char \*v[], int left, int right) 
{ 
\_\_\_\_\_\_\_\_ 
int i, last; 
void swap(char \*v[], int i, int j); 
if (left >= right) /* do nothing if array contains */ 
return; /* fewer than two elements */ 
swap(v, left, (left + right)/2); 
last = left; 
for (i = left+1; i <= right; i++) 
if (strcmp(v[i], v[left]) < 0) 
swap(v, ++last, i); 
swap(v, left, last); 
qsort(v, left, last-1); 
qsort(v, last+1, right); 
}","
 ______是用来将v[left]到v[right]的元素按照递增顺序进行排序的函数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
/* swap: interchange v[i] and v[j] */ 
 void swap(char *v[], int i, int j) 
 { 
 char *temp; 
 temp = v[i]; 
 v[i] = v[j]; 
 v[j] = temp; 
 }",______是用来交换数组中两个元素位置的函数。,"
 以下是一道填空题:

void swap(char \*v[], int i, int j) \_\_\_\_\_\_\_\_\_ interchange v[i] and v[j].","
 ______是用来交换数组中两个元素位置的函数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
static char daytab[2][13] = { 
 {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}, 
 {0, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31} 
 }; 
 /* day_of_year: set day of year from month & day */ 
 int day_of_year(int year, int month, int day) 
 { 
 int i, leap; 
 leap = year%4 == 0 && year%100 != 0 || year%400 == 0; 
 for (i = 1; i < month; i++) 
 day += daytab[leap][i]; 
 return day; 
 } 
 /* month_day: set month, day from day of year */ 
 void month_day(int year, int yearday, int *pmonth, int *pday) 
 { 
 int i, leap; 
 leap = year%4 == 0 && year%100 != 0 || year%400 == 0; 
 for (i = 1; yearday > daytab[leap][i]; i++) 
 yearday -= daytab[leap][i]; 
 *pmonth = i; 
 *pday = yearday; 
 }",______函数用于根据年、月、日计算一年中的第几天。,"ap][i-1]; 
 return day; 
 }","
 ______函数用于根据年、月、",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在 C 语言中，二维数组实际上是一种特殊的一维数组，它的每个元素也是一个一维数组。",______是一种特殊的一维数组，在C语言中，它的每个元素也是一个一维数组。,"
 以下是一道填空题:

在 C 语言中,二维数组实际上是一种特殊的一维数组,它的每个元素也是一个一维数组。

空格: 

答案:数组。","
 ______是一种特殊的一维数组，在C语言中，它的每个元素也是一个一维数组。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
数组元素按行存储，因此，当按存储顺序访问数组时，最右边的数组下标（即列）变化得最快。",______按行存储的数组，最右边的数组下标（即列）变化得最快。,"
 下面是一个相应的填空题：

数组元素按行存储，因此，当按存储顺序访问数组时，最右边的数组下标（即列）变化得最快。空格处的词语是______。

答案：变化","
 ______按行存储的数组，最右边的数组下标（即列）变化得最快。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
数组可以用花括号括起来的初值表进行初始化，二维数组的每一行由相应的子列表进行初始化。",______可以用花括号括起来的初值表进行初始化。,"
 下面是一个关于二维数组初始化的填空题:

数组可以用花括号括起来的初值表进行初始化,二维数组的每一行由相应的子列表进行初始化。

空格处应填入:数组可以用花括号括起来的初值表进行初始化,二维数组的每一行由相应的子列表进行初始化。","
 ______可以用花括号括起来的初值表进行初始化。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
如果将二维数组作为参数传递给函数，那么在函数的参数声明中必须指明数组的列数。数组的行数没有太大关系，因为前面已经讲过，函数调用时传递的是一个指针，它指向由行向量构成的一维数组，其中每个行向量是具有 13 个整型元素的一维数组。",______作为参数传递给函数时，必须指明数组的列数。,"
 以下是一道根据给定文本内容填空的题目:

在C语言中,如果将二维数组作为参数传递给函数,那么在函数的参数声明中必须指明数组的列数。数组的行数没有太大关系,因为前面已经讲过,函数调用时传递的是一个指针,它指向由行向量构成的一维数组,其中每个行向量是具有 13 个整型元素的一维数组。因此,函数的参数声明中应该包括数组的列数,例如:

```
void my_function(int **arr, int cols) {
    //...
}
```

其中`arr`是一个指向二维数组的指针,`cols`表示数组的列数。在函数中,我们可以通过`arr[i][j]`访问二维数组中的元素,其中`i`表示行数,`j`表示列数。","
 ______作为参数传递给函数时，必须指明数组的列数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
如果将数组 daytab 作为参数传递给函数 f，那么 f 的声明应该写成下列形式：
f(int daytab[2][13]) { ... } 
也可以写成
f(int daytab[][13]) { ... } 
因为数组的行数无关紧要，所以，该声明还可以写成
f(int (*daytab)[13]) { ... } 
这种声明形式表明参数是一个指针，它指向具有 13 个整型元素的一维数组。因为方括号[]的优先级高于*的优先级，所以上述声明中必须使用圆括号。如果去掉括号，则声明变成
int *daytab[13] 
这相当于声明了一个数组，该数组有 13 个元素，其中每个元素都是一个指向整型对象的指针。一般来说，除数组的第一维（下标）可以不指定大小外，其余各维都必须明确指定大小。",______ daytab 作为参数传递给函数 f，那么 f 的声明应该写成下列形式：f(int daytab[2][13]) { ... },"即行）之外，其他维度都可以省略。

填空题：

将数组 daytab 作为参数传递给函数 f 的正确声明是：
f(int daytab[2][13]) {... } 
或者
f(int daytab[][13]) {... } 
正确填空为：f(int daytab[2][13]) {... }","
 ______ daytab 作为参数传递给函数 f，那么 f 的声明应该写成下列形式：f(int daytab[2][13])",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
 /* month_name: return name of n-th month */ 
 char *month_name(int n) 
 { 
 static char *name[] = { 
 ""Illegal month"", 
 ""January"", ""February"", ""March"", 
 ""April"", ""May"", ""June"", 
 ""July"", ""August"", ""September"", 
 ""October"", ""November"", ""December"" 
 };",______函数返回第n个月的名称。,"
 根据给定的C语言代码，以下哪个变量会存储n-th month的名字？

```c
char *month_name(int n);
```

答案：name[n-1]","
 ______函数返回第n个月的名称。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
假如有下面两个定义：
int a[10][20]; 
int *b[10]; 
那么，从语法角度讲，a[3][4]和 b[3][4]都是对一个 int 对象的合法引用。但 a 是一个真正的二维数组，它分配了 200 个 int 类型长度的存储空间，并且通过常规的矩阵下标计算公式 20×row+col（其中，row 表示行，col 表示列）计算得到元素 a[row][col]的位置。但是，对 b 来说，该定义仅仅分配了 10 个指针，并且没有对它们初始化，它们的初始化必须以显式的方式进行，比如静态初始化或通过代码初始化。假定 b 的每个元素都指向一个具有 20 个元素的数组，那么编译器就要为它分配 200 个 int 类型长度的存储空间以及 10 个指针的存储空间。指针数组的一个重要优点在于，数组的每一行长度可以不同，也就是说，b 的每个元素不必都指向一个具有 20 个元素的向量，某些元素可以指向具有 2 个元素的向量，某些元素可以指向具有 50 个元素的向量，而某些元素可以不指向任何向量。",______是一个真正的二维数组，它分配了 200 个 int 类型长度的存储空间，并且通过常规的矩阵下标计算公式 20×row+col 计算得到元素的位置。,"个 int 类型的长度的存储空间。

下面是代码示例： 

```c
#include <stdio.h>

int main()
{
    int a[10][20]; 
    int *b[10]; 

    // 初始化 b 数组
    for (int i = 0; i < 10; i++)
    {
        b[i] = (int*)malloc(200 * sizeof(int));
        if (b[i] == NULL)
        {
            printf(""Memory allocation failed\n"");
            return 1;
        }
    }

    // 初始化 a 数组
    for (int i = 0; i < 10; i++)
    {
        for (int j = 0; j < 20; j++)
        {
            a[i][j] = i * 10 + j;
        }
    }

    // 打印 a 数组
    for (int i = 0; i < 10; i++)
    {
        for (int j = 0; j < 20; j++)
        {
            printf(""%d "", a[i][j]);
        }
        printf(""\n"");
    }

    // 释放 b 数组内存
    for (int i = 0; i < 10; i++)
    {
        free(b[i]);
    }

    return 0;
}
```

题目：根据上述文本，下面哪个选项是正确的？

A. a[3][4] 和 b[3][4] 都是对一个 int 对象的合法引用。
B. a 和 b 都是指针数组，它们都需要初始化。
C. b 需要初始化，但 a 不需要。
D. a 和 b 都是数组，它们都需要分配 200 个 int 类型的长度的存储空间。","
 ______是一个真正的二维数组，它分配了 200 个 int 类型长度的存储空间，并且通过常规的矩阵下标计算",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在支持 C 语言的环境中，可以在程序开始执行时将命令行参数传递给程序。调用主函数main 时，它带有两个参数。第一个参数（习惯上称为 argc，用于参数计数）的值表示运行程序时命令行中参数的数目；第二个参数（称为 argv，用于参数向量）是一个指向字符串数组的指针，其中每个字符串对应一个参数。我们通常用多级指针处理这些字符串。",______是在程序开始执行时将命令行参数传递给程序的方式。,"
 在支持C语言的环境中，可以在程序开始执行时将命令行参数传递给程序。调用主函数main时，它带有两个参数。第一个参数（习惯上称为__attribute__((constructor)))的值表示运行程序时命令行中参数的数目；第二个参数（称为__attribute__((destructor)))是一个指向字符串数组的指针，其中每个字符串对应一个参数。我们通常用多级指针处理这些字符串。","
 ______是在程序开始执行时将命令行参数传递给程序的方式。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
最简单的例子是程序 echo，它将命令行参数回显在屏幕上的一行中，其中命令行中各参数之间用空格隔开。也就是说，命令
echo hello, world 
将打印下列输出：
hello, world
按照 C 语言的约定，argv[0]的值是启动该程序的程序名，因此 argc 的值至少为 1。如果 argc 的值为 1，则说明程序名后面没有命令行参数。在上面的例子中，argc 的值为 3，argv[0]、argv[1]和 argv[2]的值分别为“echo”、 “hello,”，以及“world”。第一个可选参数为 argv[1]，而最后一个可选参数为 argv[argc-1]。另外，ANSI 标准要求argv[argc]的值必须为一空指针。",______是启动该程序的程序名。,"
 请根据上述文本，以下哪个选项是正确的？

char **argv;  
argv = argv_list;  
argc = 1;","
 ______是启动该程序的程序名。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
 #include <stdio.h> 
 /* echo command-line arguments; 1st version */ 
 main(int argc, char *argv[]) 
 { 
 int i; 
 for (i = 1; i < argc; i++) 
 printf(""%s%s"", argv[i], (i < argc-1) ? "" "" : """"); 
 printf(""\n""); 
 return 0; 
 } ",______是C语言中用于表示命令行参数数量的变量。,"
 请将以下代码中的 `argv[0]` 和 `argv[i]` 分别替换为相应的函数名，以使代码正常运行。

```c
#include <stdio.h> 
/* echo command-line arguments; 1st version */ 
main(int argc, char *argv[]) 
{ 
 int i; 
 for (i = 1; i < argc; i++) 
 printf(""%s%s"", argv[i], (i < argc-1)? "" "" : """"); 
 printf(""\n""); 
 return 0; 
}
```

请填写：

```c
#include <stdio.h> 
/* echo command-line arguments; 1st version */ 
main(int argc, char *__attribute__((__constructor__)) argv[]) 
{ 
 int i; 
 for (i = 1; i < argc; i++) 
 printf(""%s%s"", argv[i], (i < argc-1)? "" "" : """"); 
 printf(""\n""); 
 return 0; 
}
```","
 ______是C语言中用于表示命令行参数数量的关键字。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
 #include <stdio.h> 
 /* echo command-line arguments; 2nd version */ 
 main(int argc, char *argv[]) 
 { 
 while (--argc > 0) 
 printf(""%s%s"", *++argv, (argc > 1) ? "" "" : """"); 
 printf(""\n""); 
 return 0; 
 } 
也可以将 printf 语句写成下列形式：
printf((argc > 1) ? ""%s "" : ""%s”, *++argv); ",______是C语言中用于获取命令行参数的关键字。,"
 请根据以下文本内容完成填空题：

#include <stdio.h> 
/* echo command-line arguments; 2nd version */ 
main(int argc, char *argv[]) 
{ 
    while (--argc > 0) 
        printf(""%s%s"", *++argv, (argc > 1)? "" "" : """"); 
    printf(""\n""); 
    return 0; 
} 
也可以将 printf 语句写成下列形式：
printf((argc > 1)? ""%s "" : ""%s"", *++argv); 

填空题：在上述代码中，`(argc > 1)` 的值为____，`*++argv` 的值为____。","
 ______是C语言中用于获取命令行参数的关键字。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
 #include <stdio.h> 
 #include <string.h> 
 #define MAXLINE 1000 
 int getline(char *line, int max); 
 /* find: print lines that match pattern from 1st arg */ 
 main(int argc, char *argv[]) 
 { 
 char line[MAXLINE]; 
 int found = 0; 
 if (argc != 2) 
 printf(""Usage: find pattern\n""); 
 else 
 while (getline(line, MAXLINE) > 0) 
 if (strstr(line, argv[1]) != NULL) { 
 printf(""%s"", line); 
 found++; 
 } 
 return found; 
 } ",______是用来打印匹配模式的行的函数。,"
 请根据以下文本内容完成填空题：

#include <stdio.h>
#include <string.h>
#define MAXLINE 1000
int getline(char *line, int max);
/* find: print lines that match pattern from 1st arg */
main(int argc, char *argv[])
{
char line[MAXLINE];
int found = 0;
if (argc!= 2)
printf(""Usage: find pattern\n"");
else
while (getline(line, MAXLINE) > 0)
if (strstr(line, argv[1])!= NULL) {
printf(""%s"", line);
found++;
}
return found;
}

请根据上述代码中的 comments 完成填空题。","
 ______是用来打印匹配模式的行的函数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
为了更进一步地解释指针结构，我们来改进模式查找程序。假定允许程序带两个可选参数。其中一个参数表示“打印除匹配模式之外的所有行”，另一个参数表示“每个打印的文本行前面加上相应的行号”。
UNIX 系统中的 C 语言程序有一个公共的约定：以负号开头的参数表示一个可选标志或参数。假定用-x（代表“除……之外”）表示打印所有与模式不匹配的文本行，用-n（代表“行
号”）表示打印行号，那么下列命令：
find -x -n 模式
将打印所有与模式不匹配的行，并在每个打印行的前面加上行号。
可选参数应该允许以任意次序出现，同时，程序的其余部分应该与命令行中参数的数目无关。此外，如果可选参数能够组合使用，将会给使用者带来更大的方便，比如：
find -nx 模式
改写后的模式查找程序如下所示：
 #include <stdio.h> 
 #include <string.h> 
 #define MAXLINE 1000 
 int getline(char *line, int max); 
 /* find: print lines that match pattern from 1st arg */ 
 main(int argc, char *argv[]) 
 { 
 char line[MAXLINE]; 
 long lineno = 0; 
 int c, except = 0, number = 0, found = 0; 
 while (--argc > 0 && (*++argv)[0] == '-') 
 while (c = *++argv[0]) 
 switch (c) { 
 case 'x': 
 except = 1; 
 break; 
 case 'n': 
 number = 1; 
 break; 
 default: 
 printf(""find: illegal option %c\n"", c); 
 argc = 0; 
 found = -1; 
 break; 
 } 
 if (argc != 1) 
 printf(""Usage: find -x -n pattern\n""); 
 else 
 while (getline(line, MAXLINE) > 0) { 
 lineno++; 
 if ((strstr(line, *argv) != NULL) != except) { 
 if (number) 
 printf(""%ld:"", lineno); 
 printf(""%s"", line); 
 found++; 
 } 
 } 
 return found; 
 } ",______是UNIX系统中C语言程序的一个公共约定，表示一个可选标志或参数。,"
 
int main() 
{ 
    char *mode = ""模式""; 
    int flag1 = 0, flag2 = 0; 
    printf(""请输入模式："");
    scanf(""%s"", mode); 
    printf(""请输入-x参数的值（0表示禁用，1表示启用）："");
    scanf(""%d"", &flag1); 
    printf(""请输入-n参数的值（0表示禁用，1表示启用）："");
    scanf(""%d"", &flag2); 
    if (flag1 == 1 && flag2 == 1) 
    {
        printf(""find -x -n 模式\n"");
    } 
    else if (flag1 == 1) 
    {
        printf(""find -x 模式\n"");
    } 
    else if (flag2 == 1) 
    {
        printf(""find -n 模式\n"");
    } 
    else
    {
        printf(""无效的参数\n"");
    }
    return 0;
}

请根据上述文本内容，用 C 语言编写完整的程序并填入下面的空白处：

find -x -n 模式

根据上述文本内容，下面的空白处应填入：

``` 
printf(""find -x -n 模式\n"");
```","
 ______是UNIX系统中C",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在 C 语言中，函数本身不是变量，但可以定义指向函数的指针。这种类型的指针可以被赋值、存放在数组中、传递给函数以及作为函数的返回值等等。为了说明指向函数的指针的用法，我们接下来将修改本章前面的排序函数，在给定可选参数-n 的情况下，该函数将按数值大小而非字典顺序对输入行进行排序。",______是在C语言中可以定义指向函数的指针，可以被赋值、存放在数组中、传递给函数以及作为函数的返回值等等。,"
 在 C 语言中，函数本身不是变量，但可以定义指向函数的指针。这种类型的指针可以被赋值、存放在数组中、传递给函数以及作为函数的返回值等等。为了说明指向函数的指针的用法，我们接下来将修改本章前面的排序函数，在给定可选参数-n 的情况下，该函数将按数值大小而非字典顺序对输入行进行排序。

下面是修改后的代码：

```c
#include <stdio.h>

void sort(int arr[], int n, int *n_) {
    int i, j, temp;
    for (i = 0; i < n - 1; i++) {
        for (j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
}

void print_sorted(int arr[], int n) {
    int i;
    for (i = 0; i < n; i++) {
        printf(""%d "", arr[i]);
    }
    printf(""\n"");
}

int main() {
    int arr[100], n, n_ = 0;
    printf(""请输入待排序的元素个数："");
    scanf(""%d"", &n);
    printf(""请输入待排序的元素："");
    for (int i = 0; i < n; i++) {
        scanf(""%d"", &arr[i]);
    }
    sort(arr, n, &n_);
    printf(""按数值大小而非字典顺序排序后的结果："");
    print_sorted(arr, n);
    return 0;
}
```

请根据上述代码中的空格填入正确的词语。","
 ______是在C语言中可以定义指向函数的指针，可以被赋值、存放在数组中、传递给函数以及作为函数的返回值等等。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
排序程序通常包括 3 部分：判断任何两个对象之间次序的比较操作、颠倒对象次序的交换操作、一个用于比较和交换对象直到所有对象都按正确次序排列的排序算法。由于排序算法与比较、交换操作无关，因此，通过在排序算法中调用不同的比较和交换函数，便可以实现按照不同的标准排序。这就是我们的新版本排序函数所采用的方法。",______是排序程序的三个主要部分。,"
 下面是一道根据上述文本内容出的填空题：

排序程序通常包括三部分：判断任何两个对象之间次序的比较操作、颠倒对象次序的交换操作、一个用于比较和交换对象直到所有对象都按正确次序排列的排序算法。由于排序算法与比较、交换操作无关，因此，通过在排序算法中调用不同的比较和交换函数，便可以实现按照不同的标准排序。这就是我们的新版本排序函数所采用的方法。

空格部分应填写：比较操作、交换操作、排序算法。","
 ______是排序程序的三个主要部分。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#include <stdio.h> 
 #include <string.h> 
 #define MAXLINES 5000 /* max #lines to be sorted */ 
 char *lineptr[MAXLINES]; /* pointers to text lines */ 
 int readlines(char *lineptr[], int nlines); 
 void writelines(char *lineptr[], int nlines); 
 void qsort(void *lineptr[], int left, int right, 
 int (*comp)(void *, void *)); 
 int numcmp(char *, char *); 
 /* sort input lines */ 
 main(int argc, char *argv[]) 
 { 
 int nlines; /* number of input lines read */ 
 int numeric = 0; /* 1 if numeric sort */ 
 if (argc > 1 && strcmp(argv[1], ""-n"") == 0) 
 numeric = 1; 
 if ((nlines = readlines(lineptr, MAXLINES)) >= 0) { 
 qsort((void**) lineptr, 0, nlines-1, 
 (int (*)(void*,void*))(numeric ? numcmp : strcmp)); 
 writelines(lineptr, nlines); 
 return 0; 
 } else { 
 printf(""input too big to sort\n""); 
 return 1; 
 } 
 }",______是C语言中用于比较两个字符串的函数。,"if (argc > 2 && strcmp(argv[2], ""-t"") == 0) 
 { 
 char *filename;
 printf(""Enter the filename: "");
scanf(""%s"", filename); 
 char *lineptr[MAXLINES]; 
 readlines(lineptr, nlines); 
 } 
 } 
 } 
 请根据以上代码，将以下代码中的空格替换为对应的函数名：

void qsort(void *lineptr[], int left, int right, int (*comp)(void *, void *)); 
void qsort(void *lineptr[], int left, int right, int (*comp)(void *, void *)); 
void qsort(void *lineptr[], int left, int right, int (*comp)(void *, void *)); 

void qsort(void *lineptr[], int left, int right, int (*comp)(void *, void *)); 
void qsort(void *lineptr[], int left, int right, int (*comp)(void *, void *)); 
void qsort(void *lineptr[], int left, int right, int (*comp)(void *, void *)); 

void qsort(void *lineptr[], int left, int right, int (*comp)(void *, void *)); 
void qsort(void *lineptr[], int left, int right, int (*comp)(void *, void *)); 
void qsort(void *lineptr[], int left, int right, int (*comp)(void *, void *)); 

void qsort(void *lineptr[], int left, int right, int (*comp)(void *, void *)); 
void qsort(void *lineptr[], int left, int right, int (*comp)(void *, void *)); 
void qsort(void *lineptr[], int left, int right, int (*comp)(void *, void *)); 

void qsort(void *lineptr[], int left, int right, int (*comp)(void *, void *)); 
void qsort(void *lineptr[], int left, int right, int (*comp)(void *, void *)); 
void qsort(void *lineptr[], int left,","
 ______是C语言中用于比较",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
 /* qsort: sort v[left]...v[right] into increasing order */ 
 void qsort(void *v[], int left, int right, 
 int (*comp)(void *, void *)) 
 { 
 int i, last; 
 void swap(void *v[], int, int); 
 if (left >= right) /* do nothing if array contains */ 
 return; /* fewer than two elements */ 
 swap(v, left, (left + right)/2); 
 last = left; 
 for (i = left+1; i <= right; i++) 
 if ((*comp)(v[i], v[left]) < 0) 
 swap(v, ++last, i); 
 swap(v, left, last); 
 qsort(v, left, last-1, comp); 
 qsort(v, last+1, right, comp); 
 }",______函数用于将数组中的元素按照增序进行排序。,"
 根据上述文本，以下哪个部分负责将待排序数组划分为两部分？

A. swap(v, left, (left + right)/2)
B. for (i = left+1; i <= right; i++) 
C. swap(v, left, last)
D. qsort(v, left, last-1, comp)

答案：A. swap(v, left, (left + right)/2)","
 ______函数用于将数组中的元素按照增序进行排序。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#include <stdlib.h> 
 /* numcmp: compare s1 and s2 numerically */ 
 int numcmp(char *s1, char *s2) 
 { 
 double v1, v2; 
 v1 = atof(s1); 
 v2 = atof(s2); 
 if (v1 < v2) 
 return -1; 
 else if (v1 > v2) 
 return 1; 
 else 
 return 0; 
 }",______函数用于比较两个字符串的数值大小。,"
 以下是一个填空题：

void numcmp(char *s1, char *s2) 
{ 
double v1, v2; 
v1 = atof(s1); 
v2 = atof(s2); 
if (v1 < v2) 
return ____; 
else if (v1 > v2) 
return ____; 
else 
return ____; 
}","
 ______函数用于比较两个字符串的数值大小。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
 void swap(void *v[], int i, int j;) 
 { 
 void *temp; 
 temp = v[i]; 
 v[i] = v[j]; 
 v[j] = temp; 
 }",______函数实现了一个指针数组中两个元素的交换操作。,"
 以下是一道关于上述C语言代码的填空题：

void swap(void \*v[], int i, int j);

答案：

void swap(void \*v[], int i, int j)
{
void \*temp;
temp = v[i];
v[i] = v[j];
v[j] = temp;
}","
 ______函数实现了一个指针数组中两个元素的交换操作。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
我们来看下面所示的两个声明：
int *f(); /* f: function returning pointer to int */ 
以及
int (*pf)(); /* pf: pointer to function returning int */ 
它们之间的含义差别说明：*是一个前缀运算符，其优先级低于()，所以，声明中必须使用圆括号以保正确的结合顺序。",______是一个前缀运算符，其优先级低于()，所以，声明中必须使用圆括号以保正确的结合顺序。,"
 根据上述文本内容，下面是一道填空题：

在C语言中，声明函数时使用圆括号保正确的结合顺序，这是为了__________。","
 ______是一个前缀运算符，其优先级低于()，所以，声明中必须使用圆括号以保正确的结合顺序。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
尽管实际中很少用到过于复杂的声明，但是，懂得如何理解甚至如何使用这些复杂的声明是很重要的。如何创建复杂的声明呢？一种比较好的方法是，使用 typedef 通过简单的步骤合成，这种方法我们将在 6.7 节中讨论。这里介绍另一种方法。接下来讲述的两个程序就使用这种方法：一个程序用于将正确的 C 语言声明转换为文字描述，另一个程序完成相反的转换。文字描述是从左至右阅读的。",______是通过简单的步骤合成复杂声明的一种方法。,"
 尽管实际中很少用到过于复杂的声明，但是，懂得如何理解甚至如何使用这些复杂的声明是很重要的。如何创建复杂的声明呢？一种比较好的方法是，使用 typedef 通过简单的步骤合成，这种方法我们将在 6.7 节中讨论。这里介绍另一种方法。接下来讲述的两个程序就使用这种方法：一个程序用于将正确的 C 语言声明转换为文字描述，另一个程序完成相反的转换。文字描述是从左至右阅读的。

填空题：将 C 语言声明转换为文字描述的方法是使用typedef，这种方法我们将在6.7节中讨论。","
 ______是通过简单的步骤合成复杂声明的一种方法。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
char **argv 
 argv: pointer to char 
int (*daytab)[13] 
 daytab: pointer to array[13] of int 
int *daytab[13] 
 daytab: array[13] of pointer to int 
void *comp() 
 comp: function returning pointer to void 
void (*comp)() 
 comp: pointer to function returning void 
char (*(*x())[])() 
 x: function returning pointer to array[] of 
 pointer to function returning char 
char (*(*x[3])())[5] 
 x: array[3] of pointer to function returning 
 pointer to array[5] of char",______是指向char类型的指针。,"
 以下是一道填空题:

char **argv;
argv: pointer to char\* 
int (*daytab)[13];
daytab: pointer to array[13] of int 
int *daytab[13];
daytab: array[13] of pointer to int 
void *comp();
comp: function returning pointer to void\* 
void (*comp)();
comp: pointer to function returning void 
char (*(*x())[])();
x: function returning pointer to array[] of 
pointer to function returning char 
char (*(*x[3])())[5];
x: array[3] of pointer to function returning 
pointer to array[5] of char.","
 ______是指向char类型的指针。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
程序 dcl 是基于声明符的语法编写的。附录 A 以及 8.5 节将对声明符的语法进行详细的描述。下面是其简化的语法形式：
dcl: optional *'s direct-dcl 
direct-dcl name 
 (dcl) 
 direct-dcl() 
 direct-dcl[optional size] 
简而言之，声明符 dcl 就是前面可能带有多个*的 direct-dcl。direct-dcl 可以是 name、由一对圆括号括起来的 dcl、后面跟有一对圆括号的 direct-dcl、后面跟有用方括号括起来的表示可选长度的 direct-dcl。",______是基于声明符的语法编写的。,"
 dcl: optional *'s direct-dcl 
direct-dcl name 
 (dcl) 
 direct-dcl() 
 direct-dcl[optional size] 
简而言之，声明符 dcl 就是前面可能带有多个*的 direct-dcl。direct-dcl 可以是 name、由一对圆括号括起来的 dcl、后面跟有一对圆括号的 direct-dcl、后面跟有用方括号括起来的表示可选长度的 direct-dcl。

填空题：根据给出的描述，以下哪个选项是正确的？

A. dcl 可以是 name、由一对圆括号括起来的 dcl、后面跟有一对圆括号的 direct-dcl、后面跟有用方括号括起来的表示可选长度的 direct-dcl。
B. dcl 可以是 name、由一对圆括号括起来的 dcl、后面跟有一对圆括号的 direct-dcl。
C. dcl 可以是 name、由一对圆括号括起来的 dcl、后面跟有用方括号括起来的表示可选长度的 direct-dcl、后面跟一个 *。
D. dcl 可以是 name、由一对圆括号括起来的 dcl、后面跟一个 *。","
 ______是基于声明符的语法编写的。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
该语法可用来对 C 语言的声明进行分析。例如，考虑下面的声明符：
(*pfa[])() 
按照该语法分析，pfa 将被识别为一个 name，从而被认为是一个 direct-dcl。于是，pfa[]也是一个 direct-dcl。接着，*pfa[]被识别为一个 dcl，因此，判定(*pfa[])是一个 direct-dcl。再接着，(*pfa[])()被识别为一个 direct-dcl，因此也是一个 dcl。",______语法可用来对 C 语言的声明进行分析。,"
 根据给出的文本内容，下面这个空格处应填入：

pfa[]","
 ______语法可用来对 C 语言的声明进行分析。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
程序 dcl 的核心是两个函数：dcl 与 dirdcl，它们根据声明符的语法对声明进行分析。因为语法是递归定义的，所以在识别一个声明的组成部分时，这两个函数是相互递归调用的。
我们称该程序是一个递归下降语法分析程序。
 /* dcl: parse a declarator */ 
 void dcl(void) 
 { 
 int ns; 
 for (ns = 0; gettoken() == '*'; ) /* count *'s */ 
 ns++; 
 dirdcl(); 
 while (ns-- > 0) 
 strcat(out, "" pointer to""); 
 } 
 /* dirdcl: parse a direct declarator */ 
 void dirdcl(void) 
 { 
 int type; 
 if (tokentype == '(') { /* ( dcl ) */ 
 dcl(); 
 if (tokentype != ')') 
 printf(""error: missing )\n""); 
 } else if (tokentype == NAME) /* variable name */ 
 strcpy(name, token); 
 else 
 printf(""error: expected name or (dcl)\n""); 
 while ((type=gettoken()) == PARENS || type == BRACKETS) 
 if (type == PARENS) 
 strcat(out, "" function returning""); 
 else { 
 strcat(out, "" array""); 
 strcat(out, token); 
 strcat(out, "" of""); 
 } 
 } 
该程序的目的旨在说明问题，并不想做得尽善尽美，所以对 dcl 有很多限制，它只能处理类似于 char 或 int 这样的简单数据类型，而无法处理函数中的参数类型或类似于 const
这样的限定符。它不能处理带有不必要空格的情况。由于没有完备的出错处理，因此它也无法处理无效的声明。这些方面的改进留给读者做练习。",______函数是程序dcl的核心函数之一，用于解析直接声明符。,"closing parenthesis\n""); 
 } 
 else { /* ')' */ 
 type = gettype(); 
 strcat(out, type); 
 if (type == 'int' || type == 'float' || type == 'char') 
 strcat(out, "" *""); 
 } 
 } 
 1. 在 dcl 函数中，程序员可以通过修改 `dirdcl()` 函数的调用方式来改变程序的执行顺序，对吗？

答案：是","
 ______函数是程序dcl的核心",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
下面是该程序的全局变量和主程序：
 #include <stdio.h> 
 #include <string.h> 
 #include <ctype.h> 
 #define MAXTOKEN 100 
 enum { NAME, PARENS, BRACKETS }; 
 void dcl(void); 
 void dirdcl(void); 
 int gettoken(void); 
 int tokentype; /* type of last token */ 
 char token[MAXTOKEN]; /* last token string */ 
 char name[MAXTOKEN]; /* identifier name */ 
 char datatype[MAXTOKEN]; /* data type = char, int, etc. */ 
 char out[1000]; 
 main() /* convert declaration to words */ 
 { 
 while (gettoken() != EOF) { /* 1st token on line */ 
 strcpy(datatype, token); /* is the datatype */ 
 out[0] = '\0'; 
 dcl(); /* parse rest of line */ 
 if (tokentype != '\n') 
 printf(""syntax error\n""); 
 printf(""%s: %s %s\n"", name, out, datatype); 
 } 
 return 0; 
 }",______是该程序的全局变量和主程序中的一个函数。,"
 strcpy(name, token); /* is the name */ 
 if (gettoken() == '(') { /* opening parenthesis */ 
 dirdcl(); 
 } else if (gettoken() == ')') { /* closing parenthesis */ 
 dirdcl(); 
 } else if (gettoken() == '{') { /* opening brace */ 
 dirdcl(); 
 } else if (gettoken() == '}') { /* closing brace */ 
 dirdcl(); 
 } else if (strcmp(token, ""int"") == 0 || strcmp(token, ""float"") == 0) { /* int or float */ 
 dcl(); 
 } else { /* not a token */ 
 printf(""Unknown token %s\n"", token); 
 } 
 } 
 } 
 return 0; 
 } 
 下面是该程序的代码，请根据程序的逻辑，将程序中的错误修改掉，并填入正确的代码。

下面是该程序的代码： 

A: dcl()
B: dirdcl()
C: dcl()
D: dirdcl()
E: gettoken()
F: tokentype
G: name
H: datatype
I: out

int main() {
while (gettoken()!= EOF) {
strcpy(datatype, token); /* is the datatype */
strcpy(name, token); /* is the name */
if (gettoken() == '(') { /* opening parenthesis */
dirdcl(); 
} else if (gettoken() == ')') { /* closing parenthesis */
dirdcl(); 
} else if (gettoken() == '{') { /* opening brace */
dirdcl(); 
} else if (gettoken() == '}') { /* closing brace */
dirdcl(); 
} else if (strcmp(token, ""int"") == 0 || strcmp(token, ""float"") == 0) { /* int or float */
dcl(); 
} else { /* not a token */
printf(""Unknown token %s\n"", token); 
}
}
return 0;
}

错误修改后的代码：","
 ______是该程序的全局变量和主",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数 gettoken 用来跳过空格与制表符，以查找输入中的下一个记号。“记号”（token）可以是一个名字，一对圆括号，可能包含一个数字的一对方括号，也可以是其它任何单个字符。
 int gettoken(void) /* return next token */ 
 { 
 int c, getch(void); 
 void ungetch(int); 
 char *p = token; 
 while ((c = getch()) == ' ' || c == '\t') 
 ; 
 if (c == '(') { 
 if ((c = getch()) == ')') { 
 strcpy(token, ""()""); 
 return tokentype = PARENS; 
 } else { 
 ungetch(c); 
 return tokentype = '('; 
 } 
 } else if (c == '[') { 
 for (*p++ = c; (*p++ = getch()) != ']'; ) 
 ; 
 *p = '\0'; 
 return tokentype = BRACKETS; 
 } else if (isalpha(c)) { 
 for (*p++ = c; isalnum(c = getch()); ) 
 *p++ = c; 
 *p = '\0'; 
 ungetch(c); 
 return tokentype = NAME; 
 } else 
 return tokentype = c; 
 }",______函数用来跳过空格与制表符，以查找输入中的下一个记号。,"']') { 
 ungetch(c); 
 } 
 return tokentype = '['; 
 } else if (isdigit(c)) { 
 ungetch(c); 
 return tokentype = DIGIT; 
 } else { 
 ungetch(c); 
 return tokentype = CHAR; 
 } 
 } 
 return tokentype = EOF; 
} 
 请根据文本内容，将文本中的记号（token）替换为以下字符：

namespace {
char name[30];
}

int main() 
{
gettoken(); 
return 0;
}","
 ______函数用来跳过空格与制表符，",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
如果不在乎生成多余的圆括号，另一个方向的转换要容易一些。为了简化程序的输入，我们将“x is a function returning a pointer to an array of pointers to functions returning char”（x 是一个函数，它返回一个指针，该指针指向一个一维数组，该一维数组的元素为指针，这些指针分别指向多个函数，这些函数的返回值为 char 类型）的描述用下列形式表示：
x () * [] * () char 
程序 undcl 将把该形式转换为：
char (*(*x())[])() 
由于对输入的语法进行了简化，所以可以重用上面定义的 gettoken 函数。undcl 和 dcl使用相同的外部变量。
 /* undcl: convert word descriptions to declarations */ 
 main() 
 { 
 int type; 
 char temp[MAXTOKEN]; 
 while (gettoken() != EOF) { 
 strcpy(out, token); 
 while ((type = gettoken()) != '\n') 
 if (type == PARENS || type == BRACKETS) 
 strcat(out, token); 
 else if (type == '*') { 
 sprintf(temp, ""(*%s)"", out); 
 strcpy(out, temp); 
 } else if (type == NAME) { 
 sprintf(temp, ""%s %s"", token, out); 
 strcpy(out, temp); 
 } else 
 printf(""invalid input at %s\n"", token); 
 } 
 return 0; 
 }",______是一个函数，它返回一个指针，该指针指向一个一维数组，该一维数组的元素为指针，这些指针分别指向多个函数，这些函数的返回值为 char 类型,"OF) { 
 type = gettoken(); 
 switch (type) { 
 case '(': 
 temp[0] = '('; 
 break; 
 case ')': 
 temp[0] = ')'; 
 break; 
 case'': 
 temp[0] =''; 
 break; 
 case '*': 
 temp[0] = '*'; 
 break; 
 case '[': 
 temp[0] = '['; 
 break; 
 case ']': 
 temp[0] = ']'; 
 break; 
 case'': 
 temp[0] =''; 
 break; 
 default: 
 temp[0] = '\0'; 
 break; 
 } 
 temp[1] = '\0'; 
 if (type == '*') { 
 undcl(temp); 
 } 
 else { 
 dcl(temp); 
 } 
 } 
 return 0; 
 } 
 

下面是程序的代码,其中包含一个函数指针的声明和函数指针的初始化,以及一个函数指针的函数调用。 

函数指针的声明和初始化:

char **x;

int main() 
{ 
char **x;
int type; 
char temp[MAXTOKEN]; 
```sql
   while (gettoken()!= EOF) { 
      type = gettoken(); 
      switch (type) { 
         case '(': 
            temp[0] = '('; 
            break; 
         case ')': 
            temp[0] = ')'; 
            break; 
         case'': 
            temp[0] =''; 
            break; 
         case '*': 
            temp[0] = '*'; 
            break; 
         case '[': 
            temp[0] = '['; 
            break; 
         case ']': 
            temp[0] = ']'; 
            break; 
         case'': 
            temp[0] =''; 
            break; 
","
 ______是一个函数，它返回一个指针，该指针指向一个一维数组，该一维数组的",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
结构是一个或多个变量的集合，这些变量可能为不同的类型，为了处理的方便而将这些变量组织在一个名字之下。（某些语言将结构称为“记录”，比如 Pascal 语言。）由于结构将一组相关的变量看作一个单元而不是各自独立的实体，因此结构有助于组织复杂的数据，特别是在大型的程序中。",______是一个或多个变量的集合，这些变量可能为不同的类型，为了处理的方便而将这些变量组织在一个名字之下。,"
 结构是一个或多个变量的集合，这些变量可能为不同的类型，为了处理的方便而将这些变量组织在一个名字之下。（某些语言将结构称为“记录”，比如 Pascal 语言。）由于结构将一组相关的变量看作一个单元而不是各自独立的实体，因此结构有助于组织复杂的数据，特别是在大型的程序中。

填空题：结构将一组相关的变量看作一个单元而不是各自独立的实体，这使得结构在处理复杂数据时特别有帮助，特别是在______中。

答案：大型的程序","
 ______是一个或多个变量的集合，这些变量可能为不同的类型，为了处理的方便而将这些变量组织在一个名字之下。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
我们首先来建立一些适用于图形领域的结构。点是最基本的对象，假定用 x 与 y 坐标表示它，且 x、y 的坐标值都为整数。
我们可以采用结构存放这两个坐标，其声明如下：
 struct point { 
 int x; 
 int y; 
 }; 
关键字 struct 引入结构声明。结构声明由包含在花括号内的一系列声明组成。关键字
struct 后面的名字是可选的，称为结构标记（这里是 point）。结构标记用于为结构命名，在定义之后，结构标记就代表花括号内的声明，可以用它作为该声明的简写形式。",______是图形领域中最基本的对象，用 x 与 y 坐标表示。,"
 下面是关于上述文本内容的填空题：

我们首先来建立一些适用于图形领域的结构。点是最基本的对象，假定用______与______表示它，且______、______的坐标值都为整数。
我们可以采用结构存放这两个坐标，其声明如下：
 struct point { 
 int x; 
 int y; 
 }; 
关键字______引入结构声明。结构声明由包含在花括号内的一系列声明组成。关键字______后面的名字是可选的，称为结构标记（这里是______）。结构标记用于为结构命名，在定义之后，结构标记就代表花括号内的声明，可以用它作为该声明的简写形式。","
 ______是图形领域中最基本的对象，用 x 与 y 坐标表示。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
结构中定义的变量称为成员。结构成员、结构标记和普通变量（即非成员）可以采用相同的名字，它们之间不会冲突，因为通过上下文分析总可以对它们进行区分。另外，不同结构中的成员可以使用相同的名字，但是，从编程风格方面来说，通常只有密切相关的对象才会使用相同的名字。",______的定义称为成员。,"
 结构中定义的变量称为______。结构成员、结构标记和普通变量（即非成员）可以采用相同的名字，它们之间不会冲突，因为通过上下文分析总可以对它们进行区分。另外，不同结构中的成员可以使用相同的名字，但是，从编程风格方面来说，通常只有密切相关的对象才会使用相同的名字。","
 ______的定义称为成员。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
struct 声明定义了一种数据类型。在标志结构成员表结束的右花括号之后可以跟一个变量表，这与其它基本类型的变量声明是相同的。例如：
struct { ... } x, y, z; 
从语法角度来说，这种方式的声明与声明
int x, y, z; 
具有类似的意义。这两个声明都将 x、y 与 z 声明为指定类型的变量，并且为它们分配存储空间。
如果结构声明的后面不带变量表，则不需要为它分配存储空间，它仅仅描述了一个结构的模板或轮廓。但是，如果结构声明中带有标记，那么在以后定义结构实例时便可以使用该标记定义。例如，对于上面给出的结构声明 point，语句
struct point pt; 
定义了一个 struct point 类型的变量 pt。结构的初始化可以在定义的后面使用初值表进行。初值表中同每个成员对应的初值必须是常量表达式，例如：
struct point maxpt = {320, 200}; 
自动结构也可以通过赋值初始化，还可以通过调用返回相应类型结构的函数进行初始化",______是一种数据类型，可以在声明时直接定义变量，也可以只定义结构的模板或轮廓。,"10, 20}; 
定义了一个 struct point 类型的变量 maxpt，它的成员为 10 和 20。

填空题：

在上述文本中，以下哪个选项是正确的？
A. 结构体可以包含一个变量表。
B. 结构体可以不包含变量表。
C. 结构体的变量声明与基本类型的变量声明不同。
D. 结构体的变量声明与基本类型的变量声明相同。","
 ______是一种数据类型，可以在声明时直接声明变量，也可以在定义结构实例",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在表达式中，可以通过下列形式引用某个特定结构中的成员：
结构名.成员
其中的结构成员运算符“.”将结构名与成员名连接起来。",______是可以通过结构名与成员名连接起来的结构成员运算符。,"
 请根据以下文本内容出一道填空题:

在表达式中，可以通过下列形式引用某个特定结构中的成员：
结构名.成员
其中的结构成员运算符“.”将结构名与成员名连接起来。

填空题:

假设有一个结构体定义如下：

```
struct Person {
    char name[20];
    int age;
};
```

请根据上述结构体定义，完成以下表达式：

```
struct Person p;
p.name = ""张三"";  // 将字符串 ""张三"" 赋值给 p 结构体中的 name 成员
p.age = 25;       // 将整数 25 赋值给 p 结构体中的 age 成员
```

请用 C 语言语法完成上述表达式。","
 ______是可以通过结构名与成员名连接起来的结构成员运算符。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
printf(""%d,%d"", pt.x, pt.y);",______，______,"
 以下是一道填空题:

在C语言中，使用`printf`函数输出两个整数之间的逗号，应该使用以下格式说明符:

____,____

其中，第一个空格表示要输出的第一个整数，第二个空格表示要输出的第二个整数。在本题中，应该填入pt.x和pt.y。","
 ______，______",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
double dist, sqrt(double); 
dist = sqrt((double)pt.x * pt.x + (double)pt.y * pt.y);",______是用来计算两点之间距离的函数。,"
 请根据以下文本内容出一道填空题:

double dist, sqrt(double); 
dist = sqrt((double)pt.x * pt.x + (double)pt.y * pt.y);

问题: 将下面的代码中的“sqrt”替换为“_sqrt”后,代码将变成什么? 

答案: 

double dist, _sqrt(double); 
dist = _sqrt((double)pt.x * pt.x + (double)pt.y * pt.y);","
 ______是sqrt()函数的参数类型。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
结构可以嵌套。我们可以用对角线上的两个点来定义矩形，相应的结构定义如下：
struct rect { 
 struct point pt1; 
 struct point pt2; 
 }; 
结构 rect 包含两个 point 类型的成员。如果按照下列方式声明 screen 变量：
struct rect screen; 
则可以用语句
screen.pt1.x 
引用 screen 的成员 pt1 的 x 坐标。",______可以用对角线上的两个点来定义矩形。,"
 题目：在结构体中，如何引用其成员？

答案：可以使用点积运算符“.”来引用结构体中的成员。例如：screen.pt1.x。","
 ______可以用对角线上的两个点来定义矩形。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
文本",抱歉，我无法根据空白文本进行出题。如果你能提供一些具体的文本内容，我将非常乐意帮助你出题。,"
 很抱歉,您没有提供文本内容,无法出一道填空题。请提供文本内容,我会尽力为您出一道填空题。","
 抱歉，我没有理解文本的内容。请您提供一些具体的文本内容，我将尽力为您出一道填空题。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
结构的合法操作只有几种：作为一个整体复制和赋值，通过&运算符取地址，访问其成员。其中，复制和赋值包括向函数传递参数以及从函数返回值。结构之间不可以进行比较。可以用一个常量成员值列表初始化结构，自动结构也可以通过赋值进行初始化。",______的合法操作包括复制和赋值，通过&运算符取地址，以及访问其成员。,"
 以下是一道填空题:

结构的合法操作只有几种:作为一个整体复制和赋值,通过__________运算符取地址,访问其成员。其中,复制和赋值包括向函数传递参数以及从函数返回值。结构之间不可以进行__________。可以用一个__________成员值列表初始化结构,自动结构也可以通过__________进行初始化。

答案:

结构的合法操作只有几种:作为一个整体复制和赋值,通过&运算符取地址,访问其成员。其中,复制和赋值包括向函数传递参数以及从函数返回值。结构之间不可以进行__________。可以用一个__________成员值列表初始化结构,自动结构也可以通过__________进行初始化。

答案:

结构的合法操作只有几种:作为一个整体复制和赋值,通过__________运算符取地址,访问其成员。其中,复制和赋值包括向函数传递参数以及从函数返回值。结构之间不可以进行__________。可以用一个__________成员值列表初始化结构,自动结构也可以通过__________进行初始化。

答案:

结构的合法操作只有几种:作为一个整体复制和赋值,通过__________运算符取地址,访问其成员。其中,复制和赋值包括向函数传递参数以及从函数返回值。结构之间不可以进行__________。可以用一个__________成员值列表初始化结构,自动结构也可以通过__________进行初始化。

答案:

结构的合法操作只有几种:作为一个整体复制和赋值,通过__________运算符取地址,访问其成员。其中,复制和赋值包括向函数传递参数以及从函数返回值。结构之间不可以进行__________。可以用一个__________成员值列表初始化结构,自动结构也可以通过__________进行初始化。

答案:","
 ______的合法操作包括复制和赋值，通过&运算符取地址，以及访问其成员。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
为了更进一步地理解结构，我们编写几个对点和矩形进行操作的函数。至少可以通过 3种可能的方法传递结构：一是分别传递各个结构成员，二是传递整个结构，三是传递指向结构的指针。这 3 种方法各有利弊。",______是对点和矩形进行操作的函数的参数传递方式的三种可能方法。,"
 为了更进一步地理解结构，我们编写几个对点和矩形进行操作的函数。至少可以通过 3种可能的方法传递结构：一是分别传递各个结构成员，二是传递整个结构，三是传递指向结构的指针。这 3 种方法各有利弊。

空格处应填：指针。","
 ______是对点和矩形进行操作的函数的参数传递方式的三种可能方法。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
/* makepoint: make a point from x and y components */
//函数 makepoint，它带有两个整型参数，并返回一个 point 类型的结构
struct point makepoint(int x, int y)
{
struct point temp;
temp.x = x;
temp.y = y;
return temp;
}",______是函数makepoint的返回类型。,"
 以下是一道根据给定文本内容的填空题：

void makepoint(int x, int y) __attribute__((constructor)) {
    struct point temp;
    temp.x = x;
    temp.y = y;
    return temp;
}","
 ______是函数makepoint的返回类型。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
//使用 makepoint 函数动态地初始化任意结构，也可以向函数提供结构类型的参数
struct rect screen;
struct point middle;
struct point makepoint(int, int);
screen.pt1 = makepoint(0,0);
screen.pt2 = makepoint(XMAX, YMAX);
middle = makepoint((screen.pt1.x + screen.pt2.x)/2,
(screen.pt1.y + screen.pt2.y)/2);",______函数可以动态地初始化任意结构。,"
 请根据以下文本内容出一道填空题:

使用 makepoint 函数动态地初始化任意结构，也可以向函数提供结构类型的参数
struct rect screen;
struct point middle;
struct point makepoint(int, int);
screen.pt1 = makepoint(0,0);
screen.pt2 = makepoint(XMAX, YMAX);
middle = makepoint((screen.pt1.x + screen.pt2.x)/2,
(screen.pt1.y + screen.pt2.y)/2);

题目：请将以下代码中的 XMAX 和 YMAX 替换为实际值，使得代码中的 makepoint 函数能够正确地初始化结构。

struct point makepoint(int x, int y);","
 ______函数可以动态地初始化任意结构。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
//对点执行加法运算的函数
/* addpoints: add two points */
struct addpoint(struct point p1, struct point p2)
{
 p1.x += p2.x;
p1.y += p2.y;
return p1;
}",______是执行加法运算的函数的名称？,"
 以下是一道填空题:

填空:struct addpoint 的作用是______。

答案:对两个点的坐标进行_______运算。","
 ______是执行加法运算的函数的名称？",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
//判断一个点是否在给定的矩形内部。
//我们采用这样一个约定：矩形包括其左侧边和底边，但不包括顶边和右侧边。
/* ptinrect: return 1 if p in r, 0 if not */
int ptinrect(struct point p, struct rect r)
{
return p.x >= r.pt1.x && p.x < r.pt2.x
&& p.y >= r.pt1.y && p.y < r.pt2.y;
}",______函数的功能是判断一个点是否在给定的矩形内部。,"
 题目：请根据给定的C语言代码，完成以下填空题：

//判断一个点是否在给定的矩形内部。
//我们采用这样一个约定：矩形包括其左侧边和底边，但不包括顶边和右侧边。
/* ptinrect: return 1 if p in r, 0 if not */
int ptinrect(struct point p, struct rect r)
{
return __builtin_popcount(p.x - r.pt1.x + 1) + __builtin_popcount(p.y - r.pt1.y + 1) <= __builtin_popcount(r.pt2.x - r.pt1.x + 1) + __builtin_popcount(r.pt2.y - r.pt1.y + 1);
}","
 ______函数的功能是判断一个点是否在给定的矩形内部。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
 //pt1 的坐标小于 pt2 的坐标。下列函数将返回一个规范形式的矩形：
#define min(a, b) ((a) < (b) ? (a) : (b))
#define max(a, b) ((a) > (b) ? (a) : (b))
/* canonrect: canonicalize coordinates of rectangle */
struct rect canonrect(struct rect r)
{
struct rect temp;
temp.pt1.x = min(r.pt1.x, r.pt2.x);
temp.pt1.y = min(r.pt1.y, r.pt2.y);
temp.pt2.x = max(r.pt1.x, r.pt2.x);
temp.pt2.y = max(r.pt1.y, r.pt2.y);
return temp;
}",______函数将返回一个规范形式的矩形,"
 以下哪个函数将返回一个规范形式的矩形？

```c
#define min(a, b) ((a) < (b)? (a) : (b))
#define max(a, b) ((a) > (b)? (a) : (b))
/* canonrect: canonicalize coordinates of rectangle */
struct rect canonrect(struct rect r)
{
struct rect temp;
temp.pt1.x = min(r.pt1.x, r.pt2.x);
temp.pt1.y = min(r.pt1.y, r.pt2.y);
temp.pt2.x = max(r.pt1.x, r.pt2.x);
temp.pt2.y = max(r.pt1.y, r.pt2.y);
return temp;
}
```

A. min
B. max
C. canonrect
D. None of the above","
 ______函数将返回一个规范形式的矩形",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
如果传递给函数的结构很大，使用指针方式的效率通常比复制整个结构的效率要高。结构指针类似于普通变量指针。声明struct point *pp;",______的效率通常比复制整个结构的效率要高。,"
 以下是一道填空题:

如果传递给函数的结构很大,使用指针方式的效率通常比复制整个结构的效率要高。结构指针类似于普通变量指针。声明 struct point *pp; 

空格处应填入：结构体。","
 ______的效率通常比复制整个结构的效率要高。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
//将 pp 定义为一个指向 struct point 类型对象的指针。如果 pp 指向一个 point 结构，那么*pp 即为该结构，而(*pp).x 和(*pp).y 则是结构成员。可以按照下例中的方式使用 pp：
struct point origin, *pp;
pp = &origin;
printf(""origin is (%d,%d)\n"", (*pp).x, (*pp).y);",______是一个指向 struct point 类型对象的指针。,"
 以下是一道填空题：

struct point origin, *pp;
pp = &origin;
printf(""origin is (%d,%d)\n"", (*pp).x, (*pp).y);

空格处应填入：

* *pp","
 ______是一个指向 struct point 类型对象的指针。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
将 pp 定义为一个指向 struct point 类型对象的指针。(*pp).x 中的圆括号是必需的，因为结构成员运算符“.”的优先级比“*”的优先级高。表达式*pp.x 的含义等价于*(pp.x)，因为 x 不是指针，所以该表达式是非法的。",______的含义等价于*(pp.x),"
 请根据以下文本内容出一道填空题:

将 pp 定义为一个指向 struct point 类型对象的指针。(*pp).x 中的圆括号是必需的，因为结构成员运算符“.”的优先级比“*”的优先级高。表达式*pp.x 的含义等价于**(pp.x)，因为 x 不是指针，所以该表达式是非法的。

填空题：将 pp 定义为一个指向 struct point 类型对象的指针。(\*pp).x 中的圆括号是必需的，因为结构成员运算符“.”的优先级比“*”的优先级高。表达式\*pp.x 的含义等价于\_\_\_\_\_\_\_\_。","
 ______的含义等价于*(pp.x)",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
结构指针的使用频度非常高，为了使用方便，C 语言提供了另一种简写方式。假定 p 是一个指向结构的指针，可以用p->结构成员这种形式引用相应的结构成员。这样，就可以用下面的形式改写上面的一行代码：printf(""origin is (%d,%d)\n"", pp->x, pp->y);",______的使用频度非常高，为了使用方便，C语言提供了另一种简写方式。假定p是一个指向结构的指针，可以用p->______这种形式引用相应的结构成员。,"
 结构指针的使用频度非常高，为了使用方便，C 语言提供了另一种简写方式。假定 p 是一个指向结构的指针，可以用p->结构成员这种形式引用相应的结构成员。这样，就可以用下面的形式改写上面的一行代码：printf(""origin is (%d,%d)\n"", p->结构成员->x, p->结构成员->y);","
 ______的使用频度非常高，为了使用方便，C语言提供了另一种简写方式。假定p是一个指向结构的指针，可以用p->______这种形式引用相应的结构成员。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
运算符.和->都是从左至右结合的，所以，对于下面的声明：
struct rect r, *rp = &r;
以下 4 个表达式是等价的：
r.pt1.x
rp->pt1.x
(r.pt1).x
(rp->pt1).x",______,"
 请根据以下文本内容出一道填空题:

运算符. 和 -> 都是从左至右结合的，所以，对于下面的声明：
struct rect r, *rp = &r;
以下 4 个表达式是等价的：
r.pt1.x
rp->pt1.x
(r.pt1).x
(rp->pt1).x

请从以下选项中选择正确答案：

A. r.pt1.x 和 rp->pt1.x 是等价的
B. r.pt1.x 和 (r.pt1).x 是等价的
C. rp->pt1.x 和 (rp->pt1).x 是等价的
D. (r.pt1).x 和 (rp->pt1).x 是等价的

正确答案：A","
 ______",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在所有运算符中，下面 4 个运算符的优先级最高：结构运算符“.”和“->”、用于函数调用的“()”以及用于下标的“[]”，因此，它们同操作数之间的结合也最紧密。",______的优先级在所有运算符中最高。,"
 下面 4 个运算符的优先级最高：

结构运算符“.” 和“->”

用于函数调用的“()”

用于下标的“[]”","
 ______的优先级在所有运算符中最高。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
对于结构声明
struct {
int len;
char *str;
} *p;
表达式++p->len将增加 len 的值，而不是增加 p 的值，这是田为，其中的隐含括号关系是++(p->len)。可以使用括号改变结合次序。例如：(++p)->len 将先执行 p 的加 1 操作，再对 len 执行操作；而(p++)->len 则先对 len 执行操作，然后再将 p 加 1（该表达式中的括号可以省略）。
同样的道理，*p->str 读取的是指针 str 所指向的对象的值；*p->str++先读取指针str 指向的对象的值，然后再将 str 加 1（与*s++相同）；(*p->str）++将指针 str 指向的对象的值加 1；*p++->str 先读取指针 str 指向的对象的值，然后再将 p 加 1。",______是田为，其中的隐含括号关系是++(p->len)。,"，然后再将 p 加 1（与*p++相同）。

下面是两个结构体变量的例子：

struct {
int len;
char *str;
} s1;
struct {
int len;
char *str;
} s2;

s1.len = 10;
s1.str = ""hello"";
s2.len = 5;
s2.str = ""world"";

int main() {
    s1.len++; // 11
    s1.str++; // hello
    s2.len++; // 6
    s2.str++; // world
    return 0;
}

对于结构体变量的指针操作，有以下几点需要注意：

1. 结构体变量的指针可以指向结构体变量的任意成员；
2. 结构体变量的指针可以进行解引用操作；
3. 结构体变量的指针可以进行取地址操作；
4. 结构体变量的指针可以进行指向操作；
5. 结构体变量的指针可以进行指针运算；
6. 结构体变量的指针可以进行指针结合操作。","
 ______是田为，其中的隐含括号关系是++(p->len",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
考虑编写这样一个程序，它用来统计输入中各个 C 语言关键字出现的次数。我们需要用一个字符串数组存放关键字名，一个整型数组存放相应关键字的出现次数。一种实现方法是，使用两个独立的数组 keyword 和 keycount 分别存放它们，如下所示
char *keyword[NKEYS];
int keycount[NKEYS];",______是用来统计输入中各个 C 语言关键字出现次数的程序。,"
 以下是一道基于上述文本内容的填空题:

在 C 语言中,以下哪个关键字表示“如果-else”语句?

A. if
B. ifelse
C. ifelseif
D. elseif","
 ______是用来统计输入中各个 C 语言关键字出现次数的程序。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
char *keyword[NKEYS];
int keycount[NKEYS];
我们注意到，这两个数组的大小相同，考虑到该特点，可以采用另一种不同的组织方式，
也就是我们这里所说的结构数组。每个关键字项包括一对变量：
char *word;
int cout;
这样的多个变量对共同构成一个数组。我们来看下面的声明：
struct key {
char *word;
int count;
 } keytab[NKEYS];
它声明了一个结构类型 key，并定义了该类型的结构数组 keytab，同时为其分配存储空间。
数组 keytab 的每个元素都是一个结构。上述声明也可以写成下列形式：
struct key {
char *word;
int count;
};",______是一种用于存储关键字和其出现次数的数据结构，它由一个包含char *word和int count的结构体组成。,"
 以下是一道根据给定文本的填空题：

在结构数组 keytab 中，每个元素都是一个结构，其中包括变量**word**和变量**count**。

答案：

struct key {
char *word;
int count;
} keytab[NKEYS];","
 ______是一种用于存储关键字和其出现次数的数据结构，它由一个包含char *word和int count的结构体组成。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
struct key {
char *word;
int count;
};
struct key keytab[NKEYS];
因为结构 keytab 包含一个固定的名字集合，所以，最好将它声明为外部变量，这样，只需要初始化一次，所有的地方都可以使用。这种结构的初始化方法同前面所述的初始化方法类似——在定义后面通过一个用圆括号括起来的初值表进行初始化，如下所示：
struct key {
char *word;
int count;
} keytab[] = {
""auto"", 0,
""break"", 0,
""case"", 0,
""char"", 0,
""const"", 0,
""continue"", 0,
""default"", 0,
/* ... */
""unsigned"", 0,
""void"", 0,
""volatile"", 0,
""while"", 0
};",______是一个结构体数组，包含了一个固定的名字集合，可以通过外部变量声明，只需要初始化一次，所有的地方都可以使用。,"
 下面是填空题：

struct key {
char *word;
int count;
} keytab[NKEYS];

因为结构 keytab 包含一个固定的名字集合，所以，最好将它声明为外部变量，这样，只需要初始化一次，所有的地方都可以使用。这种结构的初始化方法同前面所述的初始化方法类似——在定义后面通过一个用圆括号括起来的初值表进行初始化，如下所示：

struct key {
char *word;
int count;
} keytab[] = {
""auto"", 0,
""break"", 0,
""case"", 0,
""char"", 0,
""const"", 0,
""continue"", 0,
""default"", 0,
/*... */
""unsigned"", 0,
""void"", 0,
""volatile"", 0,
""while"", 0
};

请填写空格：

struct key {
char *word;
int count;
} keytab[NKEYS];

因为结构 keytab 包含一个固定的名字集合，所以，最好将它声明为外部变量，这样，只需要初始化一次，所有的地方都可以使用。这种结构的初始化方法同前面所述的初始化方法类似——在定义后面通过一个用圆括号括起来的初值表进行初始化，如下所示：

struct key {
char *word;
int count;
} keytab[] = {
""auto"", 0,
""break"", 0,
""case"", 0,
""char"", 0,
""const"", 0,
""continue"", 0,
""default"", 0,
/*... */
""unsigned"", 0,
""void"", 0,
""volatile"", 0,
""while"", 0
};","
 ______是一个结构体数组，包含了一个固定的名字集合，可以通过外部变量声明，只需要初始化一次，所有的地方都可以使用。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#include <stdio.h>
#include <ctype.h>
#include <string.h>
#define MAXWORD 100
//读入一个单词，并将其复制到名字为该函数的第一个参数的数组中
int getword(char *, int);
 int binsearch(char *, struct key *, int);
/* count C keywords */
main()
{
int n;
char word[MAXWORD];
while (getword(word, MAXWORD) != EOF)
if (isalpha(word[0]))
if ((n = binsearch(word, keytab, NKEYS)) >= 0)
keytab[n].count++;
for (n = 0; n < NKEYS; n++)
if (keytab[n].count > 0)
printf(""%4d %s\n"",
keytab[n].count, keytab[n].word);
return 0;
}
/* binsearch: find word in tab[0]...tab[n-1] */
int binsearch(char *word, struct key tab[], int n)
{
int cond;
int low, high, mid;
low = 0;
high = n - 1;
while (low <= high) {
mid = (low+high) / 2;
if ((cond = strcmp(word, tab[mid].word)) < 0)
high = mid - 1;
else if (cond > 0)
low = mid + 1;
else
return mid;
}
return -1;
}",______函数用于读入一个单词，并将其复制到名字为该函数的第一个参数的数组中。,";
}

void getword(char *word, int maxlen)
{
int c;
while ((c = getchar())!= EOF)
if (c == '\n' || c == '\r' || c == '\t')
word[c - 'a'] = '\0';
else
word[c - 'a'] = tolower(c);
word[maxlen - 1] = '\0';
}

int binsearch(char *word, struct key *keytab, int n)
{
int i;
for (i = 0; i < n; i++)
if (strcmp(word, keytab[i].word) == 0)
return i;
return -1;
}

int main(int argc, char **argv)
{
char *keytab[NKEYS];
int keycnt;
for (keycnt = 0; keycnt < NKEYS; keycnt++)
{
keytab[keycnt].count = 0;
keytab[keycnt].word = NULL;
}
main(argc, argv);
}

struct key {
char word[MAXWORD];
int count;
};

void addword(char *word)
{
int i;
for (i = 0; i < NKEYS; i++)
{
if (strcmp(word, keytab[i].word) == 0)
keytab[i].count++;
else
{
keytab[i].count = 1;
keytab[i].word = word;
break;
}
}
}

int main(int argc, char **argv)
{
// 题目中省略了部分代码，请补充完整
 return 0;
}","
 ______函数用于读入一个单词，并将其复制到名字",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
C 语言提供了一个编译时（compile-time）一元运算符 sizeof，它可用来计算任一对象的长度。表达式
sizeof 对象
以及
sizeof(类型名)
将返回一个整型值，它等于指定对象或类型占用的存储空间字节数。（严格地说，sizeof 的返回值是无符号整型值，其类型为 size_t，该类型在头文件<stddef.h>中定义。）其中，对象可以是变量、数组或结构；类型可以是基本类型，如 int、double，也可以是派生类型，如结构类型或指针类型。",______是C语言提供的一个编译时一元运算符，用来计算任一对象的长度。,"
 C语言提供了一个编译时（compile-time）一元运算符______，它可用来计算任一对象的长度。表达式______对象以及______sizeof(类型名)将返回一个整型值，它等于指定对象或类型占用的存储空间字节数。（严格地说，sizeof 的返回值是无符号整型值，其类型为 size_t，该类型在头文件<stddef.h>中定义。）其中，对象可以是变量、数组或结构；类型可以是基本类型，如 int、double，也可以是派生类型，如结构类型或指针类型。

填空：sizeof","
 ______是C语言提供的一个编译时一元运算符，用来计算任一对象的长度。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
条件编译语句#if 中不能使用 sizeof，因为预处理器不对类型名进行分析。但预处理器并不计算#define 语句中的表达式，因此，在#define 中使用 sizeof 是合法的。",______中不能使用 sizeof，因为预处理器不对类型名进行分析。,"
 以下是一道填空题:

在条件编译语句 #if 中,不能使用 sizeof,因为预处理器不对类型名进行分析。但预处理器并不计算 #define 语句中的表达式,因此,在 #define 中使用 sizeof 是合法的。

空格处应填:sizeof。","
 ______中不能使用 sizeof，因为预处理器不对类型名进行分析。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
//从输入中读取下一个单词，单词可以是以字母开头的字母和数字串，也可以是一个非空白符字符。函数返回值可能是单词的第一个字符、文件结束符 EOF 或字符本身（如果该字符不是字母字符的话）。
/* getword: get next word or character from input */
int getword(char *word, int lim)
{
int c, getch(void);
void ungetch(int);
char *w = word;
while (isspace(c = getch()))
;
if (c != EOF)
*w++ = c;
if (!isalpha(c)) {
*w = '\0';
return c;
}
for ( ; --lim > 0; w++)
if (!isalnum(*w = getch())) {
ungetch(*w);
break;
}
*w = '\0';
return word[0];
}",______函数用于从输入中读取下一个单词或字符。,"
 以下是一道填空题：

void ungetch(int)
{
__builtin_pop( registers )","
 ______函数用于从输入中读取下一个单词或字符。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
//为了进一步说明指向结构的指针和结构数组，我们重新编写关键字统计程序，这次采用指针，而不使用数组下标。
// keytab 的外部声明不需要修改，但 main 和 binsearch 函数必须修改。修改后的程序如下：
#include <stdio.h>
#include <ctype.h>
#include <string.h>
#define MAXWORD 100
int getword(char *, int);
struct key *binsearch(char *, struct key *, int);
/* count C keywords; pointer version */
main()
{
char word[MAXWORD];
struct key *p;
while (getword(word, MAXWORD) != EOF)
if (isalpha(word[0]))
if ((p=binsearch(word, keytab, NKEYS)) != NULL)
p->count++;
for (p = keytab; p < keytab + NKEYS; p++)
if (p->count > 0)
printf(""%4d %s\n"", p->count, p->word);
return 0;
}
/* binsearch: find word in tab[0]...tab[n-1] */
struct key *binsearch(char *word, struck key *tab, int n)
{
int cond;
struct key *low = &tab[0];
struct key *high = &tab[n];
struct key *mid;
while (low < high) {
mid = low + (high-low) / 2;
if ((cond = strcmp(word, mid->word)) < 0)
high = mid;
else if (cond > 0)
low = mid + 1;
else
return mid;
}
return NULL;
}",______的外部声明不需要修改，但 main 和 binsearch 函数必须修改。修改后的程序如下：,"(p->count == 0)
printf(""Keyword not found\n"");
printf(""Total keywords: %d\n"", NKEYS);
return 0;
}

// 关键字的统计程序
int getword(char *word, int maxlen)
{
char *next;
int len = 0;
while ((next = strchr(word,''))!= NULL && len < maxlen)
{
len++;
}
return len;
}

// 搜索关键字的函数
struct key *binsearch(char *word, struct key *arr, int n)
{
int i;
for (i = 0; i < n; i++)
{
if (strcmp(word, arr[i].word) == 0)
return &arr[i];
}
return NULL;
}

在这段程序中,下列哪个函数不是使用指针?

答案：getword。","
 ______的外部声明不需要修改，但 main 和 bin",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
假设 char 类型占用一个字节，
int 类型占用 4 个字节，则下列结构：
struct {
char c;
int i;
};
可能需要 8 个字节的存储空间，而不是 5 个字节。使用 sizeof 运算符可以返回正确的对象
长度。",______类型占用一个字节，int 类型占用 4 个字节。struct 结构体可能需要 8 个字节的存储空间，而不是 5 个字节。使用 sizeof 运算符可以返回正确的对象长度。,"
 题目：struct {
char c;
int i;
} 中的 c 占用 1 个字节，i 占用 4 个字节，那么这个结构体需要多少个字节来存储？

答案：5个字节。","
 ______类型占用一个字节，int 类型占用 4 个字节。struct 结构体可能需要 8 个字节的存储空间，而不是 5 个字节。使用 sizeof 运算符可以返回正确的对象长度。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
假定我们需要处理一个更一般化的问题：统计输入中所有单词的出现次数。因为预先不知道出现的单词列表，所以无法方便地排序，并使用折半查找；也不能分别对输入中的每个单词都执行一次线性查找，看它在前面是否已经出现，这样做，程序的执行将花费太长的时间。（更准确地说，程序的执行时间是与输入单词数目的二次方成比例的。）我们该如何组织这些数据，才能够有效地处理一系列任意的单词呢？
一种解决方法是，在读取输入中任意单词的同时，就将它放置到正确的位置，从而始终保证所有单词是按顺序排列的。虽然这可以不用通过在线性数组中移动单词来实现，但它仍然会导致程序执行的时间过长。我们可以使用一种称为二叉树的数据结构来取而代之。
每个不同的单词在树中都是一个节点，每个节点包含：· 一个指向该单词内容的指针· 一个统计出现次数的计数值· 一个指向左子树的指针· 一个指向右子树的指针
任何节点最多拥有两个子树，也可能只有一个子树或一个都没有。对节点的所有操作要保证，任何节点的左子树只包含按字典序小于该节点中单词的那些单词，右子树只包含按字典序大于该节点中单词的那些单词",______是一种解决方法，通过将单词放置到正确的位置，从而始终保证所有单词是按顺序排列的，可以有效地处理一系列任意的单词。,"一个指向下一个节点（如果有的话）的指针
我们可以使用一种称为深度优先搜索的遍历算法，来遍历整个树，并统计每个节点的出现次数。这种方法不仅可以快速找到每个单词的出现次数，而且可以在最坏情况下实现O(nlogn)的复杂度。

空格处应填入什么内容？","
 ______是一种解决方法，通过将单词放置到正确的位置，从而始终保证所有单词是按顺序排列的",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
定义一个二叉树的数据结构，任何节点的左子树只包含按字典序小于该节点中单词的那些单词，右子树只包含按字典序大于该节点中单词的那些单词。要查找一个新单词是否已经在树中，可以从根节点开始，比较新单词与该节点中的单词。若匹配，则得到肯定的答案。若新单词小于该节点中的单词，则在左子树中继续查找，否则在右子树中查找。如在搜寻方向上无子树，则说明新单词不在树中，并且，当前的空位置就是存放新加入单词的正确位置。因为从任意节点出发的查找都要按照同样的方式查找它的一个子树，所以该过程是递归的。相应地，在插入和打印操作中使用递归过程也是很自然的事情。",______的数据结构定义了左子树和右子树的内容规则，使得树中的单词按照字典序排列。,"
 以下是一个符合要求的C语言填空题：

根据给定的文本，以下哪个选项能正确描述二叉树中查找单词的过程？

A. 先在新节点的左子树中查找，若匹配则返回True，否则继续在右子树中查找
B. 先在新节点的右子树中查找，若匹配则返回True，否则继续在左子树中查找
C. 先在左子树中查找，若匹配则返回True，否则继续在右子树中查找，并在找到匹配的节点后返回True","
 ______的数据结构定义了左子树和右子树的条件，即左子树包含字典序小于该节点中单词的单词，右子树包含字典序大于该节点中单词的单词。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
//有一个二叉树结构体，用于统计输入中所有单词的出现次数。
struct tnode { /* the tree node: */
char *word; /* points to the text */
int count; /* number of occurrences */
 struct tnode *left; /* left child */
struct tnode *right; /* right child */
};",______是用于统计输入中所有单词的出现次数的数据结构。,"
 以下是一道填空题:

根据给出的二叉树结构体,以下哪个字段表示树的根节点?

struct tnode *left;","
 ______是用于统计输入中所有单词的出现次数的数据结构。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
//添加一个新的结点到二叉树中
/* addtree: add a node with w, at or below p */
struct treenode *addtree(struct tnode *p, char *w)
{
int cond;
if (p == NULL) { /* a new word has arrived */
p = talloc(); /* make a new node */
p->word = strdup(w);
p->count = 1;
p->left = p->right = NULL;
} else if ((cond = strcmp(w, p->word)) == 0)
p->count++; /* repeated word */
else if (cond < 0) /* less than into left subtree */
p->left = addtree(p->left, w);
else /* greater than into right subtree */
p->right = addtree(p->right, w);
return p;
}",______函数用于向二叉树中添加一个新的结点。,"
 以下是一道填空题:

void addtree(struct tnode *p, char *w)
{
int cond;
if (p == NULL) { /* a new word has arrived */
p = talloc(); /* make a new node */
p->word = strdup(w);
p->count = 1;
p->left = p->right = NULL;
} else if ((cond = strcmp(w, p->word)) == 0)
p->count++; /* repeated word */
else if (cond < 0) /* less than into left subtree */
p->left = addtree(p->left, w);
else /* greater than into right subtree */
p->right = addtree(p->right, w);
return p;
}","
 ______函数用于向二叉树中添加一个新的结点。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
/* treeprint: in-order print of tree p */
// 中序打印树
void treeprint(struct tnode *p)
{
if (p != NULL) {
treeprint(p->left);
printf(""%4d %s\n"", p->count, p->word);
treeprint(p->right);
}
}",______是一种用于树结构的遍历方式。,"
 请根据上述文本内容，将以下代码中的空格替换为正确的运算符和表达式：

```c
void treeprint(struct tnode *p) {
if (p!= NULL) {
    treeprint(p->left);
    __builtin_popcount(p->count);  // 替换为 __builtin_popcount(p->count)
    printf(""%4d %s\n"", p->count, p->word);
    treeprint(p->right);
}
}
```","
 ______是一种用于树结构的遍历方式。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
假定用一个分配程序来处理多种类型的请求，比如指向 char 类型的指针和指向 struct tnode 类型的指针，则会出现两个问题。第一，它如何在大多数实际机器上满足各种类型对象的对齐要
求（例如，整型通常必须分配在偶数地址上），第二，使用什么样的声明能处理分配程序必须能返回不同类型的指针的问题？对齐要求一般比较容易满足，只需要确保分配程序始终返回满足所有对齐限制要求的指针就可以了，其代价是牺牲一些存储空间。第 5 章介绍的 alloc 函数不保证任何特定类型的对齐，所以，我们使用标准库函数 malloc，它能够满足对齐要求。第 8 章将介绍实现 malloc
函数的一种方法。",______是处理多种类型请求时需要解决的两个问题。,"
 假定用一个分配程序来处理多种类型的请求，比如指向 char 类型的指针和指向 struct tnode 类型的指针，则会出现两个问题。第一，它如何在大多数实际机器上满足各种类型对象的对齐要求（例如，整型通常必须分配在偶数地址上），第二，使用什么样的声明能处理分配程序必须能返回不同类型的指针的问题？对齐要求一般比较容易满足，只需要确保分配程序始终返回满足所有对齐限制要求的指针就可以了，其代价是牺牲一些存储空间。第 5 章介绍的 alloc 函数不保证任何特定类型的对齐，所以，我们使用标准库函数 malloc，它能够满足对齐要求。第 8 章将介绍实现 malloc 函数的一种方法。

填空题：
在上述文本中，作者提到了两个问题，第一是____，第二是____？","
 ______是处理多种类型请求时需要解决的两个问题。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
// strdup 函数只是把通过其参数传入的字符串复制到某个安全的位置。它是通过调用malloc 函数实现的：
char *strdup(char *s) /* make a duplicate of s */
{
char *p;
p = (char *) malloc(strlen(s)+1); /* +1 for '\0' */
if (p != NULL)
strcpy(p, s);
return p;
}
//在没有可用空间时，malloc 函数返回 NULL，同时，strdup 函数也将返回 NULL，strdup函数的调用者负责出错处理。",______函数是通过调用malloc函数实现的。,"
 以下是一道根据上述文本的填空题:

使用 C 语言的 strdup 函数,可以通过传入的字符串创建一个字符串副本。如果 strdup 函数在分配内存时发生错误,它将返回 NULL。______函数用于出错处理,确保调用者可以处理这种错误情况。","
 ______函数是通过调用malloc函数实现的。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
练习 6-2 
编写一个程序，用以读入一个 C 语言程序，并按字母表顺序分组打印变量名，要求每一组内各变量名的前 6 个字符相同，其余字符不同。字符串和注释中的单词不予考虑。请将 6 作为一个可在命令行中设定的参数。",______是编写一个程序，用以读入一个 C 语言程序，并按字母表顺序分组打印变量名的主要任务。,"
 以下是一道根据所给文本内容出的填空题:

编写一个程序,用以读入一个 C 语言程序,并按字母表顺序分组打印变量名,要求每一组内各变量名的前 6 个字符相同,其余字符不同。字符串和注释中的单词不予考虑。请将 6 作为一个可在命令行中设定的参数。

答案:

编写一个程序,用以读入一个 C 语言程序,并按字母表顺序分组打印变量名,要求每一组内各变量名的前 6 个字符相同,其余字符不同。字符串和注释中的单词不予考虑。请将 6 作为一个可在命令行中设定的参数。","
 ______是编写一个程序，用以读入一个 C 语言程序，并按字母表顺序分组打印变量名的主要任务。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
练习 6-3 
编写一个交叉引用程序，打印文档中所有单词的列表，并且每个单词还有一个列表，记录出现过该单词的行号。对 the、and 等非实义单词不予考虑。",______是编写一个交叉引用程序的目的。,"
 下面是一个可能的C语言实现:

```c
#include <stdio.h>
#include <ctype.h>

#define MAX_LINE_LENGTH 100

int main() {
    char file_name[MAX_LINE_LENGTH];
    char word[MAX_LINE_LENGTH];
    int line_number = 1;
    int word_count = 0;
    int non_real_word_count = 0;

    printf(""请输入文档的名称:"");
    scanf(""%s"", file_name);

    FILE *file = fopen(file_name, ""r"");
    if (!file) {
        printf(""无法打开文件!\n"");
        return 1;
    }

    while (fgets(file, MAX_LINE_LENGTH, file)) {
        int len = strlen(file);
        int i = 0;
        while (i < len &&!isspace(file[i]) &&!isalpha(file[i]) && file[i]!= '\""') {
            i++;
        }
        if (i == 0 || file[i] == '\""') {
            continue;
        }
        strncpy(word, file + i, MAX_LINE_LENGTH - i);
        word[MAX_LINE_LENGTH - i - 1] = '\0';

        if (strlen(word) > 0 && strcmp(word, ""the"")!= 0 && strcmp(word, ""and"")!= 0) {
            printf(""%d\n"", line_number);
            word_count++;
        }
        line_number++;

        i = 0;
        while (i < strlen(word) &&!isalpha(word[i]) && word[i]!= '\""') {
            i++;
        }
        if (i == strlen(word)) {
            non_real_word_count++;
        }
    }

    fclose(file);

    printf(""非实义单词的数量为:%d\n"", non_real_word_count);
    printf(""单词列表:\n","
 ______是编写一个交叉引用程序的目的。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
练习 6-4  编写一个程序，根据单词的出现频率按降序打印输入的各个不同单词，并在每个单词的前面标上它的出现次数。",______是什么？,"
 以下是一道根据给定文本内容出的填空题：

练习 6-4 编写一个程序，根据单词的出现频率按降序打印输入的各个不同单词，并在每个单词的前面标上它的出现次数。

答案：

```c
#include <stdio.h>
#include <string.h>

void count_words(const char *str);

int main() {
    char str[100];
    printf(""请输入一个字符串："");
    fgets(str, sizeof(str), stdin);
    count_words(str);
    return 0;
}

void count_words(const char *str) {
    int count[256] = {0};
    int i, j;
    char ch;

    for (i = 0; str[i]!= '\0'; i++) {
        ch = str[i];
        count[ch]++;
    }

    for (j = 255; j >= 0; j--) {
        if (count[j] > 0) {
            printf(""%c: %d\n"", j, count[j]);
        }
    }
}
```","
 ______是什么？",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
为了对结构的更多方面进行深入的讨论，我们来编写一个表查找程序包的核心部分代码。这段代码很典型，可以在宏处理器或编译器的符号表管理例程中找到。例如，考虑#define语句。当遇到类似于#define IN 1之类的程序行时，就需要把名字 IN 和替换文本 1 存入到某个表中。此后，当名字 IN 出现在某些语句中时，如：statet = IN;就必须用 1 来替换 IN。以下两个函数用来处理名字和替换文本。install(s, t)函数将名字 s 和替换文本 t记录到某个表中，其中 s 和 t 仅仅是字符串。lookup(s)函数在表中查找 s，若找到，则返回指向该处的指针；若没找到，则返回 NULL。",______是用来将名字和替换文本记录到表中的函数。,"
 为了对结构的更多方面进行深入的讨论，我们来编写一个表查找程序包的核心部分代码。这段代码很典型，可以在宏处理器或编译器的符号表管理例程中找到。例如，考虑#define语句。当遇到类似于#define IN 1之类的程序行时，就需要把名字 IN 和替换文本 1 存入到某个表中。此后，当名字 IN 出现在某些语句中时，如：statet = IN;就必须用 1 来替换 IN。以下两个函数用来处理名字和替换文本。install(s, t)函数将名字 s 和替换文本 t 记录到某个表中，其中 s 和 t 仅仅是字符串。lookup(s)函数在表中查找 s，若找到，则返回指向该处的指针；若没找到，则返回 NULL。

填空题：在程序中，用于存储名字和替换文本的表被称为______表。

答案：符号表","
 ______是用来将名字和替换文本记录到表中的函数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
链表中的每个块都是一个结构，它包含一个指向名字的指针、一个指向替换文本的指针以及一个指向该链表后继块的指针。如果指向链表后继块的指针为 NULL，则表明链表结束。
struct nlist { /* table entry: */
struct nlist *next; /* next entry in chain */
char *name; /* defined name */
char *defn; /* replacement text */
};",______是链表中的每个块的结构，它包含一个指向名字的指针、一个指向替换文本的指针以及一个指向该链表后继块的指针。,"
 以下是一个关于链表的填空题：

链表中的每个块都是一个结构，它包含一个指向名字的指针、一个指向替换文本的指针以及一个指向该链表后继块的指针。如果指向链表后继块的指针为 NULL，则表明链表结束。

struct nlist { /* table entry: */
\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_ /* next entry in chain */
char \*name; /* defined name */
char \*defn; /* replacement text */
};","
 ______是链表中的每个块的结构，它包含一个指向名字的指针、一个指向替换文本的指针以及一个指向该链表后继块的指针。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
/* hash: form hash value for string s */
unsigned hash(char *s)
{
unsigned hashval;
for (hashval = 0; *s != '\0'; s++)
hashval = *s + 31 * hashval;
return hashval % HASHSIZE;
}",______是用于计算字符串哈希值的函数。,"
 以下是一道关于这段C语言代码的填空题:

Hash函数用于计算字符串s的散列值,其计算过程如下:

1. 定义一个无符号整数变量hashval,初始化为0。
2. 遍历字符串s中的每个字符,直到遇到空字符'\0'。
3. 对于每个字符,将其值加上31乘以hashval,得到新的hashval。
4. 将新的hashval模运算ulo HASHSIZE,得到最终的散列值。

下面是代码的填空部分:

unsigned hash(char *s)
{
unsigned hashval;
for (hashval = 0; *s!= '\0'; s++)
hashval = __builtin_popcount(s) + 31 * hashval;  // 填空部分
return hashval % HASHSIZE;
}","
 ______是用于计算字符串哈希值的函数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
/* lookup: look for s in hashtab */
struct nlist *lookup(char *s)
{
struct nlist *np;
for (np = hashtab[hash(s)]; np != NULL; np = np->next)
if (strcmp(s, np->name) == 0)
return np; /* found */
return NULL; /* not found */
}",______函数用于在hashtab中查找指定的字符串s。,"
 以下是一道填空题:

在上述代码中,函数 lookup 的输入参数为字符串指针 s,它用于在哈希表中查找指定的字符串。函数的返回值为指向 struct nlist 类型的指针,该指针指向在哈希表中与 s 匹配的条目。如果哈希表中不存在与 s 匹配的条目,则函数返回 NULL。

下面是填空题:

struct nlist *lookup(char \*s)
{
\_\_\_\_\_\_\_\_\_\_\_
}","
 ______函数用于在散列表中查找指定的字符串。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
//install 函数先借助 lookup 函数判断待加入的名字是否已经存在。如果已存在，则用新的定义取而代之；否则，创建一个新表项。如无足够空间创建新表项，则 install 函数返回NULL。
struct nlist *lookup(char *);
char *strdup(char *);
/* install: put (name, defn) in hashtab */
struct nlist *install(char *name, char *defn)
{
struct nlist *np;
unsigned hashval;
if ((np = lookup(name)) == NULL) { /* not found */
np = (struct nlist *) malloc(sizeof(*np));
if (np == NULL || (np->name = strdup(name)) == NULL)
return NULL;
hashval = hash(name);
np->next = hashtab[hashval];
hashtab[hashval] = np;
} else /* already there */
free((void *) np->defn); /*free previous defn */
if ((np->defn = strdup(defn)) == NULL)
return NULL;
return np;
}",______函数用于判断待加入的名字是否已经存在，如果已存在则用新的定义取而代之，否则创建一个新表项。,"hashval] = np;
}
return np;
}","
 ______函数用于判断待加入的名字是否已经存在，如果已存在则用新的定义取而代之，",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
C 语言提供了一个称为 typedef 的功能，它用来建立新的数据类型名，例如，声明
typedef int Length;
将 Length 定义为与 int 具有同等意义的名字。类型 Length 可用于类型声明、类型转换等，它和类型 int 完全相同，例如：
Length len, maxlen;
Length *lengths[];",______提供了一个称为 typedef 的功能，它用来建立新的数据类型名。,"
 题目：在 C 语言中，typedef 功能的作用是建立新的数据类型名，例如______。

答案：typedef","
 ______提供了一个称为 typedef 的功能，它用来建立新的数据类型名。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
声明
typedef char* String；
将 String 定义为与 char *或字符指针同义，此后，便可以在类型声明和类型转换中使用String，例如：
String p, lineptr[MAXLINES], alloc(int);
int strcmp(String, String);
p = (String) malloc(100);",______是与char*或字符指针同义的类型。,"
 以下是一道填空题:

String p, \_\_\_\_\_\_\_\_\_, alloc(int);

其中空格需要填写适当的类型。","
 ______是与char*或字符指针同义的类型。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
typedef struct tnode *Treeptr;
typedef struct tnode { /* the tree node: */
char *word; /* points to the text */
int count; /* number of occurrences */
struct tnode *left; /* left child */
struct tnode *right; /* right child */
} Treenode;
//上述类型定义创建了两个新类型关键字：Treenode（一个结构）和 Treeptr（一个指向该结构的指针）。这样，函数 talloc 可相应地修改为：
Treeptr talloc(void)
{
return (Treeptr) malloc(sizeof(Treenode));
}",______是一个指向Treenode结构的指针类型。,"
 题目：

在上述代码中，以下哪个关键字用于定义结构体Treenode？

A. if
B. struct
C. int
D. talloc

答案：B","
 ______是一个指向Treenode结构的指针类型。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
从任何意义上讲，typedef 声明并没有创建一个新类型，它只是为某个已存在的类型增加了一个新的名称而已。typedef 声明也没有增加任何新的语义：通过这种方式声明的变量与通过普通声明方式声明的变量具有完全相同的属性。实际上，typedef类似于#define 语句，但由于 typedef 是由编译器解释的，因此它的文本替换功能要超过预处理器的能力。例如：
typedef int (*PFI)(char *, char *);
该语句定义了类型 PFI 是“一个指向函数的指针，该函数具有两个 char *类型的参数，返回值类型为 int”，它可用于某些上下文中，例如，可以用在第 5 章的排序程序中，如下所示：
PFI strcmp, numcmp;",______声明并没有创建一个新类型，它只是为某个已存在的类型增加了一个新的名称而已。,"
 以下哪个选项是正确的？

A. typedef声明创建了一个新类型，它与已存在的类型具有相同的属性。
B. typedef声明没有增加任何新的语义，它只是为某个已存在的类型增加了一个新的名称。
C. 通过typedef声明的变量具有与普通声明方式声明的变量相同的属性，但它们的类型不同。
D. typedef声明类似于#define语句，但由于typedef是由编译器解释的，因此它的文本替换功能要超过预处理器的能力。","
 ______声明并没有创建一个新类型，它只是为某个已存在的类型增加了一个新的名称而已。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
除了表达方式更简洁之外，使用 typedef 还有另外两个重要原因。首先，它可以使程序参数化，以提高程序的可移植性。如果 typedef 声明的数据类型同机器有关，那么，当程序移植到其它机器上时，只需改变 typedef 类型定义就可以了。一个经常用到的情况是，对于各种不同大小的整型值来说，都使用通过 typedef 定义的类型名，然后，分别为各个不同的宿主机选择一组合适的 short、int 和 long 类型大小即可。标准库中有一些例子，例如
size_t 和 ptrdiff_t 等。
typedef 的第二个作用是为程序提供更好的说明性——Treeptr 类型显然比一个声明为指向复杂结构的指针更容易让人理解。",______的第一个作用是使程序参数化，以提高程序的可移植性。,"
 使用 typedef 的两个重要原因是:

1. 提高程序的可移植性,使得当程序移植到其它机器上时,只需改变 typedef 类型定义就可以了。
2. 提供更好的说明性,使得 Treeptr 类型更容易让人理解。

标准库中一些使用 typedef 定义的类型名包括:

1. size_t
2. ptrdiff_t

使用 typedef 可以使得各种不同大小的整型值都使用通过 typedef 定义的类型名,然后,分别为各个不同的宿主机选择一组合适的 short、int 和 long 类型大小即可。","
 ______的第一个作用是使程序参数化，以提高程序的可移植性。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
联合是可以（在不同时刻）保存不同类型和长度的对象的变量，编译器负责跟踪对象的长度和对齐要求。联合提供了一种方式，以在单块存储区中管理不同类型的数据，而不需要在程序中嵌入任何同机器有关的信息。它类似于 Pascal 语言中的变体记录。",______是可以在不同时刻保存不同类型和长度的对象的变量，编译器负责跟踪对象的长度和对齐要求。,"
 请根据以上文本内容，完成以下填空题：

联合是可以（在不同时刻）保存不同类型和长度的对象的变量，编译器负责跟踪对象的长度和对齐要求。联合提供了一种方式，以在单块存储区中管理不同类型的数据，而不需要在程序中嵌入任何同机器有关的信息。它类似于 Pascal 语言中的______。","
 ______是可以在不同时刻保存不同类型和长度的对象的变量，编译器负责跟踪对象的长度和对齐要求。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
我们来看一个例子（可以在编译器的符号表管理程序中找到该例子）。假设一个常量可能是 int、f1oat 或字符指针。特定类型的常量值必须保存在合适类型的变量中，然而，如果该常量的不同类型占据相同大小的存储空间，且保存在同一个地方的话，表管理将最方便。这就是联合的目的——一个变量可以合法地保存多种数据类型中任何一种类型的对象。其语法基于结构，如下所示：
union u_tag {
int ival;
float fval;
char *sval;
} u;
变量 u 必须足够大，以保存这 3 种类型中最大的一种，具体长度同具体的实现有关。这些类型中的任何一种类型的对象都可赋值给 u，且可使用在随后的表达式中，但必须保证是一致的：读取的类型必须是最近一次存入的类型。程序员负责跟踪当前保存在联合中的类型。如果保存的类型与读取的类型不一致，其结果取决于具体的实现。",______的目的是让一个变量可以合法地保存多种数据类型中任何一种类型的对象。,"期望的类型不一致，则必须进行类型转换。

在这个例子中，假设我们有一个字符串 ""hello""，其 ASCII 码值为 104，那么我们可以将其赋值给 u.sval，假设此时联合中已保存了 int 和 float 类型的值，则可以通过读取 u.ival 和 u.fval 来分别读取 int 和 float 类型的值。","
 ______的目的是让一个变量可以合法地保存多种数据类型中任何一种类型的",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
可以通过下列语法访问联合中的成员：
联合名.成员
或
联合指针->成员
它与访问结构的方式相同。如果用变量 utype 跟踪保存在 u 中的当前数据类型，则可以像下面这样使用联合：
if (utype == INT)
printf(""%d\n"", u.ival);
if (utype == FLOAT)
printf(""%f\n"", u.fval);
if (utype == STRING)
printf(""%s\n"", u.sval);
else
printf(""bad type %d in utype\n"", utype);",______可以通过下列语法访问联合中的成员。,"
 联合名.成员 或 联合指针->成员 它与访问结构的方式相同。如果用变量 utype 跟踪保存在 u 中的当前数据类型，则可以像下面这样使用联合：
if (utype == INT)
    printf(""%d\n"", u.ival);
if (utype == FLOAT)
    printf(""%f\n"", u.fval);
if (utype == STRING)
    printf(""%s\n"", u.sval);
else
    printf(""bad type %d in utype\n"", utype);","
 ______可以通过下列语法访问联合中的成员。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
联合可以使用在结构和数组中，反之亦可。访问结构中的联合（或反之）的某一成员的表示法与嵌套结构相同。例如，假定有下列的结构数组定义：
 struct {
char *name;
int flags;
int utype;
union {
int ival;
float fval;
char *sval;
} u;
} symtab[NSYM];
可以通过下列语句引用其成员 ival：
symtab[i].u.ival
也可以通过下列语句之一引用字符串 sval 的第一个字符：
*symtab[i].u.sval
symtab[i].u.sval[0]",______可以使用在结构和数组中。,"
 以下是一道基于上述文本的填空题：

在 union 中，可以将一个 int 类型的变量与一个 float 类型的变量一起存储，反之亦然。访问 union 中的 int 类型变量的表示法与访问 int 类型变量相同，访问 float 类型变量的表示法与访问 float 类型变量相同，访问字符串类型变量的表示法与访问字符串类型变量相同。例如，假设有下列 union 定义：
```c
union {
    int i;
    float f;
    char str[20];
} u;
```
可以通过下列语句引用其成员 i：
```c
u.i = 10;
```
也可以通过下列语句之一引用字符串 str 的第一个字符：
```c
u.str[0] = 'a';
```","
 ______可以使用在结构和数组中。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
实际上，联合就是一个结构，它的所有成员相对于基地址的偏移量都为 0，此结构空间要大到足够容纳最“宽”的成员，并且，其对齐方式要适合于联合中所有类型的成员。对联合允许的操作与对结构允许的操作相同：作为一个整体单元进行赋值、复制、取地址及访问其中一个成员。联合只能用其第一个成员类型的值进行初始化，因此，上述联合 u 只能用整数值进行初始化。",______是一个结构，其所有成员相对于基地址的偏移量都为0，空间要大到足够容纳最“宽”的成员，并且对齐方式要适合于联合中所有类型的成员。,"
 联合中所有成员相对于基地址的偏移量都为______。","
 ______是一个结构，其所有成员相对于基地址的偏移量都为0，空间要大到足够容纳最“宽”的成员，并且对齐方式要适合于联合中所有类型的成员。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在存储空间很宝贵的情况下，有可能需要将多个对象保存在一个机器字中。一种常用的方法是，使用类似于编译器符号表的单个二进制位标志集合。外部强加的数据格式（如硬件
设备接口）也经常需要从字的部分值中读取数据。考虑编译器中符号表操作的有关细节。程序中的每个标识符都有与之相关的特定信息，例如，它是否为关键字，它是否是外部的且（或）是静态的，等等。对这些信息进行编码的最简洁的方法就是使用一个 char 或 int 对象中的位标志集合。",______的编码是使用一个 char 或 int 对象中的位标志集合。,"
 在存储空间很宝贵的情况下，有可能需要将多个对象保存在一个机器字中。一种常用的方法是，使用类似于编译器符号表的单个二进制位标志集合。外部强加的数据格式（如硬件设备接口）也经常需要从字的部分值中读取数据。考虑编译器中符号表操作的有关细节。程序中的每个标识符都有与之相关的特定信息，例如，它是否为关键字，它是否是外部的且（或）是静态的，等等。对这些信息进行编码的最简洁的方法就是使用一个 char 或 int 对象中的位标志集合。

填空题：使用一个 char 或 int 对象中的位标志集合，对程序中的每个标识符的特定信息进行编码。","
 ______的编码是使用一个 char 或 int 对象中的位标志集合。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
C 语言提供了一种直接定义和访问一个字中的位字段的能力，而不需要通过按位逻辑运算符。位字段（bit-field），或简称字段，是“字”中相邻位的集合。“字”（word）是单个的存储单元，它同具体的实现有关。例如，上述符号表的多个#define 语句可用下列 3 个字段的定义来代替：
struct {
unsigned int is_keyword : 1;
unsigned int is_extern : 1;
unsigned int is_static : 1;
} flags;
这里定义了一个变量 flags，它包含 3 个一位的字段。冒号后的数字表示字段的宽度（用二进制位数表示）。字段被声明为 unsigned int 类型，以保证它们是无符号量。",______是C语言中用来表示一个字中相邻位的集合的数据类型。,"
 下面是一个关于 C 语言中的位字段（bit-field）的填空题：

C 语言提供了一种直接定义和访问一个字中的位字段的能力，而不需要通过按位逻辑运算符。位字段（bit-field），或简称字段，是“字”中相邻位的集合。“字”（word）是单个的存储单元，它同具体的实现有关。例如，上述符号表的多个#define 语句可用下列 3 个字段的定义来代替：

struct {
unsigned int is_keyword : 1;
unsigned int is_extern : 1;
unsigned int is_static : 1;
} flags;

下面从上述结构体中随机填写一个位字段，使得该结构体能够表示一个整数：

unsigned int flags : 3;","
 ______是C语言中用于表示一个字中相邻位的集合的数据类型。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
单 个 字 段 的 引 用 方 式 与 其 它 结 构 成 员 相 同 ， 例 如 ： flags.is_keyword 、flags.is_extern 等等。字段的作用与小整数相似。同其它整数一样，字段可出现在算术
表达式中。因此，上面的例子可用更自然的方式表达为：flags.is_extern = flags.is_static = 1;
该语句将 is_extern 和 is_static 位置为 1。下列语句：flags.is_extern = flags.is_static = 0;
将 is_extern 和 is_static 位置为 0。下列语句：if (flags.is_extern == 0 && flags.is_static == 0)
...
用于对 is_extern 和 is_static 位进行测试。",______的作用与小整数相似。,"
 问题：在C语言中，字段的作用与哪种整数相似？

答案：C语言中的字段作用与小整数相似。","
 ______的作用与小整数相似。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
字段的所有属性几乎都同具体的实现有关。字段是否能覆盖字边界由具体的实现定义。
字段可以不命名，无名字段（只有一个冒号和宽度）起填充作用。特殊宽度 0 可以用来强制在下一个字边界上对齐。
某些机器上字段的分配是从字的左端至右端进行的，而某些机器上则相反。这意味着，尽管字段对维护内部定义的数据结构很有用，但在选择外部定义数据的情况下，必须仔细考虑哪端优先的问题。依赖于这些因素的程序是不可移植的。字段也可以仅仅声明为 int，为了方便移植，需要显式声明该 int 类型是 signed 还是 unsigned 类型。字段不是数组，并且没有地址，因此对它们不能使用&运算符。",______的属性与具体的实现有关。,"
 字段的所有属性几乎都同具体的实现有关。字段是否能覆盖字边界由具体的实现定义。字段可以不命名，无名字段（只有一个冒号和宽度）起填充作用。特殊宽度 0 可以用来强制在下一个字边界上对齐。某些机器上字段的分配是从字的左端至右端进行的，而某些机器上则相反。这意味着，尽管字段对维护内部定义的数据结构很有用，但在选择外部定义数据的情况下，必须仔细考虑哪端优先的问题。依赖于这些因素的程序是不可移植的。字段也可以仅仅声明为 int，为了方便移植，需要显式声明该 int 类型是 signed 还是 unsigned 类型。字段不是数组，并且没有地址，因此对它们不能使用&运算符。

空格处应填：字段宽度。","
 ______可以不命名，无名字段（只有一个冒号和宽度）起填充作用。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
输入/输出功能并不是 C 语言本身的组成部分，所以到目前为止，我们并没有过多地强调它们。但是，程序与环境之间的交互比我们在前面部分中描述的情况要复杂很多，本章将讲述标准库，介绍一些输入/输出函数、字符串处理函数、存储管理函数与数学函数，以及其它一些 C 语言程序的功能。本章讨论的重点将放在输入/输出上。ANSI 标准精确地定义了这些库函数，所以，在任何可以使用 C 语言的系统中都有这些函数的兼容形式。如果程序的系统交互部分仅仅使用了标准库提供的功能，则可以不经修改地从一个系统移植到另一个系统中。这些库函数的属性分别在十多个头文件中声明， 前面已经遇到过一部分， 如<stdio.h>、 <string.h>和<ctype.h>。我们不打算把整个标准库都罗列于此，因为我们更关心如何使用标准库编写 C 语言程序。附录 B 对标准库进行了详细的描述。",______是 C 语言程序中与环境进行交互的重要功能。,"
 以下是对上述文本内容的填空题：

C 语言的输入/输出功能并不是 C 语言本身的组成部分，所以到目前为止，我们并没有过多地强调它们。但是，程序与环境之间的交互比我们在前面部分中描述的情况要复杂很多，本章将讲述标准库，介绍一些输入/输出函数、字符串处理函数、存储管理函数与数学函数，以及其它一些 C 语言程序的功能。本章讨论的重点将放在______上。ANSI 标准精确地定义了这些库函数，所以，在任何可以使用 C 语言的系统中都有这些函数的兼容形式。如果程序的系统交互部分仅仅使用了标准库提供的功能，则可以不经修改地从一个系统移植到另一个系统中。这些库函数的属性分别在十多个头文件中声明， 前面已经遇到过一部分， 如<stdio.h>、 <string.h>和<ctype.h>。我们不打算把整个标准库都罗列于此，因为我们更关心如何使用标准库编写 C 语言程序。附录 B 对标准库进行了详细的描述。

答案：输入/输出","
 ______是 C 语言程序中与环境进行交互的重要功能",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
标准库实现了简单的文本输入/输出模式。文本流由一系列行组成，每一行的结尾是一个换行符。如果系统没有遵循这种模式，则标准库将通过一些措施使得该系统适应这种模式。例如，标准库可以在输入端将回车符和换行符都转换为换行符，而在输出端进行反向转换。",______是标准库实现的一种文本输入/输出模式。,"
 以下哪个选项描述了标准库在文本输入/输出模式中的行为？

A. 标准库将输入的回车符和换行符都转换为换行符，在输出时不进行任何转换。
B. 标准库将输入的换行符转换为回车符，在输出时不进行任何转换。
C. 标准库在输入端将换行符转换为回车符，在输出端进行反向转换。
D. 标准库在输入端将回车符转换为换行符，在输出端进行反向转换。","
 ______是标准库实现的一种文本输入/输出模式。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
最简单的输入机制是使用 getchar 函数从标准输入中（一般为键盘）一次读取一个字符：
int getchar(void)
getchar 函数在每次被调用时返回下一个输入字符。若遇到文件结尾，则返回 EOF。符号常量EOF在头文件<stdio.h>中定义，其值一般为-1，但程序中应该使用EOF来测试文件是否结束，这样才能保证程序同EOF的特定值无关。",______函数可以从标准输入中一次读取一个字符。,"
 下面是一道填空题：

使用 getchar 函数从标准输入中（一般为键盘）一次读取一个字符，若遇到文件结尾，则返回__________。

答案：EOF","
 ______函数可以从标准输入中一次读取一个字符。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在许多环境中，可以使用符号<来实现输入重定向，它将把键盘输入替换为文件输入：如果程序prog中使用了函数getchar，则命令行
prog < infile
将使得程序 prog 从输入文件infile（而不是从键盘）中读取字符。实际上，程序 prog 本身并不在意输入方式的改变，并且，字符串""<infile""也并不包含在argv的命令行参数中。如果输入通过管道机制来自于另一个程序，那么这种输入切换也是不可见的。比如，在某些  系统中，下列命令行：
otherprog | prog
将运行两个程序otherprog和prog，并将程序otherprog的标准输出通过管道重定向到程序prog的标准输入上。",______是一种可以将键盘输入替换为文件输入的重定向符号。,"
 问题：在C语言中，如何使用符号<来实现输入重定向？

答案：在C语言中，可以使用符号<来实现输入重定向。例如，可以将命令行prog < infile改为prog < infile，这样程序prog将从输入文件infile中读取字符，而不是从键盘读取字符。","
 ______是一种可以将键盘输入替换为文件输入的重定向符号。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数
int putchar(int)
用于输出数据。putchar(c)将字符 c 送至标准输出上，在默认情况下，标准输出为屏幕显示。如果没有发生错误， 则函数 putchar 将返同输出的字符； 如果发生了错误，则返回 EOF。 同样，通常情况下， 也可以使用“ >输出文件名”的格式将输出重定向到某个文件中。例如，
如果程序 prog 调用了函数 putchar，那么命令行
prog > 输出文件名
将把程序 prog 的输出从标准输出设备重定向到文件中。如果系统支持管道，那么命令行
prog | anotherprog
将把程序 prog 的输出从标准输出通过管道重定向到程序 anotherprog 的标准输入中。",______函数用于输出数据。,"
 以下是一道根据所给文本的填空题：

函数 int putchar(int c) 用于输出数据。putchar(c)将字符 c 送至标准输出上，在默认情况下，标准输出为屏幕显示。如果没有发生错误，则函数 putchar 将返同输出的字符； 如果发生了错误，则返回 EOF。同样，通常情况下，也可以使用“ > 输出文件名”的格式将输出重定向到某个文件中。例如，如果程序 prog 调用了函数 putchar，那么命令行 prog > 输出文件名 将把程序 prog 的输出从标准输出设备重定向到文件中。如果系统支持管道，那么命令行 prog | anotherprog 将把程序 prog 的输出从标准输出通过管道重定向到程序 anotherprog 的标准输入中。

【答案】 int putchar(int c) 用于输出数据。putchar(c)将字符 c 送至标准输出上，在默认情况下，标准输出为屏幕显示。如果没有发生错误，则函数 putchar 将返同输出的字符； 如果发生了错误，则返回 EOF。同样，通常情况下，也可以使用“ > 输出文件名”的格式将输出重定向到某个文件中。例如，如果程序 prog 调用了函数 putchar，那么命令行 prog > 输出文件名 将把程序 prog 的输出从标准输出设备重定向到文件中。如果系统支持管道，那么命令行 prog | anotherprog 将把程序 prog 的输出从标准输出通过管道重定向到程序 anotherprog 的标准输入中。","
 ______函数用于输出数据。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数 printf 也向标准输出设备上输出数据。我们在程序中可以交叉调用函数 putchar 和 printf，输出将按照函数调用的先后顺序依次产生。
使用输入/输出库函数的每个源程序文件必须在引用这些函数之前包含下列语句
#include <stdio.h>
当文件名用一对尖括号<和>括起来时，预处理器将在由具体实现定义的有关位置中查找指定 的文件（例如，在 UNIX 系统中，文件一般放在目录/usr/include 中）。",______函数向标准输出设备上输出数据。,"
 下面是一个根据题目所给文本内容出的填空题:

在 C 语言程序中,使用交叉调用函数 putchar 和 printf 输出数据时,输出将按照函数调用的先后顺序依次产生。使用输入/输出库函数的每个源程序文件必须在引用这些函数之前包含以下语句:

```c
#include <stdio.h>
```

当文件名用一对尖括号 `<` 和 `>` 括起来时,预处理器将在由具体实现定义的有关位置中查找指定的文件(例如,在 UNIX 系统中,文件一般放在目录 `/usr/include` 中)。

空格处应填入:

 putchar( ) 和 printf( ) 调用的顺序是 __ __ 。

答案:

先 putchar( ),后 printf( )。","
 ______函数向标准输出设备上输出数据。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
许多程序只从一个输入流中读取数据，并且只向一个输出流中输出数据。对于这样的程序，只需要使用函数 getchar、putchar 和 printf 实现输入/输出即可，并且对程序来说已经足够了。特别是， 如果通过重定向将一个程序的输出连接到另一个程序的输入，仅仅使用这些函数就足够了。",______程序通常只从一个输入流中读取数据，并且只向一个输出流中输出数据。,"
 下面是针对该文本内容的填空题：

许多程序只从一个输入流中读取数据，并且只向一个输出流中输出数据。对于这样的程序，只需要使用函数______、______和______实现输入/输出即可，并且对程序来说已经足够了。特别是， 如果通过重定向将一个程序的输出连接到另一个程序的输入，仅仅使用这些函数就足够了。

答案：getchar、putchar 和 printf","
 ______程序通常只从一个输入流中读取数据，并且只向一个输出流中输出数据。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#include <stdio.h>
#include <ctype.h>
main() /* lower: convert input to lower case*/
{
int c
while ((c = getchar()) != EOF)
putchar(tolower(c));
return 0;
}",______是用来将输入转换为小写的函数。,"
 题目：在上述C语言代码中，将字符串""Hello World!""转换为小写并输出，需要使用以下哪个函数？

A. getchar()
B. tolower()
C. putchar()
D. EOF","
 ______是用来将输入转换为小写的函数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数 tolower 在头文件<ctype.h>中定义，它把大写字母转换为小写形式，并把其字符原样返回。我们在前面提到过，头文件<stdio.h>中的 getchar 和 putchar“函数 ” 以及<ctype.h>中的 tolower“函数”一般都是宏，这样就避免了对每个字符都进行函数调用的开销。我们将在 8.5 节介绍它们的实现方法。无论<ctype.h>中的函数在给定的机器上是如何实现的，使用这些函数的程序都不必了解字符集的知识。",______函数在头文件<ctype.h>中定义，它把大写字母转换为小写形式，并把其字符原样返回。,"
 函数 tolower 在头文件<ctype.h>中定义，它把大写字母转换为小写形式，并把其字符原样返回。我们在前面提到，头文件<stdio.h>中的 getchar 和 putchar“函数”以及<ctype.h>中的 tolower“函数”一般都是宏，这样就避免了对每个字符都进行函数调用的开销。我们将在 8.5 节介绍它们的实现方法。无论<ctype.h>中的函数在给定的机器上是如何实现的，使用这些函数的程序都不必了解字符集的知识。

填空题：函数 tolower 在头文件<ctype.h>中定义，它把大写字母转换为小写形式，并把其字符原样返回。我们在前面提到，头文件<stdio.h>中的 getchar 和 putchar“函数”以及<ctype.h>中的 tolower“函数”一般都是宏，这样就避免了对每个字符都进行函数调用的开销。我们将在 8.5 节介绍它们的实现方法。无论<ctype.h>中的函数在给定的机器上是如何实现的，使用这些函数的程序都不必了解字符集的知识。

【答案】函数 tolower 在头文件<ctype.h>中定义，它把大写字母转换为小写形式，并把其字符原样返回。我们在前面提到，头文件<stdio.h>中的 getchar 和 putchar“函数”以及<ctype.h>中的 tolower“函数”一般都是宏，这样就避免了对每个字符都进行函数调用的开销。我们将在 8.5 节介绍它们的实现方法。无论<ctype.h>中的函数在给定的机器上是如何实现的，使用这些函数的程序都不必了解字符集的知识。","
 ______函数在头文件<ctype.h>中定义，它把大写字母转换为小写形式，并把其字符原样返回。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
输出函数 printf 将内部数值转换为字符的形式。
前面的有关章节中已经使用过该函数。下面只讲述该函数最典型的用法，附录 B 中给出了该函数完整的描述。
int printf(char *format, arg1, arg2, ...);
函数 printf 在输出格式 format 的控制下，将其参数进行转换与格式化，并在标准输出设 备上打印出来。它的返回值为打印的字符数。",______函数将内部数值转换为字符的形式。,"
 下面是一个关于 printf 函数的填空题：

int printf(char *format, arg1, arg2,...);
函数 printf 在输出格式 format 的控制下，将其参数进行转换与格式化，并在标准输出设备上打印出来。它的返回值为打印的字符数。

【题目】
使用 printf 函数输出以下内容：

整数 123 加减运算 456 等于 579","
 ______函数将内部数值转换为字符的形式。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
格式字符串包含两种类型的对象：普通字符和转换说明。在输出时， 普通字符将原样不 动地复制到输出流中，而转换说明并不直接输出到输出流中，而是用于控制 printf 中参数 的转换和打印， 每个转换说明都由一个百分号字符（即%）开始， 并以一个转换字符结束。在 字符%和转换字符中间可能依次包含下列组成部分：
.      负号，用于指定被转换的参数按照左对齐的形式输出。
.     数，用于指定最小字段宽度。转换后的参数将打印不小于最小字段宽度的字段。如 果有必要，字段左边（ 如果使用左对齐的方式， 则为右边 ）多余的字符位置用空格 填充以保证最小字段宽。
.      小数点，用于将字段宽度和精度分开。
.      数，用于指定精度，即指定字符串中要打印的最大字符数、浮点数小数点后的位数、 整型最少输出的数字数目。
.      字母 h 或 l，字母 h 表不将整数作为 short 类型打印， 字母 l 表示将整数作为 long 类型打印。",______是格式字符串中的两种类型的对象。,"或者百分数的百分位数。

下面是一段程序，它使用格式字符串打印一个整数和一个浮点数：

```c
#include <stdio.h>

int main()
{
    int a = 12345;
    float b = 3.14;
    printf(""整数: %d\n浮点数: %.2f\n"", a, b);
    return 0;
}
```

请根据上述文本，将下面的代码中的空缺部分用正确的百分号、数和字符填入。

```c
#include <stdio.h>

int main()
{
    int a = 12345;
    float b = 3.14;
    printf(""整数: %d\n浮点数: %.2f\n"", a, b);
    return 0;
}
```

对于整数部分，我们知道普通字符将原样不动地复制到输出流中，所以不需要填入任何百分号、数或字符。对于浮点数部分，我们需要指定最小字段宽度、精度和小数点的位置。

首先，我们指定最小字段宽度为2，即%.2f，这意味着浮点数的小数部分最多只能输出2位。然后，我们需要指定精度为2，即浮点数小数点后的位数，这里我们不需要填入百分号、数或字符。最后，我们指定小数点的位置，它位于字段宽度和精度之间。因此，代码应该填入如下内容：

```c
printf(""整数: %d\n浮点数: %.2f\n"", a, b);
printf(""浮点数: %.2f\n"", b);
```","
 ______是格式字符串中的两种",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在转换说明中， 宽度或精度可以用星号*表示， 这时，宽度或精度的值通过转换下一参数 （必须为 int 类型） 来计算。例如，为了从字符串 s 中打印最多 max 个字符，可以使用下列 语句：
printf(""%.*s"", max, s);",______可以用星号*表示，在这种情况下，它的值通过转换下一参数来计算。,"
 问题：在上述文本中，为了从字符串 s 中打印最多 max 个字符，可以使用下列哪个语句？

A. printf(""%.*s"", max, s);
B. printf(""%s"", max, s);
C. printf(""%.*s"", max, s);
D. printf(""%*s"", max, s);","
 ______可以用星号*表示，在这种情况下，它的值通过转换下一参数来计算。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
前面的章节中已经介绍过大部分的格式转换， 但没有介绍与字符串相关的精度。下表说 明了在打印字符串""hello, world""（12 个字符）时根据不同的转换说明产生的不同结果。 我们在每个字段的左边和右边加上冒号，这样可以清晰地表示出字段的宽度。
:%s:hello, world:
:%10s:hello, world:
:%.10s:hello, wor:
:%-10s:hello, world:
:%.15s:hello, world:
:%-15s:hello, world：
:%15.10s:hello, wor:
:%-15.10s:hello, wor:",______与字符串相关的精度。,"
 以下是一道根据给定文本的填空题：

在给定的格式转换表中，当打印字符串""hello, world""（12个字符）时，:`%s:`产生的结果是：

答案：3个字符","
 ______与字符串相关的精度。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
注意：函数 printf 使用第一个参数判断后面参数的个数及类型。如果参数的个数不够 或者类型错误，则将得到错误的结果。请注意下面两个函数调用之间的区别：
printf(s); /* FAILS if s contains % */
printf(""%s"", s);/* SAFE */",______函数使用第一个参数判断后面参数的个数及类型。,"
 请根据以下文本内容出一道填空题:

注意：函数 printf 使用第一个参数判断后面参数的个数及类型。如果参数的个数不够 或者类型错误，则将得到错误的结果。请注意下面两个函数调用之间的区别：
printf(s); /* FAILS if s contains % */
printf(""%s"", s);/* SAFE */

题目：在以下两个函数调用中，哪个是安全的，哪个会失败？

答案：\_\_\_\_\_\_\_\_\_\_\_\_\_\_ safe, \_\_\_\_\_\_\_\_\_\_\_\_\_\_ fails","
 ______函数使用第一个参数判断后面参数的个数及类型。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数 sprintf 执行的转换和函数 printf 相同，但它将输出保存到一个字符串中： int sprintf(char *string, char *format, arg1, arg2, ...);
sprintf 函数和 printf 函数一样，按照 format 格式格式化参数序列 arg1、arg2、…， 但它将输出结果存放到 string 中， 而不是输出到标准输出中。当然， string 必须足够大以 存放输出结果。",______函数将输出保存到一个字符串中。,"
 请根据以下文本内容出一道填空题：

函数 sprintf 执行的转换和函数 printf 相同，但它将输出保存到一个字符串中。sprintf 函数和 printf 函数一样，按照 format 格式化参数序列 arg1、arg2、…， 但它将输出结果存放到 string 中， 而不是输出到标准输出中。当然， string 必须足够大以 存放输出结果。

空格部分应填写：sprintf 函数将输出结果存放到 \_\_\_\_\_\_\_\_\_\_\_ 中。","
 ______函数将输出保存到一个字符串中。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
本节以实现函数 printf 的一个最简单版本为例，介绍如何以可移植的方式编写可处理变长参数表的函数。因为我们的重点在于参数的处理，所以，函数 minprintf 只处理格式字符串和参数，格式转换则通过调用函数 printf 实现。",______函数的一个最简单版本是什么？,"
 以下是一道填空题:

本节以实现函数 printf 的一个最简单版本为例,介绍如何以可移植的方式编写可处理变长参数表的函数。因为我们的重点在于参数的处理,所以,函数 minprintf 只处理格式字符串和参数,格式转换则通过调用函数 printf 实现。

空格处应填:minprintf","
 ______函数的一个最简单版本是什么？",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数 printf 的正确声明形式为：
int printf(char *fmt, ...)
其中，省略号表示参数表中参数的数量和类型是可变的。省略号只能出现在参数表的尾部。因为 minprintf 函数不需要像 printf 函数一样返回实际输出的字符数，因此，我们将它声明为下列形式：
void minprintf(char *fmt, ...)
编写函数 minprintf 的关键在于如何处理一个甚至连名字都没有的参数表。标准头文件 <stdarg.h>中包含一组宏定义，它们对如何遍历参数表进行了定义。该头文件的实现因不同的机器而不同，但提供的接口是一致的。","______的正确声明形式为int printf(char *fmt, ...)","
 函数 minprintf 的正确声明形式为：
void minprintf(char *fmt,...)
其中，省略号表示参数表中参数的数量和类型是可变的。省略号只能出现在参数表的尾部。因为 minprintf 函数不需要像 printf 函数一样返回实际输出的字符数，因此，我们将它声明为下列形式：
void minprintf(char *fmt,...)
编写函数 minprintf 的关键在于如何处理一个甚至连名字都没有的参数表。标准头文件 <stdarg.h>中包含一组宏定义，它们对如何遍历参数表进行了定义。该头文件的实现因不同的机器而不同，但提供的接口是一致的。","
 ______的正确声明形式为int printf(char *fmt,...)",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
va_list 类型用于声明一个变量，该变量将依次引用各参数。在函数 minprintf 中，我们将该变量称为 ap，意思是“参数指针”。宏 va_start 将 ap 初始化为指向第一个无名参数的指针。在使用ap 之前，该宏必须被调用一次。参数表必须至少包括一个有名参数， va_start 将最后一个有名参数作为起点。每次调用 va_arg，该函数都将返回一个参数，并将 ap 指向下一个参数。va_arg 使用 一个类型名来决定返回的对象类型、指针移动的步长。最后，必须在函数返回之前调用 va_end，以完成一些必要的清理工作。",______类型用于声明一个变量，该变量将依次引用各参数。,"
 下面是一个关于 va_list 类型和 minprintf 函数的填空题：

在 minprintf 函数中，va_list 类型用于声明一个变量，该变量将依次引用各参数。我们将该变量称为 ______，意思是“参数指针”。宏 ______ 将 ap 初始化为指向第一个无名参数的指针。在使用 ap 之前，该宏必须被调用一次。参数表必须至少包括一个有名参数，______ 将最后一个有名参数作为起点。每次调用 ______，该函数都将返回一个参数，并将 ap 指向下一个参数。______ 使用一个类型名来决定返回的对象类型、指针移动的步长。最后，必须在函数返回之前调用 ______，以完成一些必要的清理工作。

答案：在 minprintf 函数中，va_list 类型用于声明一个变量，该变量将依次引用各参数。我们将该变量称为 ap，意思是“参数指针”。宏 va_start 将 ap 初始化为指向第一个无名参数的指针。在使用 ap 之前，该宏必须被调用一次。参数表必须至少包括一个有名参数，va_start 将最后一个有名参数作为起点。每次调用 va_arg，该函数都将返回一个参数，并将 ap 指向下一个参数。va_arg 使用一个类型名来决定返回的对象类型、指针移动的步长。最后，必须在函数返回之前调用 va_end，以完成一些必要的清理工作。","
 ______类型用于声明一个变量，该变量将依次引用各参数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
基于上面这些讨论， 我们实现的简化 printf 函数如下所示：
#include <stdarg.h>
/* minprintf: minimal printf with variable argument list */
void minprintf(char *fmt, ...)
{
va_list ap; /* points to each unnamed arg in turn */
char *p, *sval;
int ival;
double dval;
va_start(ap, fmt); /* make ap point to 1st unnamed arg */
for (p = fmt; *p; p++) {
if (*p != '%') {
putchar(*p);
continue;
}
switch (*++p) {
case 'd':
ival = va_arg(ap, int);
printf(""%d"", ival);
break;
case 'f':
dval = va_arg(ap, double);
printf(""%f"", dval);
break;
case 's':
for (sval = va_arg(ap, char *); *sval; sval++)
putchar(*sval);
break;
default:
putchar(*p);
break;
}
}
va_end(ap); /* clean up when done */
}",______函数的参数包括一个格式字符串和可变数量的参数。,"char *); *sval; sval++) {
putchar(*sval);
}
break;
case 'u':
sval = va_arg(ap, unsigned int);
printf(""%u"", sval);
break;
case 'x':
sval = va_arg(ap, unsigned int);
printf(""%x"", sval);
break;
default:
fprintf(stderr, ""Invalid format character: %c\n"", *p);
break;
}
va_end(ap);
}

下面哪个选项不是 minprintf 函数的合法用法?

A. minprintf(""The number is %d"", 10)
B. minprintf(""The number is %d"", 10.5)
C. minprintf(""The number is %d"", 10)
D. minprintf(""The number is %d"", 10, 2)","
 ______函数的参数包括一个格式字符串和可",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
输入函数 scanf 对应于输出函数 printf，它在与后者相反的方向上提供同样的转换功 能。具有变长参数表的函数 scanf 的声明形式如下：
int scanf(char *format, ...)
scanf 函数从标准输入中读取字符序列，按照 format 中的格式说明对字符序列进行解释， 并把结果保存到其余的参数中。格式参数 format 将在接下来的内容中进行讨论。其它所有 参数都必须是指针， 用于指定经格式转换后的相应输入保存的位置。和上节讲述 printf 一 样，本节只介绍 scanf 函数最有用的一些特征，而并不完整地介绍。",______函数对应于输出函数printf，它在与后者相反的方向上提供同样的转换功能。,"
 以下是一个关于 scanf 函数的填空题：

填空题：scanf 函数与输出函数 ______ 对应，它在与后者相反的方向上提供同样的转换功能。具有变长参数表的函数 scanf 的声明形式如下：
int scanf(char *format,...)
scanf 函数从标准输入中读取字符序列，按照 format 中的格式说明对字符序列进行解释， 并把结果保存到其余的参数中。格式参数 format 将在接下来的内容中进行讨论。其它所有 参数都必须是指针， 用于指定经格式转换后的相应输入保存的位置。和上节讲述 ______ 一 样，本节只介绍 scanf 函数最有用的一些特征，而并不完整地介绍。","
 ______函数对应于输出函数printf，它在与后者相反的方向上提供同样的转换功能。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
当 scanf 函数扫描完其格式串，或者碰到某些输入无法与格式控制说明匹配的情况时，该函数将终止，同时，成功匹配并赋值的输入项的个数将作为函数值返回，所以，该函数的返回值可以用来确定已匹配的输入项的个数。如果到达文件的结尾，该函数将返回 EOF。注意，返回 EOF 与 0 是不同的， 0 表示下一个输入字符与格式串中的第一个格式说明不匹配。下一次调用 scanf 函数将从上一次转换的最后一个字符的下一个字符开始继续搜索。",______函数的返回值可以用来确定已匹配的输入项的个数。,"
 scanf函数在遇到无法与格式控制说明匹配的输入时将终止，此时成功匹配并赋值的输入项的个数作为函数的返回值。若到达文件的结尾，该函数将返回EOF。返回EOF与0是不同的，0表示下一个输入字符与格式串中的第一个格式说明不匹配。下一次调用scanf函数将从上一次转换的最后一个字符的下一个字符开始继续搜索。

填空题：scanf函数在遇到无法与格式控制说明匹配的输入时将终止，此时成功匹配并赋值的输入项的个数作为函数的______返回值。若到达文件的结尾，该函数将返回EOF。返回EOF与0是不同的，0表示下一个输入字符与格式串中的第一个格式说明不匹配。下一次调用scanf函数将从上一次转换的最后一个字符的下一个字符开始继续搜索。

答案：函数的返回值。","
 ______函数的返回值可以用来确定已匹配的输入项的个数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
另外还有一个输入函数 sscanf，它用于从一个字符串（而不是标准输入）中读取字符序列：
int sscanf(char *string, char *format, arg1, arg2, ...)
它按照格式参数format 中规定的格式扫描字符串 string，并把结果分别保存到 arg1、 arg2、…这些参数中。这些参数必须是指针。",______函数用于从一个字符串中读取字符序列，并按照指定的格式参数将结果保存到指定的参数中。,"
 下面是一道填空题:

int sscanf(char \*string, char \*format, \_\_\_\_, \_\_\_\_,...)
它按照格式参数format 中规定的格式扫描字符串 string,并把结果分别保存到 \_\_\_\_、\_\_\_\_这些参数中。这些参数必须是指针。","
 ______函数用于从一个字符串中读取字符序列，并按照指定的格式参数将结果保存到指定的参数中。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
格式串通常都包含转换说明，用于控制输入的转换。格式串可能包含下列部分：
.空格或制表符，在处理过程中将被忽略。
.普通字符（不包括%），用于匹配输入流中下一个非空白符字符。
.转换说明，依次由一个%、一个可选的赋值禁止字符*、一个可选的数值（指定最大 字段宽度）、一个可选的 h、l 或 L 字符（指定目标对象的宽度）以及一个转换字符组成。",______的组成部分包括一个%、一个可选的赋值禁止字符*、一个可选的数值（指定最大字段宽度）、一个可选的 h、l 或 L 字符以及一个转换字符。,"
 以下是一道填空题:

在格式串中,普通字符用于匹配输入流中下一个非空白符字符,空格和制表符在处理过程中将被忽略。转换说明依次由一个%、一个可选的赋值禁止字符*、一个可选的数值(指定最大字段宽度)、一个可选的 h、l 或 L 字符(指定目标对象的宽度)以及一个转换字符组成。下面哪个选项是正确的?

A. 格式串中普通字符用于匹配输入流中下一个非空白符字符,空格和制表符在处理过程中将被忽略。
B. 格式串中普通字符用于匹配输入流中下一个非空白符字符,空格和制表符在处理过程中将被忽略,转换说明依次由一个%、一个可选的赋值禁止字符*、一个可选的数值(指定最大字段宽度)、一个可选的 h、l 或 L 字符(指定目标对象的宽度)以及一个转换字符组成。
C. 格式串中普通字符用于匹配输入流中下一个非空白符字符,空格和制表符在处理过程中将被忽略,转换说明依次由一个%和一个可选的赋值禁止字符*、一个可选的数值(指定最大字段宽度)、一个可选的 h、l 或 L 字符(指定目标对象的宽度)以及一个转换字符组成。
D. 格式串中普通字符用于匹配输入流中下一个非空白符字符,空格和制表符在处理过程中将被忽略,转换说明依次由一个%和一个可选的数值(指定最大字段宽度)、一个可选的 h、l 或 L 字符(指定目标对象的宽度)以及一个转换字符组成。","
 ______的组成部分包括一个%、一个可选的赋值禁止字符*、一个可选的数值（指定最大字段宽度）、一个可选的 h、l 或 L 字符以及一个转换字符。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
转换说明控制下一个输入字段的转换。一般来说，转换结果存放在相应的参数指向的变量中。但是，如果转换说明中有赋值禁止字符*，则跳过该输入字段， 不进行赋值。输入字段 定义为一个不包括空白符的字符串，其边界定义为到下一个空白符或达到指定的字段宽度。 这表明scanf 函数将越过行边界读取输入，因为换行符也是空白符。（空白符包括空格符、 横向制表符、换行符、回车符、纵向制表符以及换页符）。",______是指一个不包括空白符的字符串，其边界定义为到下一个空白符或达到指定的字段宽度。,"
 转换说明控制下一个输入字段的转换。一般来说，转换结果存放在相应的参数指向的变量中。但是，如果转换说明中有赋值禁止字符**，则跳过该输入字段， 不进行赋值。输入字段定义为一个不包括空白符的字符串，其边界定义为到下一个空白符或达到指定的字段宽度。这表明scanf函数将越过行边界读取输入，因为换行符也是空白符。（空白符包括空格符、横向制表符、换行符、回车符、纵向制表符以及换页符）。

填空题：转换说明中**表示赋值禁止，那么在这种情况下，程序不会对输入字段进行赋值操作。","
 ______是指一个不包括空白符的字符串，其边界定义为到下一个空白符或达到指定的字段宽度。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
转换字符指定对输入字段的解释。对应的参数必须是指针，这也是 C 语言通过值调用语 义所要求的。转换说明 d、i、o、u 及 x 的前面可以加上字符 h 或 l。前缀 h 表明参数表的相应参数 是一个指向 short类型而非 int类型的指针，前缀 l表明参数表的相应参数是一个指向 long 类型的指针。类似地，转换说明 e、f 和 g 的前面也可以加上前缀 l，它表明参数表的相应参 数是一个指向 double 类型而非 float 类型的指针。",______是C语言中用来指定对输入字段解释的转换字符。,"
 转换字符指定对输入字段的解释。对应的参数必须是指针，这也是 C 语言通过值调用语义所要求的。转换说明 d、i、o、u 及 x 的前面可以加上字符 h 或 l。前缀 h 表明参数表的相应参数 是一个指向 short 类型而非 int 类型的指针，前缀 l 表明参数表的相应参数是一个指向 long 类型的指针。类似地，转换说明 e、f 和 g 的前面也可以加上前缀 l，它表明参数表的相应参数是一个指向 double 类型而非 float 类型的指针。

填空题：在转换说明中，若参数前面加上字符 h，则表示该参数是一个____类型的指针。

答案：short","
 ______是C语言中用来指定对输入字段解释的转换字符。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
来看第一个例子。我们通过函数 scanf 执行输入转换来改写第 4 章中的简单计算器程序，如下所示：
#include <stdio.h>
main() /* rudimentary calculator */
{
double sum, v;
sum = 0;
while (scanf(""%lf"", &v) == 1)
printf(""\t%.2f\n"", sum += v);
return 0;
}",______函数用于执行输入转换。,"
 请根据上述文本内容，将下面的代码中的空格填入正确的值。

#include <stdio.h>
main() /* rudimentary calculator */
{
double sum, v;
sum = 0;
while (scanf(""%lf"", &v) == 1)
printf(""\t%.2f\n"", sum += v);
return 0;
}

空格处应填入的值是：

while (scanf(""%lf"", &v) == 1)","
 ______函数用于执行输入转换。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
假设我们要读取包含下列日期格式的输入行：
25 Dec 1988
相应的 scanf 语句可以这样编写：
int day, year;
char monthname[20];
scanf(""%d %s %d"", &day, monthname, &year);
因为数组名本身就是指针，所以， monthname 的前面没有取地址运算符&。",______的前面没有取地址运算符&。,"
 请根据以下文本内容出一道填空题：

假设我们要读取包含下列日期格式的输入行：
25 Dec 1988
相应的 scanf 语句可以这样编写：
int day, year;
char monthname[20];
scanf(""%d %s %d"", &day, monthname, &year);
因为数组名本身就是指针，所以， monthname 的前面没有取地址运算符&。

填空题：
将下面的 scanf 语句中的空格替换为相应的字符，使其符合给定的日期格式：
```c
scanf(""%d %s %d"", &day, monthname, &year);
```
正确答案应如下所示：
```c
scanf(""%d %s %d"", &day, monthname, &year);
```","
 ______的前面没有取地址运算符&。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
字符字面值也可以出现在 scanf 的格式串中，它们必须与输入中相同的字符匹配。因此，我们可以使用下列 scanf 语句读入形如 mm/dd/yy 的日期数据：
int day, month, year;
scanf(""%d/%d/%d"", &month, &day, &year);
scanf 函数忽略格式串中的空格和制表符。此外， 在读取输入值时， 它将跳过空白符（空 格、制表符、换行符等等）。如果要读取格式不固定的输入，最好每次读入一行，然后再用 sscanf 将合适的格式分离出来读入。例如，假定我们需要读取一些包含日期数据的输入行， 日期的格式可能是上述任一种形式。我们可以这样编写程序：
while (getline(line, sizeof(line)) > 0) {
if (sscanf(line, ""%d %s %d"", &day, monthname, &year) == 3)
printf(""valid: %s\n"", line); /* 25 Dec 1988 form */
else if (sscanf(line, ""%d/%d/%d"", &month, &day, &year) == 3)
printf(""valid: %s\n"", line); /* mm/dd/yy form */
else
printf(""invalid: %s\n"", line); /* invalid form */
}",______可以出现在 scanf 的格式串中，它们必须与输入中相同的字符匹配。,") == 3) {
// 格式为 mm/dd/yy
// 处理日期数据
}
}

在上述代码中，我们首先使用 getline 函数读取一行输入， 然后使用 sscanf 函数尝试将其解析为日期数据。如果解析成功，我们就处理这行日期数据。注意， 在 sscanf 函数中， 我们需要为每个格式指定一个参数， 如果格式不匹配或者某一部分无法读取， sscanf 函数将返回一个非零值， 我们需要检查这些返回值来判断解析是否成功。","
 ______可以出现在 scanf 的格式串中，它们必须",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
scanf 函数可以和其它输入函数混合使用。无论调用哪个输入函数，下一个输入函数的调用将从 scanf 没有读取的第一个字符处开始读取数据。
注意， scanf 和 sscanf 函数的所有参数都必须是指针。最常见的错误是将输入语句写 成下列形式：
scanf(""%d"", n);
正确的形式应该为：
scanf(""%d"", &n);",______函数可以和其它输入函数混合使用。,"
 请根据以下文本内容完成填空题：

scanf 函数可以和其它输入函数混合使用。无论调用哪个输入函数，下一个输入函数的调用将从 scanf 没有读取的第一个字符处开始读取数据。注意， scanf 和 sscanf 函数的所有参数都必须是指针。最常见的错误是将输入语句写 成下列形式：scanf(""%d"", n); 正确的形式应该为：scanf(""%d"", &n);","
 ______函数可以和其它输入函数混合使用。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
到目前为止，我们讨论的例子都是从标准输入读取数据，并向标准输出输出数据。标准输入和标准输出是操作系统自动提供给程序访问的。接下来， 我们编写一个访问文件的程序，且它所访问的文件还没有连接到该程序。程序cat 可以用来说明该问题，它把一批命名文件串联后输出到标准输出上。 cat 可用来在屏幕上打印文件，对于那些无法通过名字访问文件的程序来说。它还可以用作通用的输入收集器。例如，下列命令行：
cat x.c y.c
将在标准输出上打印文件 x.c 和y.c 的内容。",______是操作系统自动提供给程序访问的。,"
 以下是一道根据文本内容的填空题：

标准输入和标准输出是操作系统自动提供给程序访问的，用于_______和_______。

答案：读取数据，输出数据","
 ______是操作系统自动提供给程序访问的。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
问题在于，如何设计命名文件的读取过程呢？ 换句话说，如何将用户需要使用的文件的 外部名同读取数据的语句关联起来。
方法其实很简单。在读写一个文件之前， 必须通过库函数 fopen 打开该文件。fopen 用 类似于 x.c 或y.c 这样的外部名与操作系统进行某些必要的连接和通信（我们不必关心这些 细节），并返回一个随后可以用于文件读写操作的指针。
该指针称为文件指针，它指向一个包含文件信息的结构，这些信息包括：缓冲区的位置、 缓冲区中当前字符的位置、文件的读或写状态、是否出错或是否已经到达文件结尾等等。用户不必关心这些细节，因为<stdio.h>中已经定义了一个包含这些信息的结构 FILE。在程序中只需按照下列方式声明一个文件指针即可：
FILE *fp;
FILE *fopen(char *name, char *mode);
在本例中，fp 是一个指向结构 FILE 的指针，并且， fopen 函数返回一个指向结构 FILE 的 指针。注意，FILE 像 int一样是一个类型名， 而不是结构标记。它是通过 typedef 定义的 （UNIX 系统中 fopen 的实现细节将在 8.5 节中讨论）。",______是必须通过库函数 fopen 打开文件之前的操作。,"文件信息的结构的指针，可以通过 fopen 打开文件，并通过文件指针读取数据。

填空：将以下代码中的空格替换为正确的命名文件的方式：

问题在于，如何设计命名文件的读取过程呢？ 换句话说，如何将用户需要使用的文件的 external\_name 与读取数据的语句关联起来。
方法其实很简单。在读写一个文件之前，必须通过库函数 fopen 打开该文件。fopen 用 类似于 x.c 或y.c 这样的外部名与操作系统进行某些必要的连接和通信（我们不必关心这些 细节），并返回一个随后可以用于文件读写操作的指针。
该指针称为文件指针，它指向一个包含文件信息的结构，这些信息包括：缓冲区的位置、缓冲区中当前字符的位置、文件的读或写状态、是否出错或是否已经到达文件结尾等等。用户不必关心这些细节，因为<stdio.h>中已经定义了一个包含这些信息的结构 FILE。在程序中只需按照下列方式声明一个文件指针即可：
FILE *fp;
FILE *fopen(char *name, char *mode);
在本例中，fp 是一个指向文件信息的结构的指针，可以通过 fopen 打开文件，并通过文件指针读取数据。

填空：将以下代码中的空格替换为正确的命名文件的方式：

1. 打开名为 ""example.txt"" 的文件
2. 读取文件中的数据
3. 关闭文件

FILE \_\_\_\_(""example.txt"");

1. 读取文件中的数据
2. 关闭文件","
 ______是必须通过库函数 fopen 打开",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在程序中，可以这样调用 fopen 函数：
fp = fopen(name, mode);
fopen 的第一个参数是一个字符串，它包含文件名。第二个参数是访问模式，也是一个字符 串， 用于指定文件的使用方式。允许的模式包括：读（“r”）、写（“w”）及追加（“a”）。某些 系统还区分文本文件和二进制文件，对后者的访问需要在模式字符串中增加字符“b”。",______函数的第一个参数是一个字符串，它包含文件名。,"
 请根据以下文本内容，将字符串 name 和访问模式 mode 分别填入空白处：

在程序中，可以这样调用 fopen 函数：
fp = fopen(name, mode);
fopen 的第一个参数是一个字符串，它包含文件名。第二个参数是访问模式，也是一个字符串， 用于指定文件的使用方式。允许的模式包括：读（“r”）、写（“w”）及追加（“a”）。某些 系统还区分文本文件和二进制文件，对后者的访问需要在模式字符串中增加字符“b”。

答案：
fp = fopen(""example.txt"", ""r"");","
 ______函数的第一个参数是一个字符串，它包含文件名。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
如果打开一个不存在的文件用于写或追加，该文件将被创建（如果可能的话）。当以写方式打开一个已存在的文件时，该文件原来的内容将被覆盖。但是，如果以追加方式打开一个文件，则该文件原来的内容将保留不变。读一个不存在的文件会导致错误，其它一些操作也可能导致错误，比如试图读取一个无读取权限的文件。如果发生错误，fopen 将返回 NULL。",______操作可能导致错误，比如试图读取一个无读取权限的文件。,"
 以下哪个选项可以正确描述 opens() 函数的行为，当以写方式打开一个不存在的文件时？

A. 如果文件不存在，则创建并返回文件指针。
B. 如果文件不存在，则返回错误。
C. 如果文件存在，则返回文件指针。
D. 如果文件存在，则覆盖原有内容并返回文件指针。","
 ______操作可能导致错误，比如试图读取一个无读取权限的文件。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
文件被打开后，就需要考虑采用哪种方法对文件进行读写。有多种方法可供考虑，其中， getc 和 putc 函数最为简单。getc 从文件中返回下一个字符，它需要知道文件指针，以确定对哪个文件执行操作：
int getc(FILE *fp)
getc 函数返回 fp 指向的输入流中的下一个字符。如果到达文件尾或出现错误， 该函数将返 回 EOF，
putc 是一个输出函数，如下所示：
int putc(int c, FILE *fp)
该函数将字符 c 写入到 fp 指向的文件中，并返回写入的字符。如果发生错误，则返回 EOF。 类似于 getchar 和 putchar，getc 和 putc 是宏而不是函数。",______函数从文件中返回下一个字符，它需要知道文件指针，以确定对哪个文件执行操作。,"
 下面是填空题：

文件被打开后，就需要考虑采用哪种方法对文件进行读写。有多种方法可供考虑，其中，______和______函数最为简单。getc 从文件中返回下一个字符，它需要知道文件指针，以确定对哪个文件执行操作：","
 ______函数从文件中返回下一个字符，它需要知道文件指针，以确定对哪个文件执行操作。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
启动一个 C 语言程序时，操作系统环境负责打开 3 个文件，并将这 3 个文件的指针提供给该程序。这 3 个文件分别是标准输入、标准输出和标准错误，相应的文件指针分别为 stdin、 stdout 和stderr，它们在<stdio.h>中声明。在大多数环境中，stdin 指向键盘，而stdout 和 stderr 指向显示器。我们从 7.1 节的讨论中可以知道， stdin 和 stdout 可以被重定向到文件或管道。",______是C语言程序启动时由操作系统环境提供的三个文件指针之一，通常指向键盘。,"
 下面是填空题的解答：

启动一个 C 语言程序时，操作系统环境负责打开 3 个文件，并将这 3 个文件的指针提供给该程序。这 3 个文件分别是标准输入（stdin）、标准输出（stdout）和标准错误（stderr），相应的文件指针分别为 __stdin__、__stdout__ 和 __stderr__，它们在<stdio.h>中声明。在大多数环境中，stdin 指向键盘，而stdout 和 stderr 指向显示器。我们从 7.1 节的讨论中可以知道，stdin 和 stdout 可以被重定向到文件或管道。","
 ______是C语言程序启动时由操作系统环境提供的三个文件指针之一，通常指向键盘。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
getchar 和 putchar 函数可以通过 getc、putc、stdin 及 stdout 定义如下：
#define getchar() getc(stdin)
#define putchar(c)putc((c), stdout)","______函数可以通过 getc、putc、stdin 及 stdout 定义如下： #define getchar() getc(stdin) #define putchar(c)putc((c), stdout)","
 以下是一道填空题：

getchar 和 putchar 函数可以通过 getc、putc、stdin 及 ______ 定义如下：
#define ______() getc(stdin)
#define ______(c)putc((c), stdout)","
 ______函数可以通过 getc、putc、stdin 及 stdout 定义如下： #define getchar() getc(stdin) #define putchar(c)putc((c), stdout)",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
对于文件的格式化输入或输出，可以使用函数 fscanf 和 fprintf。它们与 scanf 和 printf 函数的区别仅仅在于它们的第一个参数是一个指向所要读写的文件的指针， 第二个参 数是格式串。如下所示：
int fscanf(FILE *fp, char *format, ...)
int fprintf(FILE *fp, char *format, ...)",______函数可以用于文件的格式化输入。,"
 请根据以下文本内容出一道填空题:

对于文件的格式化输入或输出，可以使用函数 fscanf 和 fprintf。它们与 scanf 和 printf 函数的区别仅仅在于它们的第一个参数是一个指向所要读写的文件的指针， 第二个参数是格式串。如下所示：
int fscanf(FILE *fp, char *format,...) 
int fprintf(FILE *fp, char *format,...)","
 ______函数可以用于文件的格式化输入。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
掌握这些预备知识之后，我们现在就可以编写出将多个文件连接起来的 cat 程序了。该 程序的设计思路和其它许多程序类似。如果有命令行参数，参数将被解释为文件名，并按顺 序逐个处理。如果没有参数，则处理标准输入。
#include <stdio.h>
/* cat: concatenate files, version 1 */
main(int argc, char *argv[])
{
FILE *fp;
void filecopy(FILE *, FILE *)
if (argc == 1) /* no args; copy standard input */
filecopy(stdin, stdout);
else
while(--argc > 0)
if ((fp = fopen(*++argv, ""r"")) == NULL) {
printf(""cat: can't open %s\n, *argv);
return 1;
} else {
filecopy(fp, stdout);
fclose(fp);
}
return 0;
/* filecopy:copy file ifp to file ofp */
void filecopy(FILE *ifp, FILE *ofp)
{
int c;
while ((c = getc(ifp)) != EOF)
putc(c, ofp);
}",______程序的设计思路和其它许多程序类似。,"copy function */
void filecopy(FILE *, FILE *):
if (feof(fp) == 0) {
printf(""cat: eof in %s\n"", filename);
return;
}
fseek(fp, 0, SEEK_SET);
fwrite(buffer, 1, sizeof(char), fp);
fseek(fp, 0, SEEK_CUR);
fwrite(buffer, 1, sizeof(char), fp);
}
}

 这道题的答案是：文件名。","
 ______程序的设计思路和其它许多",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
文件指针 stdin 与 stdout 都是 FILE *类型的对象。但它们是常量，而非变量。因此不能对它们赋值。
函数：int fclose(FILE *fp)
执行和 fopen 相反的操作，它断开由 fopen 函数建立的文件指针和外部名之间的连接，并 释放文件指针以供其它文件使用。因为大多数操作系统都限制了一个程序可以同时打开的文 件数，所以，当文件指针不再需要时就应该释放，这是一个好的编程习惯，就像我们在 cat 程序中所做的那样。对输出文件执行fclose 还有另外一个原因：它将把缓冲区中由 putc 函数正在收集的输出写到文件中。当程序正常终止时，程序会自动为每个打开的文件调用 fclose 函数。（如果不需要使用 stdin 与 stdout，可以把它们关闭掉。也可以通过库函数 freopen 重新指定它们。)",______是 FILE *类型的对象，但它们是常量，而非变量。因此不能对它们赋值。,"
 以下是一道填空题:

文件指针 $\text{stdin}$ 和 $\text{stdout}$ 都是 $\text{FILE *}$ 类型的对象。但它们是常量，而非变量。因此不能对它们赋值。关于文件指针 $\text{fp}$，以下哪个描述是正确的？

A. 它可以被赋值为 $\text{FILE *}$ 类型的任意对象。
B. 它是一个常量，不能被赋值。
C. 它可以被赋值为 $\text{FILE *}$ 类型的指针，但不能被赋值。
D. 它是一个常量，可以被赋值为 $\text{FILE *}$ 类型的指针。","
 ______是 FILE *类型的对象，但它们是常量，而非变量。因此不能对它们赋值。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
cat 程序的错误处理功能并不完善。问题在于，如果因为某种原因而造成其中的一个文件无法访问，相应的诊断信息要在该连接的输出的末尾才能打印出来。当输出到屏幕时，这种处理方法尚可以接受，但如果输出到一个文件或通过管道输出到另一个程序时，就无法接受了。
为了更好地处理这种情况，另一个输出流以与 stdin 和 stdout 相同的方式分派给程序， 即 stderr。即使对标准输出进行了重定向，写到 stderr 中的输出通常也会显示在屏幕上。",______程序的错误处理功能并不完善。,"
 下面是针对上述文本的填空题：

cat 程序的错误处理功能并不完善。问题在于，如果因为某种原因而造成其中的一个文件无法访问，相应的诊断信息要在该连接的输出的末尾才能打印出来。当输出到屏幕时，这种处理方法尚可以接受，但如果输出到一个文件或通过管道输出到另一个程序时，就无法接受了。为了更好地处理这种情况，另一个输出流以与 stdin 和 stdout 相同的方式分派给程序， 即 ______。即使对标准输出进行了重定向，写到 ______ 中的输出通常也会显示在屏幕上。

答案：stderr    stderr","
 ______程序的错误处理功能并不完善。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
下面我们改写 cat 程序，将其出错信息写到标准错误文件上。
#include <stdio.h>
/* cat: concatenate files, version 2 */
main(int argc, char *argv[])
{
FILE *fp;
void filecopy(FILE *, FILE *);
char *prog = argv[0];/* program name for errors */
if (argc == 1 ) /* no args; copy standard input */
filecopy(stdin, stdout);}
else
while (--argc > 0)
if ((fp = fopen(*++argv, ""r"")) == NULL) {
fprintf(stderr, ""%s: can't open %s\n"",
prog, *argv);
exit(1);
} else {
filecopy(fp, stdout);
fclose(fp);
}
if (ferror(stdout)) {
fprintf(stderr, ""%s: error writing stdout\n"", prog);
exit(2);
}
exit(0);",______程序的主要功能是将文件连接起来。,"reading %s\n"",
prog, argv[argc-1]);
exit(1);
}
}
void filecopy(FILE *, FILE *){
char c, *s;
while ((c = fgetc())!= EOF) {
f_putc(c, stdout);
s = (char*) malloc(sizeof(c));
memc(s, &c, sizeof(c));
}
}

在这段代码中，程序会将其出错信息写到标准错误文件上。 这主要是因为程序在哪个函数中写入标准错误文件？ 

答案：在 fprintf() 函数中。","
 ______程序的主要功能是将文件连接起来",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
该程序通过两种方式发出出错信息。首先， 将fprintf 函数产生的诊断信息输出到 stderr 上， 因此诊断信息将会显示在屏幕上， 而不是仅仅输出到管道或输出文件中。诊断信 息中包含 argv[0]中的程序名，因此，当该程序和其它程序一起运行时，可以识别错误的来 源。
其次， 程序使用了标准库函数 exit，当该函数被调用时， 它将终止调用程序的执行。任 何调用该程序的进程都可以获取 exit 的参数值， 因此， 可通过另一个将该程序作为子进程的 程序来测试该程序的执行是否成功。按照惯例， 返回值 0 表示一切正常，而非 0 返回值通常 表示出现了异常情况。exit 为每个已打开的输出文件调用 fclose 函数， 以将缓冲区中的所 有输出写到相应的文件中。",______的作用是将终止调用程序的执行。,"
 以下哪个函数可以用于测试程序的执行是否成功？

A. fprintf
B. exit
C. fclose
D. argv[]","
 ______的作用是将终止调用程序的执行。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在主程序 main 中，语句 return expr 等价于 exit(expr)。但是，使用函数 exit 有一个优点，它可以从其它函数中调用，并且可以用类似于第 5章中描述的模式查找程序查 找这些调用。",______等价于在主程序 main 中使用语句 return expr。,"
 以下是一道填空题:

在主程序 main 中,语句 return expr 等价于 exit(expr)。但是,使用函数 exit 有一个优点,它可以从其它函数中调用,并且可以用类似于第 5章中描述的模式查找程序查找这些调用。

空格处应填:return。","
 ______等价于在主程序 main 中使用语句 return expr。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
如果流 fp 中出现错误，则函数 ferror 返回一个非 0 值。
int ferror(FILE *fp)
尽管输出错误很少出现，但还是存在的（例如，当磁盘满时），因此，成熟的产品程序应该检查这种类型的错误。",______函数返回一个非 0 值，表示流 fp 中出现错误。,"
 以下是一道填空题:

void ferror(FILE *fp);

尽管输出错误很少出现,但还是存在的(例如,当磁盘满时),因此,成熟的产品程序应该检查这种类型的错误。","
 ______函数返回一个非 0 值，表示流 fp 中出现错误。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数 feof(FILE *)与 ferror 类似。如果指定的文件到达文件结尾，它将返回一个非 0 值。
int feof(FILE *fp)
在上面的小程序中，我们的目的是为了说明问题，因此并不太关心程序的退出状态，但对于任何重要的程序来说，都应该让程序返回有意义且有用的值。",______与ferror类似，如果指定的文件到达文件结尾，它将返回一个非0值。,"
 问题：在 C 语言中，函数 feof(FILE *) 的返回值非 0，表示文件已到达文件结尾，那么文件的实际行为是____。","
 ______与ferror类似，如果指定的文件到达文件结尾，它将返回一个非0值。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
标准库提供了一个输入函数 fgets，它和前面几章中用到的函数 getline 类似。char *fgets(char *line, int maxline, FILE *fp)fgets 函数从fp 指向的文件中读取下一个输入行（包括换行符），并将它存放在字符数组line 中， 它最多可读取 maxline-1个字符。读取的行将以'\0'结尾保存到数组中。通常情况下， fgets 返回 line，但如果遇到了文件结尾或发生了错误，则返回 NULL（我们编写的 getline 函数返回行的长度，这个值更有用，当它为 0 时意味着已经到达了文件的结尾）。",______函数从指定文件中读取下一个输入行，并将其存放在字符数组中。,"
 下面是填空题的描述：

标准库提供了一个输入函数 fgets，它和前面几章中用到的函数 getline 类似。char *fgets(char *line, int maxline, FILE *fp)fgets 函数从fp 指向的文件中读取下一个输入行（包括换行符），并将它存放在字符数组line 中， 它最多可读取 maxline-1个字符。读取的行将以'\0'结尾保存到数组中。通常情况下， fgets 返回 line，但如果遇到了文件结尾或发生了错误，则返回 NULL（我们编写的 getline 函数返回行的长度，这个值更有用，当它为 0 时意味着已经到达了文件的结尾）。

请根据上述描述，完成以下填空题：

fgets() 函数从文件中读取输入，并将其存放在字符数组中。函数的返回值是______。","
 ______函数从指定文件中读取下一个输入行，并将其存放在字符数组中。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
输出函数 fputs 将一个字符串（不需要包含换行符）写入到一个文件中：
int fputs(char *line, FILE *fp)
如果发生错误，该函数将返回 EOF，否则返回一个非负值。",______函数将一个字符串写入到一个文件中。,"
 以下是一道填空题：

输出函数 fputs 将一个字符串（不需要包含换行符）写入到一个文件中：
int fputs(char \*line, FILE \*fp)
如果发生错误，该函数将返回 EOF，否则返回一个非负值。

题目：在 fputs 函数中，将字符串“Hello, World!”写入到一个文件中，文件名为“example.txt”。请完成以下代码：

```
FILE *file = fopen(""example.txt"", ""w"");
if (file == NULL) {
    printf(""Error: Unable to open file.\n"");
    return 1;
}
fputs(""Hello, World!"", file);
fclose(file);
```

请填写空格处的代码。","
 ______函数将一个字符串写入到一个文件中。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
库函数 gets和 puts 的功能与 fgets和 fputs函数类似，但它们是对 stdin和 stdout 进行操作。有一点我们需要注意，gets 函数在读取字符串时将删除结尾的换行符（'\n'）， 而 puts 函数在写入字符串时将在结尾添加一个换行符。",______函数在读取字符串时将删除结尾的换行符（'\n'）。,"
 gets 和 puts 函数的功能与 fgets 和 fputs 函数类似，但它们是对 stdin 和 stdout 进行操作。有一点我们需要注意，gets 函数在读取字符串时将删除结尾的换行符（'\n'）， 而 puts 函数在写入字符串时将在结尾添加一个换行符。

请根据上述文本内容，完成以下填空题：

gets 函数在读取字符串时______结尾的换行符（'\n'）。

答案：删除","
 ______函数在读取字符串时将删除结尾的换行符（'\n'）。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
下面的代码是标准库中 fgets 和 fputs 函数的代码，从中可以看出， 这两个函数并没有什么特别的地方。代码如下所示：
/* fgets:get at most n chars from iop */
char *fgets(char *s, int n, FILE *iop)
{
register int c;
register char *cs;
cs = s;
while (--n > 0 && (c = getc(iop)) != EOF)
if ((*cs++ = c) == '\n')
break;
*cs = '\0';
return (c == EOF && cs == s) ? NULL : s;
}
/* fputs: put string s on file iop */
int fputs(char *s, FILE *iop)
{
int c;
while (c = *s++)
putc(c, iop);
return ferror(iop) ? EOF : 0;
}",______函数用于从文件中读取最多n个字符。,"
 请根据下面的代码，完成 fgets 和 fputs 函数的填空。

```c
void foo() {
    char s[100];
    FILE *file = fopen(""file.txt"", ""r"");
    if (file == NULL) {
        printf(""File open failed!\n"");
        return;
    }
    int n = 10;
    char *cs = s;
    cs = fgets(cs, n, file);
    if (cs == NULL) {
        printf(""Fgets failed!\n"");
    } else {
        printf(""Fgets got: %s\n"", cs);
    }
    fclose(file);
}
```","
 ______函数用于从文件中读取最多n个字符",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
ANSI标准规定，ferror 在发生错误时返回非 0 值，而 fputs 在发生错误时返回 EOF，其它情况返回一个非负值。
使用 fgets 函数很容易实现 getline 函数：
/* getline: read a line, return length */
int getline(char *line, int max)
{
if (fgets(line, max, stdin) == NULL)
return 0;
else
return strlen(line);
}",______标准规定，ferror 在发生错误时返回非 0 值，而 fputs 在发生错误时返回 EOF，其它情况返回一个非负值。,"
 以下哪个选项正确地描述了 fgets 和 getline 函数的行为？

A. fgets 函数在发生错误时返回 EOF，而 getline 函数在发生错误时返回 -1。
B. fgets 函数在发生错误时返回非 0 值，而 getline 函数在发生错误时返回 NULL。
C. fgets 函数在发生错误时返回非 0 值，而 getline 函数在发生错误时返回一个非负值。
D. fgets 函数在发生错误时返回 NULL，而 getline 函数在发生错误时返回一个非负值。","
 ______标准规定，ferror 在发生错误时返回非 0 值，而 fputs 在发生错误时返回 EOF，其它情况返回一个非负值。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
前面已经提到过字符串函数 strlen、strcpy、strcat 和 strcmp，它们都在头文件 <string.h>中定义。在下面的各个函数中，s 与 t 为 char *类型，c 与 n 为 int 类型。
strcat(s, t)将 t 指向的字符串连接到 s 指向的字符串的末尾
strncat(s, t, n)将 t 指向的字符串中前 n 个字符连接到 s 指向的字符串的末尾
strcmp(s, t)根据s 指向的字符串小于（ s<t）、等于（ s==t）或大于（ s>t）t
指向的字符串的不同情况，分别返回负整数、 0 或正整数
strncmp(s, t, n)同 strcmp 相同，但只在前 n 个字符中比较
strcpy(s, t)将 t 指向的字符串复制到 s 指向的位置
strncpy(s, t, n)将 t 指向的字符串中前 n 个字符复制到 s 指向的位置
strlen(s) 返回 s 指向的字符串的长度
strchr(s, c)在 s 指向的字符串中查找 c，若找到，则返回指向它第一次出现的位
置的指针，否则返回 NULL
strrchr(s, c) 在 s 指向的字符串中查找 c，若找到，则返回指向它最后一次出现的
位置的指针，否则返回 NULL",______函数将 t 指向的字符串连接到 s 指向的字符串的末尾。,"指向的字符串

根据以上描述，以下哪个函数可以用来将一个字符串复制到另一个字符串中？

答案：strcpy(s, t)","
 ______函数将 t 指向的字符串连接到 s",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
头文件<ctype.h>中定义了一些用于字符测试和转换的函数。在下面各个函数中， c 是 一个可表示为 unsigned char 类型或 EOF 的 int 对象。该函数的返回值类型为 int。
isalpha(c) 若 c 是字母，则返回一个非 0 值， 否则返回 0
isupper(c) 若 c 是大写字母，则返回一个非 0 值，否则返回 0
islower(c) 若 c 是小写字母，则返回一个非 0 值，否则返回 0
isdigit(c) 若 c 是数字，则返回一个非 0 值， 否则返回 0
isalnum(c) 若 isalpha(c)或 isdigit(c)，则返回一个非 0 值，否则返回 0
isspace(c) 若 c 是空格、横向制表符、换行符、回车符，换页符或纵向制表符， 则返回一个非 0 值
toupper(c) 返回 c 的大写形式
tolower(c) 返回 c 的小写形式",______头文件中定义了一些用于字符测试和转换的函数。,"制表符，则返回一个非 0 值，否则返回 0
eof(c) 若 c 是 EOF，则返回一个非 0 值，否则返回 0

下面是一个使用这些函数的示例代码：

```c
#include <ctype.h>

int main()
{
    int c = 5;
    unsigned char c1 = 'A';
    char c2 ='';
    char c3 = '\n';
    char c4 = 42;
    char c5 = 0;
    int eof = EOF;

    printf(""c = %d\n"", c);
    printf(""c1 = %u\n"", c1);
    printf(""c2 = %c\n"", c2);
    printf(""c3 = %c\n"", c3);
    printf(""c4 = %d\n"", c4);
    printf(""c5 = %d\n"", c5);
    printf(""eof = %d\n"", eof);

    if (isalpha(c)) {
        printf(""c is an alphabet.\n"");
    }
    else {
        printf(""c is not an alphabet.\n"");
    }

    if (isupper(c)) {
        printf(""c is an uppercase letter.\n"");
    }
    else {
        printf(""c is not an uppercase letter.\n"");
    }

    if (islower(c)) {
        printf(""c is a lowercase letter.\n"");
    }
    else {
        printf(""c is not a lowercase letter.\n"");
    }

    if (isdigit(c)) {
        printf(""c is a digit.\n"");
    }
    else {
        printf(""c is not a digit.\n"");
    }

    if (isalnum(c)) {
        printf(""c is an alphanumeric character.\n"");
    }
    else {
        printf(""c is not an alphanumeric character.\n"");
    }

    if (isspace(c)) {
        printf(""c is a space, tab, newline, carriage return, or form","
 ______头文件中定义了一些用于字符测试和转换",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
标准库提供了一个称为 ungetc 的函数， 它与第 4 章中编写的函数 ungetch 相比功能更 受限制。
int ungetc(int c, FILE *fp)
该函数将字符 c 写回到文件 fp 中。如果执行成功， 则返回 c，否则返回 EOF。每个文件只能
接收一个写回字符。ungetc 函数可以和任何一个输入函数一起使用， 比如 scanf、getc 或 getchar。",______函数可以将字符写回到文件中，与之前编写的函数 ungetch 相比功能更受限制。,"
 以下是一道关于 ungetc 函数的填空题：

标准库提供了一个称为 \_\_\_ 的函数， 它与第 4 章中编写的函数 \_\_\_ 相比功能更 受限制。
int \_\_\_(int \_\_c, FILE \_\_ *fp)
该函数将字符 \_\_c 写回到文件 \_\_fp 中。如果执行成功， 则返回 \_\_c，否则返回 EOF。每个文件只能
接收一个写回字符。\_\_c 函数可以和任何一个输入函数一起使用， 比如 \_\_fgets、\_\_getc 或 \_\_getchar。","
 ______函数可以将字符写回到文件中，与之前的ungetch函数相比功能更受限制。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数 system(char* s)执行包含在字符申 s 中的命令，然后继续执行当前程序。s 的 内容在很大程度上与所用的操作系统有关。下面来看一个 UNIX操作系统环境的小例子。语 句
system(""date"");
将执行程序 date，它在标准输出上打印当天的日期和时间。system 函数返回一个整型的状 态值， 其值来自于执行的命令，并同具体系统有关。在 UNIX 系统中，返回的状态是 exit 的 返回值。",______函数执行包含在字符申 s 中的命令，然后继续执行当前程序。,"
 以下是一道根据所给文本的填空题:

在 UNIX 系统中,使用 system 函数执行命令后,函数会返回一个与执行的命令有关的整型状态值,这个值就是 exit 的返回值。因此,调用 system 函数后,可以使用下面的代码获取返回值:

```c
int status = system(""date"");
```

其中,status 变量会存储返回值。根据上面的文本内容,可以推断出这个返回值表示执行的命令的退出状态码。","
 ______函数执行包含在字符申 s 中的命令，然后继续执行当前程序。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数 malloc 和 calloc 用于动态地分配存储块。",______和______用于动态地分配存储块。,"
 以下是一道填空题:

函数 malloc 和 calloc 用于动态地分配存储块。

在 C 语言中,malloc 和 calloc 是两个用于动态分配内存的函数,它们的作用分别是:

malloc 函数用于分配一个大小为指定值的内存块。如果内存不足,它将返回一个指向当前已经分配内存块的指针,或者返回一个空指针。

calloc 函数用于动态分配一块大小为指定值和指定数量的内存块。如果分配失败,它将返回一个空指针。

以下是一个示例:

```c
#include <stdio.h>
#include <stdlib.h>

int main() {
    int *p1, *p2;
    p1 = (int*)malloc(10 * sizeof(int));  // 分配 10 个 int 类型的内存块
    p2 = (int*)calloc(10, sizeof(int));  // 分配 10 个 int 类型的内存块

    //... 省略其他代码...

    free(p1);
    free(p2);

    return 0;
}
```

在这个示例中,我们使用 malloc 函数分配了一个大小为 10 个 int 类型的内存块,并将其指针赋值给指针 p1。使用 calloc 函数分配了 10 个 int 类型的内存块,并将其指针赋值给指针 p2。在使用完这些内存块后,我们使用 free 函数释放它们。","
 ______和______用于动态地分配存储块。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数 malloc 的声明如下：
void *malloc(size_t n)
当分配成功时，它返回一个指针，设指针指向 n 字节长度的未初始化的存储空间，否则返回 NULL。",______函数的声明是void *malloc(size_t n),"
 下面是一个关于malloc函数的填空题：

函数 `malloc` 的声明如下：

```c
void *malloc(size_t n);
```

当分配成功时，它返回一个指针，设指针指向 n 字节长度的未初始化的存储空间，否则返回 NULL。

空格处应填入适当的关键词或类型，以描述该函数的返回值。","
 ______函数的声明是void *malloc(size_t n)",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数 calloc 的声明为
void *calloc(size_t n, size_t size)
当分配成功时，它返回一个指针，该指针指向的空闲空间足以容纳由 n 个指定长度的对象组 成的数组，否则返回 NULL。该存储空间被初始化为 0。","______ 函数的声明为 void *calloc(size_t n, size_t size)","
 以下是对应的填空题：

函数 calloc 的声明为
void *calloc(size_t n, size_t size)
当分配成功时，它返回一个指针，该指针指向的空闲空间足以容纳由 n 个指定长度的对象组 成的数组，否则返回 NULL。该存储空间被初始化为 0。

题目：请根据上述文本内容，完成以下填空题。

calloc 函数的作用是_______，当分配成功时，它返回一个指针，该指针指向的空闲空间足以容纳由 n 个指定长度的对象组 成的数组，否则返回 NULL。该存储空间被初始化为 0。","
 ______ 函数的声明为 void *calloc(size_t n, size_t size)",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
根据请求的对象类型，malloc 或 calloc 函数返回的指针满足正确的对齐要求。下面的例子进行了类型转换：
int *ip;
ip = (int *) calloc(n, sizeof(int));",______函数根据请求的对象类型返回指针，满足正确的对齐要求。,"
 下面是一个填空题：

根据请求的对象类型，malloc 或 calloc 函数返回的指针满足正确的对齐要求。下面的例子进行了类型转换：
int *ip;
ip = (int *) calloc(n, sizeof(int));

填空题：ip 是空指针，对齐要求是 \_\_\_\_\_。

答案：对齐要求是 4 字节边界。","
 ______函数根据请求的对象类型返回指针，满足正确的对齐要求。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
free(p)函数释放 p 指向的存储空间，其中，p是此前通过调用 malloc 或 calloc 函数得到的指针。存储空间的释放顺序没有什么限制，但是，如果释放一个不是通过调用 malloc 或 calloc 函数得到的指针所指向的存储空间，将是一个很严重的错误。",______函数释放 p 指向的存储空间，其中，p是此前通过调用 malloc 或 calloc 函数得到的指针。,"
 free(p)函数释放 p 指向的存储空间，其中，p是此前通过调用 malloc 或 calloc 函数得到的指针。存储空间的释放顺序没有什么限制，但是，如果释放一个不是通过调用 malloc 或 calloc 函数得到的指针所指向的存储空间，将是一个很严重的错误。

填空题：free(p)函数释放 p 指向的存储空间，其中，p是此前通过调用______或______函数得到的指针。存储空间的释放顺序没有什么限制，但是，如果释放一个不是通过调用 malloc 或 calloc 函数得到的指针所指向的存储空间，将是一个很严重的错误。

答案：malloc 或 calloc","
 ______函数释放 p 指向的存储空间，其中，p是此前通过调用 malloc 或 calloc 函数得到的指针。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
使用已经释放的存储空间同样是错误的。下面所示的代码是一个很典型的错误代码段， 它通过一个循环释放列表中的项目：for (p = head; p != NULL; p = p->next) /* WRONG */
free(p);
正确的处理方法是， 在释放项目之前先将一切必要的信息保存起来，如下所示：
for (p = head; p != NULL; p = q) {
q = p->next;
free(p);
}
8.7 节给出了一个类似于 malloc 函数的存储分配程序的实现。该存储分配程序分配的存储块可以以任意顺序释放。",______是一个很典型的错误代码段，它通过一个循环释放列表中的项目。,"
 以下是一道填空题：

使用已经释放的存储空间同样是错误的。下面所示的代码是一个很典型的错误代码段， 它通过一个循环释放列表中的项目：for (p = head; p!= NULL; p = p->next) /* WRONG */
free(p);
正确的处理方法是， 在释放项目之前先将一切必要的信息保存起来，如下所示：for (p = head; p!= NULL; p = q) {
q = p->next;
free(p);
}
8.7 节给出了一个类似于 malloc 函数的存储分配程序的实现。该存储分配程序分配的存储块可以以任意顺序释放。

填空题：在释放项目之前先将一切必要的信息保存起来，如下所示：for (p = head; p!= NULL; p = q) {
q = p->next;
free(p);
}","
 ______是一个很典型的错误代码段，它通过一个循环释放列表中的项目。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
头文件<math.h>中声明了 20多个数学函数。下面介绍一些常用的数学函数，每个函数 带有一个或两个 double 类型的参数，并返回一个 double 类型的值。",______中声明了20多个数学函数。,"
 以下是一个填空题:

头文件<math.h>中声明了 20多个数学函数。下面介绍一些常用的数学函数,每个函数带有一个或两个 double 类型的参数,并返回一个 double 类型的值。

题目:

在<math.h>头文件中, declare了20多个数学函数,这些函数的参数类型是什么? 

答案:double类型。","
 ______中声明了20多个数学函数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数 rand()生成介于 0 和 RAND_MAX 之间的伪随机整数序列。其中 RAND_MAX 是在头 文件<stdlib.h>中定义的符号常量。下面是一种生成大于等于 0 但小于 1 的随机浮点数的 方法：
#define frand() ((double) rand() / (RAND_MAX+1.0))
（如果所用的函数库中已经提供了一个生成浮点随机数的函数，那么它可能比上面这个函数 具有更好的统计学特性。）
函数 srand(unsigned)设置 rand 函数的种子数。我们在 2.7 节中给出了遵循标准的 rand 和 srand 函数的可移植的实现。",______是在头文件<stdlib.h>中定义的符号常量。,"
 题目：下面哪个函数可以生成介于 0 和 RAND_MAX 之间的伪随机整数序列？

A. rand()
B. frand()
C. srand()

答案：A. rand()","
 ______是在头文件<stdlib.h>中定义的符号常量。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
UNIX 操作系统通过一系列的系统调用提供服务，这些系统调用实际上是操作系统内的函数，它们可以被用户程序调用。本章将介绍如何在 C 语言程序中使用一些重要的系统调用。如果读者使用的是 UNIX，本章将会对你有直接的帮助， 这是因为，我们经常需要借助于系统 调用以获得最高的效率，或者访问标准库中没有的某些功能。但是，即使读者是在其它操作系统上使用 C 语言，本章的例子也将会帮助你对 C 语言程序设计有更深入的了解。不同系统 中的代码具有相似性，只是一些细节上有区别而已。因为 ANSIC 标准函数库是以 UNIX 系统为基础建立起来的，所以，学习本章中的程序还将有助于更好地理解标准库。",______是通过一系列的系统调用提供服务的操作系统。,"
 请根据上述文本内容，将以下句子中的空缺部分填写完整：

学习本章中的程序还将有助于更好地理解标准库，因为ANSIC标准函数库是以UNIX系统为基础建立起来的，所以______。","
 ______是通过一系列的系统调用提供服务的操作系统。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
本章的内容包括 3个主要部分，输入/输出、文件系统和存储分配。其中，前两部分的 内容要求读者对 UNIX 系统的外部特性有一定的了解。",______包括输入/输出、文件系统和存储分配。,"
 本章的内容包括 3个主要部分，输入/输出、文件系统和存储分配。其中，前两部分的内容要求读者对 UNIX 系统的外部特性有一定的了解。

填空题：本章的内容包括 3个主要部分，输入/输出、文件系统和存储分配。其中，前两部分的内容要求读者对 UNIX 系统的外部特性有一定的了解。

【答案】本章的内容包括 3个主要部分，输入/输出、文件系统和存储分配。其中，前两部分的内容要求读者对 UNIX 系统的外部特性有一定的了解。","
 ______包括输入/输出、文件系统和存储分配。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
第 7章介绍的输入/输出接口对任何操作系统都是一样的。在任何特定的系统中，标准库函数的实现必须通过宿主系统提供的功能来实现。接下来的几节将介绍 UNIX系统中用于输入和输出的系统调用，并介绍如何通过它们实现标准库。",______的实现必须通过宿主系统提供的功能来实现。,"
 第7章介绍的输入/输出接口对任何操作系统都是一样的。在任何特定的系统中，标准库函数的实现必须通过宿主系统提供的功能来实现。接下来的几节将介绍UNIX系统中用于输入和输出的系统调用，并介绍如何通过它们实现标准库。

填空题：

第7章介绍的输入/输出接口对任何操作系统都是一样的。在任何特定的系统中，标准库函数的实现必须通过宿主系统提供的功能来实现。接下来的几节将介绍（UNIX）系统中用于输入和输出的系统调用，并介绍如何通过它们实现标准库。","
 ______的实现必须通过宿主系统提供的功能来实现。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
通常情况下，在读或写文件之前，必须先将这个意图通知系统，该过程称为打开文件。如果是写一个文件，则可能需要先创建该文件，也可能需要丢弃该文件中原先已存在的内容。系统检查你的权力（该文件是否存在？是否有访问它的权限？），如果一切正常，操作采统将向程序返回一个小的非负整数，该整数称为文件描述符。任何时候对文件的输入/输出都是通过文件描述符标识文件， 而不是通过文件名标识文件。（文件描述符类似于标准库中的文件指针或 MS-DOS 中的文件句柄。）系统负责维护已打开文件的所有信息，用户程序只能通过文件描述符引用文件，因为大多数的输入/输出是通过键盘和显示器来实现的，为了方便起见，UNIX 对此做了特别的安排。当命令解释程序（即“shell”）运行一个程序的时候，它将打开3个文件，对应的文件描述符分别为 0 ，1 ，2，依次表示标准输入，标准输出和标准错误。如果程序从文件 0 中读，对1和2进行写，就可以进行输/输出而不必关心打开文件的问题。",______是在读或写文件之前必须先通知系统的过程。,输出和标准错误。,"
 ______是在读或写文件之前必须先通知",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
程序的使用者可通过<和>重定向程序的 I/O：
prog < 输入文件名 > 输出文件名
这种情况下，shell 把文件描述符 0 和 1 的默认赋值改变为指定的文件。通常，文件描述符 2 仍与显示器相关联，这样，出错信息会输出到显示器上。与管道相关的输入/输出也有类似 的特性。在任何情况下，文件赋值的改变都不是由程序完成的，而是由 shell 完成的。只要程序使用文件 0 作为输入，文件 1 和 2 作为输出，它就不会知道程序的输入从哪里来，并输出到哪里去。",______是通过重定向程序的输入和输出来改变文件描述符的默认赋值。,"
 题目：在下面的代码中，哪个变量会被赋值为输入文件的描述符？

prog < 输入文件名 > 输出文件名

A. stdin
B. stdout
C. stderr
D. 0

答案：A. stdin","
 ______是通过重定向程序的输入和输出来改变文件描述符的默认赋值。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
输入与输出是通过 read和 write系统调用实现的。在 C 语言程序中,可以通过函数 read 和 write 访问这两个系统调用。这两个函数中,第一个参数是文件描述符,第二个参数是程 序中存放读或写的数据的字符数组,第三个参数是要传输的字节数。
int n_read = read(int fd, char *buf, int n);
int n_written = write(int fd, char *buf, int n);",______是通过 read 和 write 系统调用实现的。,"
 以下是一道根据所给文本内容的填空题:

在 C 语言程序中,通过函数 read 和 write 访问输入和输出系统调用,其中第一个参数是文件描述符,第二个参数是程序中存放读或写的数据的字符数组,第三个参数是要传输的字节数。正确填空为:

int n_read = read(int fd, char *buf, int n);
int n_written = write(int fd, char *buf, int n);","
 ______是通过 read 和 write 系统调用实现的。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
每个调用返回实际传输的字节数。在读文件时,函数的返回值可能会小于请求的字节数。如果返回值为 0,则表示已到达文件的结尾；如果返回值为-1,则表示发生了某种错误。在写文件时,返回值是实际写入的字节数。如果返回值与请求写入的字节数不相等,则说明发生了错误。
在一次调用中,读出或写入的数据的字节数可以为任意大小。最常用的值为 1,即每次读 出或写入 1 个字符（无缓冲）,或是类似于 1024~4096 这样的与外围设备的物理块大小相应 的值。用更大的值调用该函数可以获得更高的效率,因为系统调用的次数减少了。",______函数在读文件时返回实际传输的字节数，如果返回值为0表示已到达文件的结尾，如果返回值为-1表示发生了某种错误。,"
 以下是一道根据给定文本的填空题:

在C语言中,当调用一个函数时,该函数的返回值可能小于请求的字节数,也可能等于或大于请求的字节数。如果函数返回值为0,则表示已到达文件的结尾;如果返回值为-1,则表示发生了某种错误。在C语言中,当写入文件时,返回值是实际写入的字节数。如果返回值与请求写入的字节数不相等,则说明发生了错误。

在一次调用中,读出或写入的数据的字节数可以为任意大小。最常用的值为1,即每次读出或写入1个字符(无缓冲),或是类似于1024~4096这样的与外围设备的物理块大小相应的值。用更大的值调用该函数可以获得更高的效率,因为系统调用的次数减少了。

空格处应填入: 

可能的答案:

int foo(int request) { 
    int bytes_transferred; 
    // TODO:  fill in the blank 
    return bytes_transferred; 
}","
 ______函数在读文件时返回实际传输的字节数，如果返回值为0表示已到达文件的结尾，如果返回值为-1表示发生了某种错误。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
结合以上的讨论,我们可以编写一个简单的程序,将输入复制到输出,这与第1章中的 复制程序在功能上相同。程序可以将任意输入复制到任意输出,因为输入/输出可以重定向 到任何文件或设备。
#include ""syscalls.h""
main() /* copy input to output */
{
char buf[BUFSIZ];
int n;
while ((n = read(0, buf, BUFSIZ)) > 0)
write(1, buf, n);
return 0;
}",______可以将任意输入复制到任意输出，因为输入/输出可以重定向到任何文件或设备。,"
 根据以上讨论，我们可以编写一个简单的程序，将输入复制到输出，这与第1章中的哪个程序在功能上相同？

程序可以将任意输入复制到任意输出，因为输入/输出可以重定向到任何文件或设备。

#include ""syscalls.h""
main() /* copy input to output */
{
char buf[BUFSIZ];
int n;
while ((n = read(0, buf, BUFSIZ)) > 0)
write(1, buf, n);
return 0;
}","
 ______可以将任意输入复制到任意输出，因为输入/输出可以重定向到任何文件或设备。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
我们已经将系统调用的函数原型集中放在一个头文件 syscalls.h 中,因此,本章中的程序都将包含该头文件。不过,该文件的名字不是标准的。
参数 BUFSIZ 也已经在 syscalls.h头文件中定义。对于所使用的操作系统来说,该值是一个较合适的数值。如果文件大小不是 BUFSIZ 的倍数,则对 read 的某次调用会返回一个较小的字节数,write 再按这个字节数写,此后再调用 read 将返回 0。",______已经在syscalls.h头文件中定义。,"
 根据文本内容，下面这个空格处的句子应该是：对于所使用的操作系统来说,该值是一个较合适的数值。","
 ______已经在syscalls.h头文件中定义。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
为了更好地掌握有关概念,下面来说明如何用 read 和 write 构造类似于 getchar、 putchar 等的高级函数。例如,以下是 getchar 函数的一个版本,它通过每次从标准输入读入一个字符来实现无缓冲输入。
#include ""syscalls.h""
/* getchar: unbuffered single character input */
int getchar(void)
{
char c;
return (read(0, &c, 1) == 1) ? (unsigned char) c : EOF;
其中，c 必须是一个 char 类型的变量， 因为 read 函数需要一个字符指针类型的参数（&c）。在返回语句中将 c 转换为 unsigned char 类型可以消除符号扩展问题。","______函数的一个版本,它通过每次从标准输入读入一个字符来实现无缓冲输入。","
 下面是一道根据上述文本的填空题:

为了更好地掌握有关概念,下面来说明如何用 read 和 write 构造类似于 getchar、 putchar 等的高级函数。例如,以下是 getchar 函数的一个版本,它通过每次从标准输入读入一个字符来实现无缓冲输入。
#include ""syscalls.h""
/* getchar: unbuffered single character input */
int getchar(void)
{
char c;
return (read(0, &c, 1) == 1)? (unsigned char) c : EOF;
}

在上述代码中，空白处的 c 应该是 char 类型的变量。","
 ______函数的一个版本,它通过每次从标准输入读入一个字符来实现无缓冲输入。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
getchar 的第二个版本一次读入一组字符，但每次只输出一个字符。
#include ""syscalls.h""
/* getchar: simple buffered version */
int getchar(void)
{
static char buf[BUFSIZ];
static char *bufp = buf;
static int n = 0;
if (n == 0) {/* buffer is empty */
n = read(0, buf, sizeof buf);
bufp = buf;
}
return (--n >= 0) ? (unsigned char) *bufp++ : EOF;
}
如果要在包含头文件<stdio.h>的情况下编译这些版本的getchar 函数，就有必要用 #undef 预处理指令取消名字 getchar 的宏定义，因为在头文件中，getchar 是以宏方式实现的。",______函数的第二个版本一次读入一组字符，但每次只输出一个字符。,"
 根据给出的文本，以下是一道填空题：

在包含头文件<stdio.h>的情况下，如果要在getchar 函数中取消名字 getchar 的宏定义，应该使用 #undef 预处理指令，所以空格处应填写：

__attribute__((__constructor__(void)))(int getchar(void))","
 ______函数的第二个版本一次读入一组字符，但每次只输出一个字符。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
除了默认的标准输入、标准输出和标准错误文件外，其它文件都必须在读或写之前显式地打开。系统调用 open 和 creat 用于实现该功能。
open与第7章讨论的 fopen 相似，不同的是，前者返回一个文件描述符，它仅仅只是一个int类型的数值。而后者返回一个文件指针。如果发生错误，open将返回-1。
#include <fcntl.h>
int fd;
int open(char *name, int flags, int perms);
fd = open(name, flags, perms);
与 fopen 一样，参数 name 是一个包含文件名的字符串。第二个参数 flags 是一个 int 类 型的值，它说明以何种方式打开文件，主要的几个值如下所示：
在 System V UNIX 系统中， 这些常量在头文件<fcntl.h>中定义， 而在 Berkeley（BSD） 版本中则在<sys/file.h>中定义。",______是用于实现文件打开功能的系统调用之一。,"
 题目：在 C 语言中，用于实现文件操作的函数 open 和 creat 分别返回什么类型的值？

答案：open 返回一个文件描述符，它仅仅只是一个 int 类型的数值；creat 返回一个文件指针。","
 ______是用于实现文件打开功能的系统调用之一。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
可以使用下列语句打开一个文件以执行读操作：
fd = open(name, O_RDONLY,0);
在本章的讨论中， open 的参数 perms 的值始终为 0。","______可以使用下列语句打开一个文件以执行读操作：fd = open(name, O_RDONLY,0);","
 以下哪个选项是正确的？

fd = open(name, O_RDONLY, 0);

A. 打开文件以只读模式
B. 打开文件以读写模式
C. 打开文件以只读模式，并指定权限为0
D. 打开文件以读写模式，并指定权限为0","
 ______可以使用下列语句打开一个文件以执行读操作：fd = open(name, O_RDONLY,0);",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
如果用 open 打开一个不存在的文件，则将导致错误。可以使用 creat 系统调用创建新文件或覆盖已有的旧文件，如下所示：
int creat(char *name, int perms);
fd = creat(name, perms);
如果 creat 成功地创建了文件，它将返回一个文件描述符，否则返回-1。如果此文件已存在，creat 将把该文件的长度截断为 0，从而丢弃原先已有的内容。使用 creat 创建一个已存在的文件不会导致错误。
如果要创建的文件不存在， 则 creat 用参数 perms 指定的权限创建文件。在 UNIX 文件系统中，每个文件对应一个 9比特的权限信息，它们分别控制文件的所有者、所有者组和 其他成员对文件的读、写和执行访问。因此，通过一个 3位的八进制数就可方便地说明不同的权限，例如，0755说明文件的所有者可以对它进行读、写和执行操作，而所有者组和其他 成员只能进行读和执行操作。",______是用来创建新文件或覆盖已有的旧文件的系统调用。,"，而其他成员只能读取它。

请根据上述文本，以下哪个选项是正确的？

A. 如果用 open 打开一个不存在的文件，将导致错误。
B. 如果 creat 成功地创建了一个文件，它将返回一个文件描述符。
C. 如果 creat 成功地创建了一个文件，它将返回一个文件描述符或已存在的文件长度。
D. 如果 creat 成功地创建了一个文件，它将返回一个文件描述符或已存在的文件长度，取决于文件长度。

正确答案是：B. 如果 creat 成功地创建了一个文件，它将返回一个文件描述符。","
 ______是用来创建新文件或覆盖已有的旧文件的系统",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
下面通过一个简化的 UNIX 程序 cp 说明 creat 的用法。该程序将一个文件复制到另一个 文件。我们编写的这个版本仅仅只能复制一个文件，不允许用目录作为第二个参数，并且，目标文件的权限不是通过复制获得的， 而是重新定义的。
#include <stdio.h>
#include <fcntl.h>
#include ""syscalls.h""
#define PERMS 0666/* RW for owner, group, others */
void error(char *,...);
/* cp: copy f1 to f2 */
main(int argc, char *argv[])
{
int f1, f2, n;
char buf[BUFSIZ];
if (argc != 3)
error(""Usage: cp from to"");
if ((f1 = open(argv[1], O_RDONLY, 0)) == -1)
error(""cp: can't open %s"", argv[1]);
if ((f2 = creat(argv[2], PERMS)) == -1)
error(""cp: can't create %s, mode %03o"",
argv[2], PERMS);
while ((n = read(f1, buf, BUFSIZ)) > 0)
if (write(f2, buf, n) != n)
error(""cp: write error on file %s"", argv[2]);
return 0;
}
该程序创建的输出文件具有固定的权限 0666。利用 8.6 节中将要讨论的 stat 系统调用，可以 获得一个已存在文件的模式，并将此模式赋值给它的副本。",______系统调用可以获得一个已存在文件的模式，并将此模式赋值给它的副本。,"open source file"");
if ((f2 = open(argv[2], O_CREAT | O_TRUNC, PERMS)) == -1)
error(""cp: can't create target file"");
if ((n = read(f1, buf, BUFSIZ)) == -1)
error(""cp: read from source file failed"");
close(f1);
write(f2, buf, n);
close(f2);
}

在这段代码中，函数 error() 的作用是用来处理什么情况的错误？ 

答案：函数 error() 的作用是用来处理打开源文件失败的错误。","
 ______系统调用可以获得一个已存在的文件的",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#include <stdio.h>
#include <stdarg.h>
/* error: print an error message and die */
void error(char *fmt, ...)
{
va_list args;
va_start(args, fmt);
fprintf(stderr, ""error: "");
vprintf(stderr, fmt, args);
fprintf(stderr, ""\n"");
va_end(args);
exit(1);
}",______函数用于打印错误信息并退出程序。,"
 请将以下代码中的错误之处填入空白处：

#include <stdio.h>
#include <stdarg.h>
/* error: print an error message and die */
void error(char *fmt,...)
{
va_list args;
va_start(args, fmt);
fprintf(stderr, ""error: "");
vprintf(stderr, fmt, args);
fprintf(stderr, ""\n"");
va_end(args);
exit(1);
}","
 ______函数用于打印错误信息并退出程序。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
一个程序同时打开的文件数是有限制的（通常为20）。相应地，如果一个程序需要同时处理许多文件，那么它必须重用文件描述符。函数 close（int fd）用来断开文件描述符和已打开文件之间的连接，并释放此文件描述符，以供其它文件使用。close 函数与标准库中的 fclose 函数相对应，但它不需要清洗（flush）缓冲区。如果程序通过 exit 函数退出或从 主程序中返回，所有打开的文件将被关闭。
函数 unlink(char *name)将文件name 从文件系统中删除，它对应于标准库函数 remove。",______是用来断开文件描述符和已打开文件之间的连接，并释放文件描述符的函数。,"
 以下哪个函数用来断开文件描述符和已打开文件之间的连接并释放此文件描述符？

A. open
B. close
C. read
D. write","
 ______是用来断开文件描述符和已打开文件之间的连接，并释放文件描述符的函数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
输入/输出通常是顺序进行的：每次调用 read 和 write 进行读写的位置紧跟在前一次操作的位置之后。但是，有时候需要以任意顺序访问文件，系统调用 lseek 可以在文件中任 意移动位置而不实际读写任何数据：
long lseek(int fd, long offset, int origin);",______通常是顺序进行的：每次调用 read 和 write 进行读写的位置紧跟在前一次操作的位置之后。,"
 请根据上述文本内容，完成以下填空题：

long lseek(int fd, long offset, int origin) 的作用是___。","
 ______通常是顺序进行的：每次调用 read 和 write 进行读写的位置紧跟在前一次操作的位置之后。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
将文件描述符为 fd 的文件的当前位置设置为 offset，其中， offset 是相对于 orgin 指定 的位置而言的。随后进行的读写操作将从此位置开始，origin 的值可以为 0 、1 或 2，分别 用于指定 offset 从文件开始、从当前位置或从文件结束处开始算起。例如，为了向一个文 件的尾部添加内容（在 UNIXshell 程序中使用重定向符>>或在系统调用 fopen 中使用参数 “ a”），则在写操作之前必须使用下列系统调用找到文件的末尾：
lseek(fd, 0L, 2);
若要返回文件的开始处（即反绕），则可以使用下列调用：
lseek(fd, 0L, 0);
请注意，参数 0L 也可写为(long)0，或仅仅写为 0，但是系统调用 lseek 的声明必须保持 一致。",______是相对于orgin指定的位置而言的。,"
 以下哪个系统调用可以用于在文件中定位到指定的偏移量 offset?

1. lseek(fd, 0L, 2);
2. lseek(fd, 0L, 0);
3. lseek(fd, 32L, 1);","
 ______是相对于orgin指定的位置而言的。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
使用 lseek 系统调用时，可以将文件视为一个大数组，其代价是访问速度会慢一些。例 如，下面的函数将从文件的任意位置读入任意数目的字节，它返回读入的字节数，若发生错 误，则返回-1。
#include ""syscalls.h""
/*get: read n bytes from position pos */
int get(int fd, long pos, char *buf, int n)
{
if (lseek(fd, pos, 0) >= 0) /* get to pos */
return read(fd, buf, n);
else
return -1;
}
lseek 系统调用返回一个 long 类型的值，此值表示文件的新位置，若发生错误，则返回-1。 标准库函数 fseek 与系统调用 lseek 类似， 所不同的是， 前者的第一个参数是 FILE *类型， 且在发生错误时返回一个非 0 值。",______系统调用可以将文件视为一个大数组，其代价是访问速度会慢一些。,"值。
","
 ______系统调用可以将文件视为一个大数组，其代价是访问速度会慢一些",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
下面以标准库函数 fopen 和 getc 的一种实现方法为例来说明如何将这些系统调用结合起来使用。
我们回忆一下，标准库中的文件不是通过文件描述符描述的，而是使用文件指针描述的。文件指针是一个指向包含文件各种信息的结构的指针， 该结构包含下列内容：一个指向缓冲区的指针，通过它可以一次读入文件的一大块内容；一个记录缓冲区中剩余的字符数的计数器；一个指向缓冲区中下一个字符的指针；文件描述符；描述读/写模式的标志；描述错误状态的标志等。",______是一个指向包含文件各种信息的结构的指针。,"
 根据文本内容，下面这个选项是正确的：

一个指向缓冲区的指针，通过它可以一次读入文件的一大块内容；一个记录缓冲区中剩余的字符数的计数器；一个指向缓冲区中下一个字符的指针；文件描述符；描述读/写模式的标志；描述错误状态的标志等。","
 ______是一个指向包含文件各种信息的结构的指针。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
述文件的数据结构包含在头文件<stdio.h>中，任何需要使用标准输入/输出库中函数的程序都必须在源文件中包含这个头文件（通过#include 指令包含头文件）。此文件也被库中的其它函数包含。在下面这段典型的<stdio.h>代码段中，只供标准库中其它函数所使用的名字以下划线开始，因此一般不会与用户程序中的名字冲突。所有的标准库函数都遵循该约定。",______的数据结构包含在头文件<stdio.h>中。,"
 下面这段典型的<stdio.h>代码段中,只供标准库中其它函数所使用的名字以下划线开始,因此一般不会与用户程序中的名字冲突。所有的标准库函数都遵循该约定。

答案:在<stdio.h>头文件中定义的函数名字通常以什么开始?","
 ______的数据结构包含在头文件<stdio.h>中。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#define NULL 0
#define EOF(-1)
#define BUFSIZ 1024
#define OPEN_MAX 20 /* max #files open at once */
typedef struct _iobuf {
int cnt;/* characters left */
char *ptr; /* next character position */
char *base;/* location of buffer */
int flag; /* mode of file access */
int fd; /* file descriptor */
} FILE;
extern FILE _iob[OPEN_MAX];
#define stdin (&_iob[0])
#define stdout(&_iob[1])
#define stderr(&_iob[2])
enumflags {
_ AD= 01, /* file open for reading */
_WRITE = 02,/* file open for writing */
_UNBUF = 04,/* file is unbuffered */
_EOF = 010,/* EOF has occurred on this file */
_ERR = 020/* error occurred on this file */
};
int _fillbuf(FILE *);
int _flushbuf(int, FILE *);

#define stdin (&_iob[0])
#define stdin (&_iob[1])
#define stdin (&_iob[2])
enumflags {
_ AD= 01, /* file open for reading */
_WRITE = 02,/* file open for writing */
_UNBUF = 04,/* file is unbuffered */
_EOF = 010,/* EOF has occurred on this file */
_ERR = 020/* error occurred on this file */
};
int _fillbuf(FILE *);
int _flushbuf(int, FILE *);
#define feof(p) ((p)->flag & _EOF) != 0)
#define ferror(p) ((p)->flag & _ERR) != 0)
#define fileno(p) ((p)->fd)
#define getc(p) (--(p)->cnt >= 0 \
? (unsigned char) *(p)->ptr++ : _fillbuf(p))
#define putc(x,p) (--(p)->cnt >= 0 \
? *(p)->ptr++ = (x) : _flushbuf((x),p))
#define getchar() getc(stdin)
#define putcher(x) putc((x), stdout)",______是文件打开用于读取的标志。,"*/
_ERR = 020,/* there is an error in the file */
_NONBLOCK = 040,/* file descriptor is non-blocking */
_UNUSED = 0100,/* file descriptor is unused */
_END = 0200
};

void setbuf(FILE *file, int size);
void setnl(FILE *file);
void setonb(FILE *file);
void setoff(FILE *file);
void seteof(FILE *file);
void setbuffering(FILE *file, int size);
void setn(FILE *file, int size);
void setnonblocking(FILE *file);
void seteof(FILE *file);
void setfilebuf(FILE *file, FILE *buf);
void setlinebuf(FILE *file, char *buf);
void setnbuffering(FILE *file, int size);
void setlinbuf(FILE *file, char *buf);
void setoff(FILE *file);
void setonb(FILE *file);
void seteof(FILE *file);
void setfilebuf(FILE *file, FILE *buf);
void setlinebuf(FILE *file, char *buf);
void setnbuffering(FILE *file, int size);
void setlinbuf(FILE *file, char *buf);
void setoff(FILE *file);
void setonb(FILE *file);
void seteof(FILE *file);
void setfilebuf(FILE *file, FILE *buf);
void setlinebuf(FILE *file, char *buf);
void setnbuffering(FILE *file, int size);
void setlinbuf(FILE *file, char *buf);
void setoff(FILE *file);
void setonb(FILE *file);
void seteof(FILE *file);
void setfilebuf(FILE *file, FILE *buf);
void setlinebuf(FILE *file, char *buf);
void setnbuffering(FILE *file, int size);
void setlinbuf(FILE *file, char *buf);
void setoff(FILE *file);
void setonb(FILE *file);
void seteof(FILE *file","
 ______是",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
宏 getc 一般先将计数器减 1，将指针移到下一个位置，然后返回字符。（前面讲过，一个长的#define 语句可用反斜杠分成几行。） 但是， 如果计数值变为负值，getc 就调用函数 _fillbuf 填充缓冲区， 重新初始化结构的内容， 并返回一个字符。返回的字符为 unsigned 类型。以确保所有的字符为正值。
尽管在这里我们并不想讨论一些细节，但程序中还是给出了 putc 函数的定义，以表明它的操作与 getc 函数非常类似，当缓冲区满时，它将调用函数_flushbuf。此外，我们还在其中包含了访问错误输出、文件结束状态和文件描述符的宏。",______函数的操作与getc函数非常类似，当缓冲区满时，它将调用函数_flushbuf。,"
 宏 getc 一般先将计数器减 1，将指针移到下一个位置，然后返回字符。但是，如果计数值变为负值，getc 就调用函数 _fillbuf 填充缓冲区，重新初始化结构的内容，并返回一个字符。返回的字符为 unsigned 类型。以确保所有的字符为正值。尽管在这里我们并不想讨论一些细节，但程序中还是给出了 putc 函数的定义，以表明它的操作与 getc 函数非常类似，当缓冲区满时，它将调用函数_flushbuf。此外，我们还在其中包含了访问错误输出、文件结束状态和文件描述符的宏。

空格处应填：getc","
 ______函数的操作与getc函数非常类似，当缓冲区满时，它将调用函数_flushbuf。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
下面我们来着手编写函数 fopen。fopen 函数的主要功能是打开文件，定位到合适的位 置，设置标志位以指示相应的状态。它不分配任何缓冲区空间，缓冲区的分配是在第一次读 文件时由函数_fillbuf 完成的。
#include <fcntl.h>
#include ""syscalls.h""
#define PERMS 0666/* RW for owner, group, others */
FILE *fopen(char *name, char *mode)
{
int fd;
FILE *fp;
if (*mode != 'r' && *mode != 'w' && *mode != 'a')
return NULL;
for (fp = _iob; fp < _iob + OPEN_MAX; fp++)
if ((fp->flag & (_READ | _WRITE)) == 0)
break; /* found free slot */
if (fp >= _iob + OPEN_MAX) /* no free slots */
return NULL;
if (*mode == 'w')
fd = creat(name, PERMS);
else if (*mode == 'a') {
if ((fd = open(name, O_WRONLY, 0)) == -1)
fd = creat(name, PERMS);
lseek(fd, 0L, 2);
} else
fd = open(name, O_RDONLY, 0);
if (fd == -1)/* couldn't access name */
return NULL;
fp->fd = fd;
fp->cnt = 0;
fp->base = NULL;
fp->flag = (*mode == 'r') ? _READ : _WRITE;
return fp;
}
该版本的 fopen 函数没有涉及标准 C 的所有访问模式， 但是， 加入这些模式并不需要增加多 少代码。特别是，该版本的fopen 不能识别表示二进制访问方式的 b 标志，这是因为， 在 UNIX 系统中这种方式是没有意义的。同时，它也不能识别允许同时进行读和写的+标志。",______函数的主要功能是打开文件，定位到合适的位置，设置标志位以指示相应的状态。,"slot */
return NULL;
fd = open(name, O_RDWR | O_CREAT | O_TRUNC, PERMS);
fp = _iob + fd;
f_setmode(fp, O_RDWR);
return fp;
}

请问：在这段代码中，函数 fopen 的主要功能是什么？

答案：函数 fopen 的主要功能是打开文件，定位到合适的 position，设置标志位以指示相应的状态。","
 ______函数的主要功能是打开文件，定位",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
建立缓冲区后，_fillbuf 调用 read 填充此缓冲区，设置计数值和指针，并返回缓冲区中的第一个字符。随后进行的_fillbuf 调用会发现缓冲区已经分配。
#include ""syscalls.h""
/* _fillbuf: allocate and fill input buffer */
int _fillbuf(FILE *fp)
{
int bufsize;
if ((fp->flag&(_READ|_EOF_ERR)) != _READ)
return EOF;
bufsize = (fp->flag & _UNBUF) ? 1 : BUFSIZ;
if (fp->base == NULL)/* no buffer yet */
if ((fp->base = (char *) malloc(bufsize)) == NULL)
return EOF;/* can't get buffer */
fp->ptr = fp->base;
fp->cnt = read(fp->fd, fp->ptr, bufsize);
if (--fp->cnt < 0) {
if (fp->cnt == -1)
fp->flag |= _EOF;
else
fp->flag |= _ERR;
fp->cnt = 0;
return EOF;
}
return (unsigned char) *fp->ptr++;
}",______函数的作用是分配并填充输入缓冲区。,"
return EOF;/* EOF or read error */
if (fp->cnt == 0)
return EOF;/* EOF */
return fp->cnt;
}","
 ______函数的作用是分配并填充输入",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
最后一件事情便是如何执行这些函数。我们必须定义和初始化数组_iob 中的stdin、stdout 和 stderr 值：
FILE _iob[OPEN_MAX] = { /* stdin, stdout, stderr */
{ 0, (char *) 0, (char *) 0, _READ, 0 },
{ 0, (char *) 0, (char *) 0, _WRITE, 1 },
{ 0, (char *) 0, (char *) 0, _WRITE, | _UNBUF, 2 }
};
该结构中 flag 部分的初值表明，将对 stdin执行读操作、对 stdout执行写操作、对 stderr 执行缓冲方式的写操作。",______中的flag部分的初值表明，将对stdin执行读操作、对stdout执行写操作、对stderr执行缓冲方式的写操作。,"
 请根据给定的文本内容，将结构体中的 flag 部分用一个初始值为 0 的整数替换。

FILE _iob[OPEN_MAX] = { /* stdin, stdout, stderr */
{ 0, (char *) 0, (char *) 0, _READ, 0 },
{ 0, (char *) 0, (char *) 0, _WRITE, 1 },
{ 0, (char *) 0, (char *) 0, _WRITE, | _UNBUF, 2 }
};","
 ______中的flag部分的初值表明，将对stdin执行读操作、对stdout执行写操作、对stderr执行缓冲方式的写操作。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
我们常常还需要对文件系统执行另一种操作，以获得文件的有关信息，而不是读取文件的具体内容。目录列表程序便是其中的一个例子， 比如 UNIX 命令ls，它打印一个目录中的文件名以及其它一些可选信息，如文件长度、访问权限等等。MS-DOS 操作系统中的 dir 命令也有类似的功能。
由于 UNIX 中的目录就是一种文件， 因此，ls 只需要读此文件就可获得所有的文件名。但是，如果需要获取文件的其它信息，比如长度等，就需要使用系统调用。在其它一些系统中， 甚至获取文件名也需要使用系统调用，例如在 MS-DOS 系统中即如此。无论实现方式是否同具体的系统有关，我们需要提供一种与系统无关的访问文件信息的途径。",______是一种操作文件系统的程序，用于获取文件的有关信息，如文件名、长度、访问权限等。,"
 题目：在上述文本中，关于 UNIX 命令 ls，以下哪项描述是正确的？

A. ls 打印文件名以及文件长度等信息。
B. ls 只需要读取文件名即可。
C. ls 需要使用系统调用才能获取文件名和相关信息。
D. ls 在 UNIX 中不需要使用系统调用。","
 ______是一种操作文件系统的程序，用于获取文件的有关信息，如文件名、文件长度等。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
我们首先回顾 UNIX 文件系统的结构。在 UNIX 系统中，目录就是文件，它包含了一个 文件名列表和一些指示文件位置的信息。“位置”是一个指向其它表（即 i 结点表）的索引。 文件的 i 结点是存放除文件名以外的所有文件信息的地方。目录项通常仅包含两个条目：文件 名和 i 结点编号。",______是 UNIX 系统中存储文件名列表和指示文件位置信息的数据结构。,"
 根据上述文本，以下哪个选项是正确的？

A. 文件名列表和一些指示文件位置的信息位于目录项的哪个部分？
B. 文件名列表和指示文件位置的信息位于 i 结点的哪个部分？
C. 文件名列表和指示文件位置的信息位于目录的哪个部分？
D. 文件名列表和指示文件位置的信息位于 UNIX 系统的哪个部分？","
 ______是 UNIX 系统中存储文件名列表和指示文件位置信息的数据结构。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
遗憾的是，在不同版本的系统中，目录的格式和确切的内容是不一样的。因此，为了分离出不可移植的部分，我们把任务分成两部分。外层定义了一个称为 Dirent 的结构和 3 个 函数 opendir、readdir 和 closedir，它们提供与系统无关的对目录项中的名字和 i 结点 编号的访问。我们将利用此接口编写 fsize 程序，然后说明如何在与 Version7 和 SystemV UNIX 系统的目录结构相同的系统上实现这些函数。其它情况留作练习。",______是一个称为 Dirent 的结构和 3 个函数 opendir、readdir 和 closedir，它们提供与系统无关的对目录项中的名字和 i 结点编号的访问。,"
 为了分离出不可移植的部分，我们将任务分成两部分。外层定义了一个称为 Dirent 的结构和 3 个函数 opendir、readdir 和 closedir，它们提供与系统无关的对目录项中的名字和 i 结点编号的访问。我们将利用此接口编写 fsize 程序，然后说明如何在与 Version7 和 SystemV UNIX 系统的目录结构相同的系统上实现这些函数。其它情况留作练习。

填空题：

在上述文本中， Dirent 结构用于_____。

答案：存储目录项中的名字和 i 结点编号。","
 ______是一个称为 Dirent 的结构和 3 个函数 opendir、readdir 和 closedir，它们提供与系统无关的对目录项中的名字和 i 结点编号的访问。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
结构 Dirent包含 i 结点编号和文件名。文件名的最大长度由 NAMZ_MAX设定，NAME_MAX 的值由系统决定。opendir 返回一个指向称为 DIR 的结构的指针，该结构与结构 FILE 类似，它将被 readdir 和 closedir 使用。所有这些信息存放在头文件 dirent.h 中。
#define NAME_MAX14 /* longest filename component; */
/* system-dependent */
typedef struct {/* portable directory entry */
long ino;/* inode number */
char name[NAME_MAX+1];/* name + '\0' terminator */
} Dirent;
typedef struct {/* minimal DIR: no buffering, etc. */
int fd; /* file descriptor for the directory */
Dirent d; /* the directory entry */
} DIR;
DIR *opendir(char *dirname);
Dirent *readdir(DIR *dfd);
void closedir(DIR *dfd);",______结构包含 i 结点编号和文件名。,"
int closedir(DIR *dfd);

返回值：无

以下哪一项不是结构 Dirent 的成员？

A. ino
B. name
C. fd
D. closedir","
 
 ______包含 i 结点编号和文件名",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
系统调用 stat 以文件名作为参数， 返回文件的 i 结点中的所有信息； 若出错， 则返回-1。 如下所示：
char *name;
struct stat stbuf;
int stat(char *, struct stat *);
stat(name, &stbuf);
它用文件 name 的 i 结点信息填充结构 stbuf。头文件<sys/stat.h>中包含了描述 stat 的返回值的结构。该结构的一个典型形式如下所示：
struct stat/* inode information returned by stat */
{
dev_tst_dev; /* device of inode */
ino_tst_ino; /* inode number */
shortst_mode;/* mode bits */
shortst_nlink; /* number of links to file */
shortst_uid; /* owners user id */
shortst_gid; /* owners group id */
dev_tst_rdev;/* for special files */
off_tst_size;/* file size in characters */
time_t st_atime; /* time last accessed */
time_t st_mtime; /* time last modified */
time_t st_ctime; /* time originally created */
};
该 结构中大 部分的值 已在注 释中进行 了解释。 dev_t 和ino_t 等类型 在 头 文件 <sys/types.h>中定义，程序中必须包含此文件。",______是系统调用，以文件名作为参数，返回文件的i结点中的所有信息。,"size; /* size of file in bytes */
time_tst_wtime; /* creation time in seconds */
time_tst_atime; /* access time in seconds */
time_tst_mtime; /* modification time in seconds */
};


答案：结构体<stat>用于描述文件信息，其中包括 dev_tst_dev（ device of inode ）、ino_tst_ino（ inode number ）、shortst_mode（ mode bits ）、shortst_nlink（ number of links to file ）、shortst_uid（ owners user id ）、shortst_gid（ owners group id ）、dev_tst_rdev（ for special files ）、off_tst_size（ size of file in bytes ）、time_tst_wtime（ creation time in seconds ）、time_tst_atime（ access time in seconds ）、time_tst_mtime（ modification time in seconds ）。","
 ______是系统调用，以文件名作为参数，返回文件的",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
st_mode 项包含了描述文件的一系列标志， 这些标志在<sys/stat.h>中定义。我们只需要处理文件类型的有关部分：
#define S_IFMT 0160000/* type of file: */
#define S_IFDIR0040000/* directory */
#define S_IFCHR0020000/* character special */",______ 项包含了描述文件的一系列标志， 这些标志在<sys/stat.h>中定义。,"
 下面是一道填空题:

根据上述文本,描述文件类型的有关部分由以下几个标志组成:

st_mode    S_IFMT    S_IFDIR0040000    S_IFCHR0020000

其中,第一个标志对应的值为:

0160000","
 ______ 项包含了描述文件的一系列标志， 这些标志在<sys/stat.h>中定义。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
下面我们来着手编写程序 fsize。如果由 stat 调用获得的模式说明某文件不是一个目 录，就很容易获得该文件的长度，并直接输出。但是， 如果文件是一个目录，则必须逐个处 理目录中的文件。由于该目录可能包含子目录，因此该过程是递归的。
主程序 main 处理命令行参数，并将每个参数传递给函数 fsize。
#include <stdio.h>
#include <string.h>
#include ""syscalls.h""
#include <fcntl.h> /* flags for read and write */
#include <sys/types.h> /* typedefs */
#include <sys/stat.h>/* structure returned by stat */
#include ""dirent.h""
void fsize(char *)
/* print file name */
main(int argc, char **argv)
{
if (argc == 1)/* default: current directory */
fsize(""."");
else
while (--argc > 0)
fsize(*++argv);
return 0;
}
函数 fsize打印文件的长度。但是，如果此文件是一个目录，则 fsize首先调用 dirwalk 函数处理它所包含的所有文件。注意如何使用文件<sys/stat.h>中的标志名S_IFMT 和 S_IFDIR 来判定文件是不是一个目录。括号是必须的，因为&运算符的优先级低于==运算符的优先级。",______函数打印文件的长度。,"1) {
char *path = argv[1];
if (stat(path, &st) == -1) {
perror(""stat"");
continue;
}
if (S_ISDIR(st.st_mode)) {
fsize(path);
}
}
}","
 ______函数打印文件",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
int stat(char *, struct stat *);
void dirwalk(char *, void (*fcn)(char *));
/* fsize: print the name of file ""name"" */
void fsize(char *name)
{
struct stat stbuf;
if (stat(name, &stbuf) == -1) {
fprintf(stderr, ""fsize: can't access %s\n"", name);
return;
}
if ((stbuf.st_mode & S_IFMT) == S_IFDIR)
dirwalk(name, fsize);
printf(""%8ld %s\n"", stbuf.st_size, name);
}
函数 dirwalk 是一个通用的函数，它对目录中的每个文件都调用函数 fcn 一次。它首先打开目录，循环遍历其中的每个文件， 并对每个文件调用该函数，然后关闭目录返回。因为 fsize 函数对每个目录都要调用 dirwalk 函数，所以这两个函数是相互递归调用的。",______函数用于打开目录并循环遍历其中的每个文件。,所以它也类似于一个通用的函数。,"
 ______函数用于打开目录并循环遍历其中的每个文件",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#define MAX_PATH 1024
/* dirwalk: apply fcn to all files in dir */
void dirwalk(char *dir, void (*fcn)(char *))
{
char name[MAX_PATH];
Dirent *dp;
DIR *dfd;
if ((dfd = opendir(dir)) == NULL) {
fprintf(stderr, ""dirwalk: can't open %s\n"", dir);
return;
}
while ((dp = readdir(dfd)) != NULL) {
if (strcmp(dp->name, ""."") == 0
|| strcmp(dp->name, ""..""))
continue; /* skip self and parent */
if (strlen(dir)+strlen(dp->name)+2 > sizeof(name))
fprintf(stderr, ""dirwalk: name %s %s too long\n"",
dir, dp->name);
else {
sprintf(name, ""%s/%s"", dir, dp->name);
(*fcn)(name);
}
}
closedir(dfd);
}
每次调用 readdir 都将返回一个指针， 它指向下一个文件的信息。如果目录中已没有待处理的文件，该函数将返回 NULL。每个目录都包含自身“ . ”和父目录“ ..”的项目，在处理时必须跳过它们，否则将会导致无限循环。",______函数的作用是对指定目录下的所有文件应用指定的函数。,"s/%s"", dir, dp->name);
if ((dp = getdent(dfd, dp)) == NULL) {
fprintf(stderr, ""dirwalk: getdent %s %s failed\n"",
dir, dp->name);
continue;
}
if (fcn(sprintf(name, ""%s/%s"", dir, dp->d_name))) {
fprintf(stderr, ""dirwalk: fcn application failed for %s/%s\n"",
dir, dp->d_name);
}
}
closedir(dfd);
}

根据文本内容，以下哪个函数可以用于替换dirwalk中的fcn参数？

A. getc
B. strlen
C. printf
D. opendir

答案：C. printf","
 ______函数的作用是对指定目录下的所有",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
到现在这一步为止，代码与目录的格式无关。下一步要做的事情就是在某个具体的系统 上提供一个 opendir、readdir 和 closedir 的最简单版本。以下的函数适用于 Version7 和 System V UNIX 系统，它们使用了头文件（sys/dir.h>中的目录信息，如下所示：
#ifndef DIRSIZ
#define DIRSIZ 14
#endif
struct direct {/* directory entry */
ino_t d_ino; /* inode number */
char d_name[DIRSIZ]; /* long name does not have '\0' */
};
某些版本的系统支持更长的文件名和更复杂的目录结构。",______的最简单版本适用于Version7和System V UNIX系统。,"
 问题：在给定的文本中，以下哪一部分是关于`opendir`、`readdir` 和 `closedir` 的最简单版本？

A. 头文件 `sys/dir.h` 中的目录信息
B. 函数定义
C. 系统兼容性声明
D. 文件名和目录结构的描述","
 ______的最简单版本适用于Version7和System V UNIX系统。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
类型 ino_t 是使用 typedef 定义的类型，它用于描述 i 结点表的索引。在我们通常使用 的系统中，此类型为 unsigned short，但是这种信息不应在程序中使用。因为不同的系统 中该类型可能不同，所以使用typedef 定义要好一些。所有的“系统”类型可以在文件 <sys/types.h）中找到。",______ 是使用 typedef 定义的类型，用于描述 i 结点表的索引。,"
 请根据以下文本内容出一道填空题:

类型 ino_t 是使用 ```typedef``` 定义的类型，它用于描述 i 结点表的索引。在我们通常使用 的系统中，此类型为 ```unsigned short```，但是这种信息不应在程序中使用。因为不同的系统 中该类型可能不同，所以使用 ```typedef``` 定义要好一些。所有的“系统”类型可以在文件 ```<sys/types.h>``` 中找到。

空格处应填入：typedef","
 ______ 是使用 typedef 定义的类型，用于描述 i 结点表的索引。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
opendir 函数首先打开目录， 验证此文件是一个目录（调用系统调用 fstat，它与 stat 类似，但它以文件描述符作为参数），然后分配一个目录结构，并保存信息：
int fstat(int fd, struct stat *);
/* opendir: open a directory for readdir calls */
DIR *opendir(char *dirname)
{
int fd;
struct stat stbuf;
DIR *dp;
if ((fd = open(dirname, O_RDONLY, 0)) == -1
|| fstat(fd, &stbuf) == -1
|| (stbuf.st_mode & S_IFMT) != S_IFDIR
|| (dp = (DIR *) malloc(sizeof(DIR))) == NULL)
return NULL;
dp->fd = fd;
return dp;
}",______函数用于打开目录并验证该文件是一个目录。,"
 以下哪个函数会返回一个指向目录结构的指针，当调用 opendir 函数打开一个目录时？

A. fopen
B. malloc
C. opendir
D. stat

答案：C. opendir","
 ______函数用于打开目录并验证该文件是一个目录。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
closedir 函数用于关闭目录文件并释放内存空间：
/* closedir: close directory opened by opendir */
void closedir(DIR *dp)
{
if (dp) {
close(dp->fd);
free(dp);
}
}",______函数用于关闭目录文件并释放内存空间,"
 以下是一个关于 closedir 函数的填空题：

void closedir(DIR *dp) __attribute__((constructor));","
 ______函数用于关闭目录文件并释放内存空间",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
最后， 函数 readdir 使用 read 系统调用读取每个目录项。如果某个目录位置当前没有 使用（因为删除了一个文件）， 则它的 i 结点编号为 0，并跳过该位置。否则，将 i 结点编号 和目录名放在一个 static 类型的结构中，并给用户返回一个指向此结构的指针。每次调用 readdir 函数将覆盖前一次调用获得的信息。
#include <sys/dir.h>/* local directory structure */
/* readdir: read directory entries in sequence */
Dirent *readdir(DIR *dp)
{
struct direct dirbuf;/* local directory structure */
static Dirent d; /* return: portable structure */
while (read(dp->fd, (char *) &dirbuf, sizeof(dirbuf))
== sizeof(dirbuf)) {
if (dirbuf.d_ino == 0) /* slot not in use */
continue;
d.ino = dirbuf.d_ino;
strncpy(d.name, dirbuf.d_name, DIRSIZ);
d.name[DIRSIZ] = '\0';/* ensure termination */
return &d;
}
return NULL;
}",______函数使用 read 系统调用读取每个目录项。,";
d.d_name = dirbuf.d_name;
/* put d in the buffer */
d.d_type = 0; /* not a directory */
if (dp->reuse) {
struct directory *dir = dp->dp;
struct directory *dir2 = &dir;
while (1) {
if (dir2->d_next == NULL) {
dir2->d_next = &dir;
dir2 = dir2->d_next;
break;
}
if (dir2->d_next->d_ino == 0) {
dir2->d_next = dir2->d_next + 1;
dir2->d_next->d_ino = dirbuf.d_ino;
dir2->d_next->d_name = dirbuf.d_name;
dir2->d_next->d_type = 0;
dir2 = dir2->d_next;
break;
}
} else {
dp->next = &dir;
dp->dp = dir;
}
}
return dp;
}","
 ______函数使用 read 系统调用读取每个",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
尽管 fsize 程序非常特殊，但是它的确说明了一些重要的思想。首先，许多程序并不是 “系统程序”，它们仅仅使用由操作系统维护的信息。对于这样的程序，很重要的一点是，信 息的表示仅出现在标准头文件中，使用它们的程序只需要在文件中包含这些头文件即可，而 不需要包含相应的声明。其次，有可能为与系统相关的对象创建一个与系统无关的接口。标准库中的函数就是很好的例子。",______是许多程序并不是“系统程序”，它们仅仅使用由操作系统维护的信息。,"
 以下是一道根据文本内容的填空题:

许多程序并不是 “系统程序”,它们仅仅使用由操作系统维护的信息。对于这样的程序,很重要的一点是,信息的表示仅出现在标准头文件中,使用它们的程序只需要在文件中包含这些头文件即可,而 不需要包含相应的声明。此外,有可能为与系统相关的对象创建一个与系统无关的接口。标准库中的函数就是很好的例子。

空格处应填入:信息的表示。","
 ______是许多程序并不是“系统程序”，它们仅仅使用由操作系统维护的信息。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
我们在第 5章给出了一个功能有限的面向栈的存储分配程序。本节将要编写的版本没有限制， 可以以任意次序调用 malloc 和 free。malloc 在必要时调用操作系统以获取更多的 存储空间。这些程序说明了通过一种与系统无关的方式编写与系统有关的代码时应考虑的问题，同时也展示了结构、联合和 typedef 的实际应用。",______的实际应用。,"
 请根据上述文本内容，将以下代码中的空格填上正确的内容：

我们在第__章给出了一个功能有限的面向栈的存储分配程序。本节将要编写的版本没有限制，可以以任意次序调用 malloc 和 free。malloc 在必要时调用操作系统以获取更多的存储空间。这些程序说明了通过一种与系统无关的方式编写与系统有关的代码时应考虑的问题，同时也展示了结构、联合和 typedef 的实际应用。

答案：第5章","
 ______的实际应用。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
malloc 并不是从一个在编译时就确定的固定大小的数组中分配存储空间， 而是在需要时向操作系统申请空间。因为程序中的某些地方可能不通过 malloc 调用申请空间（也就是说， 通过其它方式申请空间），所以，malloc 管理的空间不一定是连续的。这样，空闲存储空间以空闲块链表的方式组织，每个块包含一个长度、 一个指向下一块的指针以及一个指向自身存储空间的指针。这些块按照存储地址的升序组织，最后一块（最高地址）指向第一块（参见图 8-1）。
当有申请请求时， malloc 将扫描空闲块链表， 直到找到一个足够大的块为止。该算法称为“首次适应”（first fit）；与之相对的算法是“最佳适应”（best fit），它寻找满足条件的最小块。如果该块恰好与请求的大小相符合，则将它从链表中移走并返回给用户。如果该块太大， 则将它分成两部分：大小合适的块返回给用户，剩下的部分留在空闲块链表中。如果找不到一个足够大的块，则向操作系统申请一个大块并加入到空闲块链表中。
释放过程也是首先搜索空闲块链表，以找到可以插入被释放块的合适位置。如果与被释放块相邻的任一边是一个空闲块，则将这两个块合成一个更大的块，这样存储空间不会有太 多的碎片。因为空闲块链表是以地址的递增顺序链接在一起的，所以很容易判断相邻的块是否空闲。",______是在需要时向操作系统申请空间的函数。,"，剩下的部分继续在链表中寻找合适的块。如果该块太小， 则将请求分配给该块并返回。

下面是一个简单的 malloc 分配器：
```
void *malloc(size_t size);
```

请根据上述文本，以下哪一项是正确的？

A. 首次适应算法寻找满足条件的最小块。
B. 最佳适应算法寻找满足条件的最小块。
C. 每个空闲块包含一个长度、一个指向下一块的指针以及一个指向自身存储空间的指针。
D. 首次适应算法将返回给用户的块从链表中移走。

答案：B. 最佳适应算法寻找满足条件的最小块。","
 ______是在需要时向",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
我们在第 5 章中曾提出了这样的问题，即确保由 malloc 函数返回的存储空间满足将要保存的对象的对齐要求。虽然机器类型各异， 但是， 每个特定的机器都有一个最受限的类型： 如果最受限的类型可以存储在某个特定的地址中，则其它所有的类型也可以存放在此地址中。 在某些机器中，最受限的类型是 double 类型；而在另外一些机器中，最受限的类型是 int 或 long 类型。",______的存储空间满足将要保存的对象的对齐要求,"
 问题：在第 5 章中，我们关注的是保证由哪个函数返回的存储空间满足将要保存的对象的对齐要求？

选项：
1. malloc
2. free
3. setjmp
4. exit","
 ______的存储空间满足将要保存的对象的对齐要求",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
空闲块包含一个指向链表中下一个块的指针、 一个块大小的记录和一个指向空闲空间本身的指针。位于块开始处的控制信息称为“头部“。为了简化块的对齐，所有块的大小都必 须是头部大小的整数倍， 且头部已正确地对齐。这是通过一个联合实现的，该联合包含所需 的头部结构以及一个对齐要求最受限的类型的实例， 在下面这段程序中， 我们假定 long 类型为最受限的类型：
typedef long Align; /* for alignment to long boundary */
union header {/* block header */
struct {
union header *ptr; /* next block if on free list */
unsigned size;/* size of this block */
} s;
Align x; /* force alignment of blocks */
};
typedef union header Header;
在该联合中，Align 字段永远不会被使用，它仅仅用于强制每个头部在最坏的情况下满足对齐要求。",______是空闲块中包含的一个指向链表中下一个块的指针、一个块大小的记录和一个指向空闲空间本身的指针。,"单独出现。 

以下是一个示例程序:

```
#include <stdio.h>

int main() {
    Header h1, h2, h3;
    h1.s.ptr = &h2;
    h1.s.size = 10;
    h2.s.ptr = &h3;
    h2.s.size = 20;
    h3.s.ptr = NULL;
    h3.s.size = 30;
    h1.x = h1.s.size;
    h2.x = h2.s.size;
    h3.x = h3.s.size;
    printf(""h1 size: %ld\n"", h1.s.size);
    printf(""h2 size: %ld\n"", h2.s.size);
    printf(""h3 size: %ld\n"", h3.s.size);
    printf(""h1 x: %ld\n"", h1.x);
    printf(""h2 x: %ld\n"", h2.x);
    printf(""h3 x: %ld\n"", h3.x);
    return 0;
}
```

题目:

请根据上述文本内容,填写以下空白处:

以下哪个选项是正确的?

A. 空闲块包含一个指向链表中下一个块的指针、一个块大小的记录和一个指向空闲空间本身的指针。 
B. 所有块的大小都必须是头部大小的整数倍,且头部已正确地对齐。这是通过一个联合实现的。
C. 在程序中,对齐要求最受限的类型是 short。
D. 在程序中,对齐要求最受限的类型是 long。

答案:

\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_\_","
 ______是空闲块中包含的一个指向链表中下一个块的指针、一个块大小的记录和一个指向空闲空间本身的",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
在 malloc 函数中，请求的长度（以字符为单位）将被舍入，以保证它是头部大小的整数倍。实际分配的块将多包含一个单元，用于头部本身。实际分配的块的大小将被记录在头部的 size 字段中。malloc 函数返回的指引将指向空闲空间，而不是块的头部。用户可对获得的存储空间进行任何操作，但是，如果在分配的存储空间之外写入数据，则可能会破坏块链表。图 8-2 表示由 malloc 返回的块。
其中的 size 字段是必需的，因为由 malloc 函数控制的块不一定是连续的，这样就不可能通过指针算术运算计算其大小。
变量 base 表示空闲块链表的头部。第一次调用 malloc 函数时， freep 为 NULL，系统将创建一个退化的空闲块链表，它只包含一个大小为 0的块，且该块指向它自己。任何情况 下，当请求空闲空间时，都将搜索空闲块链表。搜索从上一次找到空闲块的地方（freep） 开始。该策略可以保证链表是均匀的。如果找到的块太大，则将其尾部返回给用户，这样，初始块的头部只需要修改 size 字段即可。在任何情况下， 返回给用户的指针都指向块内的空闲存储空间，即比指向头部的指针大一个单元。",______的长度将被舍入，以保证它是头部大小的整数倍。,"，如果 freep 为 NULL，应将该空闲块链表的指针赋值为 0。

下面是一个示例代码：

```c
void *malloc(int size) {
    if (size <= 0) {
        return NULL;
    }
    void *p = malloc(size + 1);
    if (p == NULL) {
        return NULL;
    }
    p->size = size;
    p->base_addr = (unsigned int)malloc(size);
    if (p->base_addr == NULL) {
        free(p);
        return NULL;
    }
    return p;
}
```

根据上述文本，以下哪个字段是不必要的？

A. size
B. base\_addr
C. freep

答案：C。在malloc函数中，size字段是必需的，因为它用于计算分配的块的大小。而base\_addr字段实际用于保存空闲块链表的头部，但在malloc函数内部已经计算出了这个值，所以它是不必要的。","
 ______的长度将被舍入，以保证它是头部",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
static Header base;/* empty list to get started */
static Header *freep = NULL;/* start of free list */
/* malloc: general-purpose storage allocator */
void *malloc(unsigned nbytes)
{
Header *p, *prevp;
Header *moreroce(unsigned);
unsigned nunits;
nunits = (nbytes+sizeof(Header)-1)/sizeof(header) + 1;
if ((prevp = freep) == NULL) { /* no free list yet */
base.s.ptr = freeptr = prevptr = &base;
base.s.size = 0;
}
for (p = prevp->s.ptr; ; prevp = p, p = p->s.ptr) {
if (p->s.size >= nunits) {/* big enough */
if (p->s.size == nunits)/* exactly */
prevp->s.ptr = p->s.ptr;
else { /* allocate tail end */
p->s.size -= nunits;
p += p->s.size;
p->s.size = nunits;
}
freep = prevp;
return (void *)(p+1);
}
if (p == freep)/* wrapped around free list */
if ((p = morecore(nunits)) == NULL)
return NULL; /* none left */
}
}",______是一个通用的存储分配器。,"/* big enough, but not exactly */
prevp->s.ptr = p->s.ptr + (p->s.size - nunits)/sizeof(Header);
}
p->s.size -= nunits;
}
if ((p = freep) == NULL) { /* no free list yet */
base.s.ptr = freeptr = prevptr = &base;
base.s.size = 0;
}
else {
p->s.size += (nunits - base.s.size);
}
p = p->s.ptr;
}
void free(void *p)
{
Header *__header;
if ((__header = *p)!= NULL) {
*p = __header->s.ptr;
__header->s.size = 0;
if (__header->s.next == NULL) { /* free list */
freeptr = __header;
}
else {
__header->s.next = NULL;
}
}
void *realloc(void *p, unsigned nbytes)
{
Header *__header;
if ((__header = *p)!= NULL) {
if (__header->s.size >= nbytes) { /* big enough */
__header->s.size += nbytes;
}
else { /* not big enough */
__header->s.size = nbytes;
}
}
}","
 ______是一个通用的",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
函数 morecore 用于向操作系统请求存储空间，其实现细节因系统的不同而不同。因为 向系统请求存储空间是一个开销很大的操作，因此， 我们不希望每次调用 malloc 函数时都 执行该操作，基于这个考虑， morecore 函数请求至少 NALLOC 个单元。这个较大的块将根 据需要分成较小的块。在设置完 size 字段之后，morecore 函数调用 free 函数把多余的存储空间插入到空闲区域中。",______函数用于向操作系统请求存储空间。,"
 morecore 函数用于向操作系统请求存储空间，其实现细节因系统的不同而不同。因为向系统请求存储空间是一个开销很大的操作，因此，我们不希望每次调用 malloc 函数时都执行该操作，基于这个考虑，morecore 函数请求至少 NALLOC 个单元。这个较大的块将根据需要分成较小的块。在设置完 size 字段之后，morecore 函数调用 free 函数把多余的存储空间插入到空闲区域中。

填空题：morecore 函数请求至少______个单元。

答案：NALLOC","
 ______函数用于向操作系统请求存储空间。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
UNIX 系统调用 sbrk(n)返回一个指针，该指针指向 n 个字节的存储空间。如果没有空 闲空间，尽管返回 NULL 可能更好一些，但 sbrk 调用返回-1。必须将-1 强制转换为 char * 类型，以便与返回值进行比较。而且，强制类型转换使得该函数不会受不同机器中指针表示 的不同的影响。但是，这里仍然假定， 由 sbrk 调用返回的指向不同块的多个指针之间可以进 行有意义的比较。 ANSI 标准并没有保证这一点，它只允许指向同一个数组的指针间的比较。 因此，只有在一般指针间的比较操作有意义的机器上，该版本的 malloc 函数才能够移植。",______函数返回一个指针，该指针指向 n 个字节的存储空间。,"
 下面是一个填空题：

UNIX 系统调用 sbrk(n)返回一个指针，该指针指向 n 个字节的存储空间。如果没有空闲空间，尽管返回 NULL 可能更好一些，但 sbrk 调用返回-1。必须将-1 强制转换为 ```char *``` 类型，以便与返回值进行比较。而且，强制类型转换使得该函数不会受不同机器中指针表示 的不同的影响。但是，这里仍然假定，由 sbrk 调用返回的指向不同块的多个指针之间可以进行有意义的比较。ANSI 标准并没有保证这一点，它只允许指向同一个数组的指针间的比较。因此，只有在一般指针间的比较操作有意义的机器上，该版本的 malloc 函数才能够移植。","
 ______函数返回一个指针，该指针指向 n 个字节的存储空间。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
#define NALLOC 1024/* minimum #units to request */
/* morecore: ask system for more memory */
static Header *morecore(unsigned nu)
{
char *cp, *sbrk(int);
Header *up;
if (nu < NALLOC)
nu = NALLOC;
cp = sbrk(nu * sizeof(Header));
if (cp == (char *) -1) /* no space at all */
return NULL;
up = (Header *) cp;

}
up->s.size = nu;
free((void *)(up+1));
return freep;",______是用来请求系统分配更多内存的函数。,"
 根据上述文本，以下哪个选项是正确的？

Header *morecore(unsigned nu) 的返回类型是？","
 ______是用来请求系统分配更多内存的函数。",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
我们最后来看一下 free 函数。它从 freep 指向的地址开始，逐个扫描空闲块链表，寻 找可以插入空闲块的地方。该位置可能在两个空闲块之间，也可能在链表的末尾。在任何一 种情况下，如果被释放的块与另一空闲块相邻，则将这两个块合并起来。合并两个块的操作 很简单，只需要设置指针指向正确的位置，并设置正确的块大小就可以了。
/* free: put block ap in free list */
void free(void *ap)
{
Header *bp, *p;
bp = (Header *)ap - 1;/* point to block header */
for (p = freep; !(bp > p && bp < p->s.ptr); p = p->s.ptr)
if (p >= p->s.ptr && (bp > p || bp < p->s.ptr))
break; /* freed block at start or end of arena */
if (bp + bp->size == p->s.ptr) {/* join to upper nbr */
bp->s.size += p->s.ptr->s.size;
bp->s.ptr = p->s.ptr->s.ptr;
} else
bp->s.ptr = p->s.ptr;
if (p + p->size == bp) { /* join to lower nbr */
p->s.size += bp->s.size;
p->s.ptr = bp->s.ptr;
} else
p->s.ptr = bp;
freep = p;
}",______函数的作用是从空闲块链表中寻找可以插入空闲块的地方，并在释放块与另一空闲块相邻时将它们合并起来。,"found */
if (bp > p) {
p->s.next = bp->s.next;
bp->s.next = NULL;
}
else {
p->s.next = NULL;
bp->s.next = p;
}
}","
 ______函数的作用是从空闲块链表中寻找可以插入空闲块的地方，",1
你是一个C语言出题专家,"请根据以下文本内容出一道填空题:
虽然存储分配从本质上是与机器相关的，但是，以上的代码说明了如何控制与具体机器相关的部分，并将这部分程序控制到最少量。typedef 和 union 的使用解决了地址的对齐（假 定 sbrk 返回的是合适的指针） 问题。类型的强制转换使得指针的转换是显式进行的， 这样做 甚至可以处理设计不够好的系统接口问题。虽然这里所讲的内容只涉及到存储分配，但是，这种通用方法也适用于其它情况。",______的使用解决了地址的对齐问题。,"
 以下是一道根据给定文本的填空题：

虽然存储分配从本质上是与机器相关的，但是，以上的代码说明了如何控制与具体机器相关的部分，并将这部分程序控制到最少量。typedef 和 union 的使用解决了地址的对齐（假 定 sbrk 返回的是合适的指针） 问题。类型的强制转换使得指针的转换是显式进行的， 这样做 甚至可以处理设计不够好的系统接口问题。虽然这里所讲的内容只涉及到存储分配，但是，这种通用方法也适用于其它情况。

填空题：虽然存储分配从本质上是与机器相关的，但是，以上的代码说明了如何控制与具体机器相关的部分，并将这部分程序控制到最少量。typedef 和 union 的使用解决了地址的对齐（假 定 sbrk 返回的是合适的指针） 问题。类型的强制转换使得指针的转换是显式进行的， 这样做 甚至可以处理设计不够好的系统接口问题。虽然这里所讲的内容只涉及到存储分配，但是，这种通用方法也适用于其它情况。

答案：虽然存储分配从本质上是与机器相关的，但是，以上的代码说明了如何控制与具体机器相关的部分，并将这部分程序控制到最少量。typedef 和 union 的使用解决了地址的对齐（假 定 sbrk 返回的是合适的指针） 问题。类型的强制转换使得指针的转换是显式进行的， 这样做 甚至可以处理设计不够好的系统接口问题。虽然这里所讲的内容只涉及到存储分配，但是，这种通用方法也适用于其它情况。","
 ______的使用解决了地址的对齐问题。",1
你是一个C语言出题专家,"请将下列题目转化为填空题:
 C源程序经过编译、链接后,产生的可执行程序的扩展名为（）。A. .exeB. .comC. .objD. .dll","C源程序经过编译、链接后,产生的可执行程序的扩展名为____","
 下面是填空题的答案：

C源程序经过编译、链接后,产生的可执行程序的扩展名为（D..dll）。","
 C源程序经过编译、链接后,产生的可执行程序的扩展名为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
以下程序的输出结果为（）。#include<stdio.h>void main(void){ char ch='1'; printf('' % dn '',++ch-‘0’); }A. 0B. 2C. 1D. -1","以下程序的输出结果为____。#include<stdio.h>void main(void){ char ch='1'; printf('' % dn '',++ch-‘0’); }","
 以下程序的输出结果为（C）。#include<stdio.h>void main(void){ char ch='1'; printf('' % dn '',++ch-‘0’); }","
 以下程序的输出结果为____。#include<stdio.h>void main(void){ char ch='1'; printf('' % dn '',++ch-‘0’); }",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
以下程序的输出结果为（）。#include<stdio.h>void main(void) {     int m=10;     printf(''% d,'',m--);    printf('' % dn '',--m+10);}A. 10,20B. 9,19C. 10,18D. 9,18","以下程序的输出结果为____。#include<stdio.h>void main(void) {     int m=10;     printf('' % d'',m--);    printf('' % dn '',--m+10);} ","
 以下程序的输出结果为（D. 9,18）。","
 以下程序的输出结果为____。#include<stdio.h>void main(void) {     int m=10;     printf(''% d,'',m--);    printf('' % dn '',--m+10);} ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
以下程序的功能是（）。#include<stdio.h>#define N 5 void main(void){   long result=0;   int i,k,m;   for(i=1;i<=N;i++){  m=1;for(k=1;k<=i;k++)  m*=k;   result+=m;   }    printf( ''result = % ld '',result);} A. 计算1!+2!+3!+…+N! B. 计算N! C. 计算1+2+3+…+N D. 以上都不对","以下程序的功能是____。#include<stdio.h>#define N 5 void main(void){   long result=0;   int i,k,m;   for(i=1;i<=N;i++){  m=1;for(k=1;k<=i;k++)  m*=k;   result+=m;   }    printf( ''result = % ld '',result);}",". 

 首先分析题目，给出的程序是一个C语言程序，需要计算1!+2!+3!+…+N!的值，并输出结果。

然后分析选项：

A. 计算1!+2!+3!+…+N!：这个选项符合题目要求，因为程序中使用了两个嵌套的for循环，分别计算1!、2!、3!等的值，并将它们相加。

B. 计算N!：这个选项不符合题目要求，因为程序计算的是1!+2!+3!+…+N!，而不是N!本身。

C. 计算1+2+3+…+N!：这个选项不符合题目要求，因为程序计算的是1!+2!+3!+…+N!，而不是1+2+3+…+N!。

D. 计算1+2+3+…+N：这个选项不符合题目要求，因为程序计算的是1!+2!+3!+…+N!，而不是1+2+3+…+N。

综上所述，正确答案是A. 计算1!+2!+3!+…+N!。",". 
 以下程序的功能是____。#include<stdio.h>#define N 5 void main(void){   long result=0;   int i,k,m;   for(i=1;i<=N;i++){  m=1;for(k=1;k<=i;k++)  m*=k;   result+=m;   }    ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
运行以下程序的输出结果为（）。#include<stdio.h>strlenint fun(char *s){int num=0;while(*s!='0'){num++;s++;}return num;}void main(void){char* str=''HuaqiaoUni.'';printf('' % dn '',fun(str));}A. 10B. 11C. 12D. 13","运行以下程序的输出结果为____。#include<stdio.h>strlenint fun(char *s){int num=0;while(*s!='0'){num++;s++;}return num;}void main(void){char* str=''HuaqiaoUni.'';printf(''% dn '',fun(str));}","
 请将下列程序的输出结果为（）。

```c
#include<stdio.h>
strlenint fun(char *s){int num=0;while(*s!='0'){num++;s++;}return num;}
void main(void){char* str=''HuaqiaoUni.'';printf('' % dn '',fun(str));}
```

A. 10
B. 11
C. 12
D. 13","
 运行以下程序的输出结果为____。#include<stdio.h>strlenint fun(char *s){int num=0;while(*s!='0'){num++;s++;}return num;}void main(void){char* str=''HuaqiaoUni.'';printf('' % dn '',fun(str));}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若包含预处理命令#include<string.h>,定义char s[ ]='Huaqiao'; 则表达式sizeof(s)和strlen(s)的值分别为（）。A. 7,7B. 7,8C. 8,7D. 8,8","若包含预处理命令#include<string.h>,定义char s[ ]='Huaqiao'; 则表达式sizeof(s)和strlen(s)的值分别为____,____","
 请将下列题目转化为填空题:

若包含预处理命令#include<string.h>,定义char s[ ]='Huaqiao'; 则表达式sizeof(s)和strlen(s)的值分别为（）。A. 7,7 B. 7,8 C. 8,7 D. 8,8","
 若包含预处理命令#include<string.h>,定义char s[ ]='Huaqiao'; 则表达式sizeof(s)和strlen(s)的值分别为____,____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
以下程序的运行结果为（）。#include<stdio.h>#include<string.h>void main(void){char* str=''Huaqiao '',s[20];[q][i][a][o][0] [][][][][] [][][][][] [][][][][]strcpy(s,str+3);printf('' % dn '',strlen(s));}A. 3B. 4C. 7D. 20","请将该题目转化成填空题,所给的题目如下：以下程序的运行结果为_____。#include<stdio.h>#include<string.h>void main(void){char* str=''Huaqiao '',s[20];[q][i][a][o][0] [][][][][] [][][][][] [][][][][]strcpy(s,str+3);printf('' % dn '',strlen(s));}","
 以下程序的运行结果为（D. 20）。

#include<stdio.h>
#include<string.h>

void main(void){
char* str=''Huaqiao '',s[20];
[q][i][a][o][0]
[][][][][]
[][][][][]
[][][][][]
strcpy(s,str+3);
printf('' % dn '',strlen(s));
}","
 请将该题目转化成填空题,所给的题目如下：以下程序的运行结果为_____。#include<stdio.h>#include<string.h>void main(void){char* str=''Huaqiao '',s[20];[q][i][a][o][0] [][][][][] [][][][][] [][][][][]strcpy(s,str+3);printf('' % dn '',strlen(s));}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若有int a[5]={1,2,3,4,5};,则表达式*(a+1)的值为（）。A. 2B. 3C. 4D. 5","若有int a[5]={1,2,3,4,5};,则表达式*(a+1)的值为____","
 请将下列题目转化为填空题:

若有int a[5]={1,2,3,4,5};,则表达式*(a+1)的值为（）。A. 2B. 3C. 4D. 5","
 若有int a[5]={1,2,3,4,5};,则表达式*(a+1)的值为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
以下程序的输出结果是（）。void f(int *x,int *y) { int t;  t=*x; *x=*y; *y=t; } void main(void) { int a[]={1,2,3,4,5,6,7,8},i,*p,*q; p=a; q=a+7; while(p<q){ f(p,q); p++; q--; } for(i=0;i<sizeof(a)sizeof(int);i++) printf('' % d '',a[i]); } A. 8,2,3,4,5,6,7,1,B. 5,6,7,8,1,2,3,4,C. 1,2,3,4,5,6,7,8,D. 8,7,6,5,4,3,2,1,","以下程序的输出结果是____。void f(int *x,int *y) { int t;  t=*x; *x=*y; *y=t; } void main(void) { int a[]={1,2,3,4,5,6,7,8},i,*p,*q; p=a; q=a+7; while(p<q){ f(p,q); p++; q--; } for(i=0;i<sizeof(a)sizeof(int);i++) printf('' % d'',a[i]); } ","1 2 3 4 5 6 7 8 
 以下程序的输出结果是（）。void f(int *x,int *y) { int t;  t=*x; *x=*y; *y=t; } void main(void) { int a[]={1,2,3,4,5,6,7,8},i,*p,*q; p=a; q=a+7; while(p<q){ f(p,q); p++; q--; } for(i=0;i<sizeof(a)sizeof(int);i++) printf('' % d '',a[i]); } 
A. 1 2 3 4 5 6 7 8 
 

B. 1 2 3 4 5 6 7 8 

C. 1 2 3 4 5 6 7 8 

D. 1 2 3 4 5 6 7 8 

答案：D. 1 2 3 4 5 6 7 8","
 以下程序的输出结果是____。void f(int *x,int *y) { int t;  t=*x; *x=*y; *y=t; } void main(void) { int a[]={1,2,3,4,5,6,7,8},i,*p,*q; p=a; q=a+7; while(p<q){ f(p,q); p++; q--; } for(i=0;i<sizeof(a)sizeof(int);i++) printf('' 
 以下程序的输出结果是____。void f(int *x,int *y) { int t;  t=*x; *x=*y; *y=t; } void main(void) { int a[]={1,2,3,4,5,6,7,8},i,*p,*q; p=a; q=a+7; while(p<q){ f(p,q); p++; q--; } for(i=0;i<sizeof(a)sizeof(int);i++) ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
以下程序,若输入值3,则输出结果为（）。#include<stdio.h>   void main(void){   int n=10,*p=&n;   scanf('' % d '',p);      (*p)++;   printf('' % dn '',n);}A. 3B. 10C. 4D. 11","以下程序,若输入值3,则输出结果为____。#include<stdio.h>   void main(void){   int n=10,*p=&n;   scanf('' % d '',p);      (*p)++;   printf('' % dn '',n);}","
 请将下列程序,若输入值3,则输出结果为（）。

#include<stdio.h>
void main(void){
 int n=10,*p=&n;   scanf('' % d '',p);      (*p)++;   printf('' % dn '',n);}

A. 3
B. 10
C. 4
D. 11","
 以下程序,若输入值3,则输出结果为____。#include<stdio.h>   void main(void){   int n=10,*p=&n;   scanf('' % d '',p);      (*p)++;   printf('' % dn '',n);}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
以下程序的输出结果为（）。#include<stdio.h>#include<string.h>struct student{int num;char name[20];}s[3]={{111,''liuming ''},{112,''sunlei ''},{113,''yuhua''}};void main(void) {int k;s - > num += 10;strcpy((s + 2) - > name, ''huanghong '');for (k = 0; k < 3; k++) printf('' % -4 d % s '', s[k].num, s[k].name);}A.111 liuming,112 sunlei,113 yuhua,B.121 liuming,112 sunlei,113 yuhua,C.121 liuming,112 sunlei,113 huanghua,D.111 liuming,112 sunlei,113 huanghua,","以下程序的输出结果为____。#include<stdio.h>#include<string.h>struct student{int num;char name[20];}s[3]={{111,''liuming ''},{112,''sunlei ''},{113,''yuhua ''}};void main(void) {int k;s - > num += 10;strcpy((s + 2) - > name, ''huanghong '');for (k = 0; k < 3; k++) printf('' % -4 d % s '', s[k].num, s[k].name);}","s[k].name); }

 下面是该程序的填空题：

1. 将程序中`s`数组的定义改为以下形式：

```c
s[0] = {{111, 'liuming'}, {112,'sunlei'}, {113, 'yuhua'}};
```

2. 将程序中`s`数组的第二个元素的`name`字段改为以下形式：

```c
s[1].name = 'huanghong';
```

3. 将程序中`s`数组的第三个元素的`name`字段改为以下形式：

```c
s[2].name = 'zhouqi';
```

4. 将程序中`printf`语句中的`' % -4 d % s'`改为以下形式：

```c
printf('%d %s\n', s[k].num, s[k].name);
```

5. 将程序中`main`函数的第一个循环改为以下形式：

```c
for (k = 0; k < 3; k++) {
    s[k].num += 10;
    s[k].name = 'huanghong';
}
```

6. 将程序中`main`函数的第二个循环改为以下形式：

```c
for (k = 0; k < 3; k++) {
    printf('%d %s\n', s[k].num, s[k].name);
}
```","
 以下程序的输出结果为____。#include<stdio.h>#include<string.h>struct student{int num;char name[20];}s[3]={{111,'liuming '},{112,'sunlei '},{113,'yuhua'}};void main(void) {int k;s - > num += 10;strcpy((s + 2) - > name, ''huanghong '');for (k = 0; k < 3; k++) printf('' % -4 d % s '', s[k].num, 
 以下程序的输出结果为____。#include<stdio.h>#include<string.h>struct student{int num;char name[20];}s[3]={{111,'liuming '},{112,'sunlei '},{113,'yuhua'}};void main(void) {int k;s - > num += 10;strcpy((s + 2) - > name, ''huanghong '');for (k = 0; k < 3; k++) printf('' % -4 d % s '', s[k].num, 
 以下程序的输出结果为____。#include<stdio.h>#include<string.h>struct student{int num;char name[20];}s[3]={{111,'liuming '},{112,'sunlei '},{113,'yuhua'}};void main(void) {int k;s - > num += 10;strcpy((s + 2) - > name, ''huanghong '');for (k = 0; k < 3; k++) printf('' % -4 d % s '', s[k].num, 
 以下程序的输出结果为____。#include<stdio.h>#include<string.h>struct student{int num;char name[20];}s[3]={{111,'liuming '},{112,'sunlei '},{113,'yuhua'}};void main(void) {int k;s - >",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下程序#include<stdio.h>void main( int argc, char  *argv[] ){int n=0,i;　　for(i=1; i<argc; i++)  n=n*10+*argv[i]-‘0’;　　printf('%dn',n); }编译连接后生成可执行文件tt.exe,若运行时输入以下命令行:　　tt  12  345  678程序运行后的输出结果是()。A. 12B. 12345C. 12345678D. 136","有以下程序#include<stdio.h>void main( int argc, char  *argv[] ){int n=0,i;　　for(i=1; i<argc; i++)  n=n*10+*argv[i]-‘0’;　　printf('%dn',n); }编译连接后生成可执行文件tt.exe,若运行时输入以下命令行:　　tt  12  345  678程序运行后的输出结果是____","C. 12345678D. 123456789 首先，将题目中的程序代码和输入命令行转化为填空题。

#include<stdio.h>
void main( int argc, char *argv[] )
{
    int n = 0, i;
    for(i = 1; i < argc; i++)
        n = n * 10 + *argv[i] - '0';
    printf(""%d"", n);
}

tt 12 345 678

然后，分析程序运行后的输出结果。从输入命令行可以看出，程序接收了三个整数参数：12、345 和 678。在程序中，变量 n 用于存储这些整数的和，计算公式为 n = n * 10 + *argv[i] - '0'。

对于第一个参数 12，n = 12 * 10 + 12 - '0' = 123。
对于第二个参数 345，n = 345 * 10 + 345 - '0' = 3456。
对于第三个参数 678，n = 678 * 10 + 678 - '0' = 6789。

最后，使用 printf(""%d"", n) 输出结果为 6789。

综上，程序运行后的输出结果是 D. 12345678。","
 有以下程序#include<stdio.h>void main( int argc, char  *argv[] ){int n=0,i;　　for(i=1; i<argc; i++)  n=n*10+*argv[i]-‘0’;　　printf('%dn',n); }编译连接后生成可执行文件tt.exe,若运行时输入以下命令行:　　tt  12  3",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下列函数的功能是（）。int fun(char *s){    int num=0;   while(*s!=’0’) { if(*s==’ ’) num++;s++;}return num;}A. 计算字符串s中所含空格的个数B. 计算字符串s的长度C. 统计字符串s中所含字母的个数D. 统计字符串s中所含数字字符的个数",下列函数的功能是____。int fun(char *s){    int num=0;   while(*s!=’0’) { if(*s==’ ’) num++;s++;}return num;},"
 请将下列题目转化为填空题:

下列函数的功能是（）。int fun(char *s){    int num=0;   while(*s!=’0’) { if(*s==’ ‘) num++;s++;}return num;}A. 计算字符串s中所含空格的个数 B. 计算字符串s的长度 C. 统计字符串s中所含字母的个数 D. 统计字符串s中所含数字字符的个数","
 下列函数的功能是____。int fun(char *s){    int num=0;   while(*s!=’0’) { if(*s==’ ’) num++;s++;}return num;}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下列函数的功能是（）。int fun(int  n ){   if(n==1)  return 1;  else     return fun(n-1)+n;}A. 计算n!   B. 计算1+2+3+…+n   C. 计算1+2+3+…+n-1   D. 计算(n-1)!",下列函数的功能是____。int fun(int  n ){   if(n==1)  return 1;  else     return fun(n-1)+n;},"
 请将下列函数的功能转化为填空题:

下列函数的功能是（计算1+2+3+…+n）。int fun(int n ){   if(n==1)  return 1;  else     return fun(n-1)+n;}","
 下列函数的功能是____。int fun(int  n ){   if(n==1)  return 1;  else     return fun(n-1)+n;}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下列函数的功能是（）。void  fun(unsigned int n){  if(n<10) printf('' % d,'',n);  else {printf('' % d,'',n%10);fun(n10);}}A. 将组成数据n的各位输出（从低位到高位）B. 将组成数据n的各位输出（从高位到低位）C. 输出n除以10的余数D. 输出n除以10的商","下列函数的功能是____。void  fun(unsigned int n){  if(n<10) printf('' % d,'',n);  else {printf('' % d,'',n%10);fun(n10);}}","
 下列函数的功能是（B）。void  fun(unsigned int n){  if(n<10) printf('' % d,'',n);  else {printf('' % d,'',n%10);fun(n10);}}","
 下列函数的功能是____。void  fun(unsigned int n){  if(n<10) printf('' % d,'',n);  else {printf('' % d,'',n%10);fun(n10);}}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
表达式______的值是0。A. 3%5 == 3     B. 35.0== 0.6        C. 35             D. 3<5 ==1",表达式 3%5 == 3 的值是____,"
 将题目转化为填空题后，答案为B。填空题如下：

表达式______的值是0。
A. 3%5 == 3
B. 35.0== 0.6
C. 35
D. 3<5 ==1","
 表达式 35.0== 0.6 的值是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
表达式______的值是0。A. 3%5 == 3     B. 35.0== 0.6        C. 35             D. 3<5 ==1",表达式 35.0== 0.6 的值是____,"
 将下列题目转化为填空题:

表达式______的值是0。

A. 3%5 == 3    
B. 35.0== 0.6 
C. 35            
D. 3<5 ==1","
 表达式 3%5 == 3 的值是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
表达式______的值是0。A. 3%5 == 3     B. 35.0== 0.6        C. 35             D. 3<5 ==1",表达式 35 的值是____,"
 请将下列题目转化为填空题:

表达式______的值是0。
A. 3%5 == 3    
B. 35.0== 0.6 
C. 35            
D. 3<5 ==1","
 表达式 3%5 == 3 的值是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
表达式______的值是0。A. 3%5 == 3     B. 35.0== 0.6        C. 35             D. 3<5 ==1",表达式 3<5 ==1 的值是____,"
 将下列题目转化为填空题:

表达式______的值是0。

A. 3%5 == 3
B. 35.0== 0.6
C. 35
D. 3<5 ==1","
 表达式 35.0== 0.6 的值是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
对于以下的变量定义,不正确的表达式是______。   struct node{int j,k;}x,*p=&x;A. p->k=2;   B. (*p).k=2;     C. x.k=2           D. x->k=2","对于以下的变量定义,给出一个正确的表达式______。   struct node{int j,k;}x,*p=&x;","
 请将下列题目转化为填空题:

对于以下的变量定义,不正确的表达式是______。   struct node{int j,k;}x,*p=&x;A. p->k=2;   B. (*p).k=2;     C. x.k=2           D. x->k=2","
 对于以下的变量定义,不正确的表达式是______。   struct node{int j,k;}x,*p=&x;",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设变量定义为'int s[]=''hellonworldn '';',则数组s中有______个元素。A. 12            B. 13            C. 14              D. 15","设变量定义为'int s[]=''hellonworldn '';',则数组s中有______个元素","
 设变量定义为'int s[]=''hellonworldn ''';',则数组s中有______个元素。
A. 12            B. 13            C. 14              D. 15","
 设变量定义为'int s[]=''hellonworldn '';',则数组s中有______个元素",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
C标准库函数中,数学函数的原型在______头文件中。A. stdio.h       B. math.h        C. string.h        D. ctype.h","标准库函数中,数学函数的原型在______头文件中","
 C标准库函数中,数学函数的原型在______头文件中。

A. stdio.h
B. math.h
C. string.h
D. ctype.h","
 标准库函数中,数学函数的原型在______头文件中",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若变量c为char类型,则能正确判断出c为小写字母的表达式是______。A. 'a'<=c<='z'  B. (c>='a')||(c<='z')   C. ('a'<=c)and('z'>=c)   D. (c>='a')&&(c<='z')","若变量c为char类型,则能正确判断出c为小写字母的表达式是______","
 请将下列题目转化为填空题:

若变量c为char类型,则能正确判断出c为小写字母的表达式是______。A. 'a'<=c<='z'  B. (c>='a')||(c<='z')   C. ('a'<=c)and('z'>=c)   D. (c>='a')&&(c<='z')","
 若变量c为char类型,则能正确判断出c为小写字母的表达式是______",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
语句for(a=0,b=0;b!=100&&a<5;a++) scanf('' % d '',&b); scanf函数的执行次数是______。A. 4         B. 6          C. 5           D. 1","语句for(a=0,b=0;b!=100&&a<5;a++) scanf('' % d '',&b); scanf函数的执行次数是______","
 请将下列题目转化为填空题:

语句for(a=0,b=0;b!=100&&a<5;a++) scanf('' % d '',&b); scanf函数的执行次数是______。A. 4         B. 6          C. 5           D. 1","
 语句for(a=0,b=0;b!=100&&a<5;a++) scanf('' % d '',&b); scanf函数的执行次数是______",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有数组定义'char array[]=''China '';数组 array所占的空间是______。A. 4个字节  B. 5个字节   C. 6个字节  D. 7个字节",有数组定义'char array[]=''China '';则数组 array所占的空间是______,"
 请将下列题目转化为填空题:

有数组定义'char array[]=''China '';数组 array所占的空间是______。A. 4个字节  B. 5个字节   C. 6个字节   D. 7个字节","
 有数组定义'char array[]=''China '';则数组 array所占的空间是______",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
C语言程序的基本单位是______。A. 函数     B. 过程      C. 子程序         D. 子例程",C语言程序的基本单位是______,"
 C语言程序的基本单位是______。

A. 函数
B. 过程
C. 子程序
D. 子例程","
 C语言程序的基本单位是______",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
C语言中用于结构化程序设计的三种基本结构是______。A. 顺序结构、选择结构、模块结构       B. 选择结构、循环结构、模块结构C. while   do-while   for             D. 顺序结构、选择结构、循环结构",C语言中用于结构化程序设计的三种基本结构是______,"
 C语言中用于结构化程序设计的三种基本结构是______。

A. 顺序结构、选择结构、模块结构
B. 选择结构、循环结构、模块结构
C. while do-while for
D. 顺序结构、选择结构、循环结构","
 C语言中用于结构化程序设计的三种基本结构是______",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
以下程序段,while 循环执行的次数是______。int k=0; while(k=1) k++;A. 无限次 B. 有语法错,不能执行C. 一次也不执行D. 执行1次","以下程序段,while 循环执行的次数是______。int k=0; while(k=1) k++;","
 请将下列题目转化为填空题:

以下程序段,while 循环执行的次数是______。int k=0; while(k=1) k++;A. 无限次 B. 有语法错,不能执行 C. 一次也不执行 D. 执行1次","
 以下程序段,while 循环执行的次数是______。int k=0; while(k=1) k++;",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设有函数调用语句'func((a1,a2,a3),(a4,a5));',则函数func中有______个形参。A. 1       B. 5      C. 2       D. 不合法","设有函数调用语句'func((a1,a2,a3),(a4,a5));',则函数func中有______个形参","
 1. 分析函数调用语句'func((a1,a2,a3),(a4,a5));'，可知其中包含两个参数包，即两个元组。
2. 每个参数包中有多个参数，所以这个函数调用语句中有2个形参。
3. 因此，答案是C. 2。","
 设有函数调用语句'func((a1,a2,a3),(a4,a5));',则函数func中有______个形参",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
当调用函数时,实参是一个数组名,则向函数传送的是______。A. 数组的长度B. 数组的首地址C. 数组每一个元素的地址 D. 数组每个元素中的值","当调用函数时,实参是一个数组名,则向函数传送的是______","
 1. 分析题目，确定在函数调用时，实参是一个数组名。
2. 根据数组名可以推导出，传递给函数的是数组的首地址。
3. 分析选项：
   A. 数组的长度 - 错误，不是传递的内容
   B. 数组的首地址 - 正确
   C. 数组每一个元素的地址 - 错误，不是传递的内容
   D. 数组每个元素中的值 - 错误，不是传递的内容

最终答案：B","
 当调用函数时,实参是一个数组名,则向函数传送的是______",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设变量定义为'int a[2]={1,3}, *p=&a[0]+1;',则*p的值是______。A. 2            B. 3            C. 4             D. &a[0]+1","设变量定义为'int a[2]={1,3}, *p=&a[0]+1;',则*p的值是______","
 设变量定义为'int a[2]={1,3}, *p=&a[0]+1;',则*p的值是______。
A. 2            B. 3            C. 4             D. &a[0]+1","
 设变量定义为'int a[2]={1,3}, *p=&a[0]+1;',则*p的值是______",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下列程序段的输出结果是______。int *p,*q,k=1,j=10; p=&j; q=&k;p=q;(*p)++; printf('' % d '',*q);A. 1            B. 2            C. 10            D. 11","下列程序段的输出结果是______。int *p,*q,k=1,j=10; p=&j; q=&k;p=q;(*p)++; printf('' % d '',*q);","
 下列程序段的输出结果是______。

int *p,*q,k=1,j=10; p=&j; q=&k;p=q;(*p)++; printf('' % d '',*q);

A. 1            B. 2            C. 10            D. 11","
 下列程序段的输出结果是______。int *p,*q,k=1,j=10; p=&j; q=&k;p=q;(*p)++; printf('' % d '',*q);",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设变量定义为'int x, *p=&x;',则&*p相当于______。A. p            B. *p           C. x             D. *&x","设变量定义为'int x, *p=&x;',则&*p相当于______","
 设变量定义为'int x, *p=&x;',则&*p相当于______。

A. p
B. *p
C. x
D. *&x","
 设变量定义为'int x, *p=&x;',则&*p相当于______",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
程序中对fun函数的说明为'void * fun();',此说明的含义是______。A. fun函数无返回值B. fun函数的返回值可以是任意的数据类型C. fun函数的返回值是无值型的指针类型D. 指针fun指向一个函数,该函数无返回值","程序中对fun函数的说明为'void * fun();',此说明的含义是______","
 请将下列题目转化为填空题:

程序中对fun函数的说明为'void * fun();',此说明的含义是______。

A. fun函数无返回值
B. fun函数的返回值可以是任意的数据类型
C. fun函数的返回值是无值型的指针类型
D. 指针fun指向一个函数,该函数无返回值","
 程序中对fun函数的说明为'void * fun();',此说明的含义是______",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设有 int x=11; 则表达式 (++x)%3 的值是（　）。A. 0　B. 1  C. 2  D. 3",设有 int x=11; 则表达式 (++x)%3 的值是____,"
 请将下列题目转化为填空题:

设有 int x=11; 则表达式 (++x)%3 的值是（　）。A. 0　B. 1  C. 2  D. 3","
 设有 int x=11; 则表达式 (++x)%3 的值是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
C语言源程序名的后缀是（　）。A. .exe           B. .cp            C. .obj                D. .c",C语言源程序名的后缀是_____,"
 1. 分析题目，需要找出C语言源程序名的后缀。
2. 分析选项A、B、C、D，了解它们分别代表什么文件后缀。
   A..exe：Windows可执行文件后缀
   B..cp：编译后的目标文件后缀（不常见）
   C..obj：编译后的目标文件后缀（不常见）
   D..c：C语言源程序文件后缀
3. 根据分析，选项D正确。

最终答案：D","
 C语言源程序名的后缀是_____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
C语言中运算对象必须是整型的运算符是 （　）。A. %= 　　　　B. ／ 　　 C. =　　　　　 D. <=",C语言中运算对象必须是整型的运算符是____,"
 C语言中运算对象必须是整型的运算符是 （A. %=）。","
 C语言中运算对象必须是整型的运算符是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若有定义语句：int a[3][6]; ,按在内存中的存放顺序,a数组的第10个元素是（　）。A. a[0][4]         B. a[0][3]         C. a[1][4]        D. a[1][3]","若有定义语句：int a[3][6]; ,按在内存中的存放顺序,a数组的第10个元素是____","
 请将下列题目转化为填空题:

若有定义语句：int a[3][6];,按在内存中的存放顺序,a数组的第10个元素是（　）。A. a[0][4]         B. a[0][3]         C. a[1][4]        D. a[1][3]","
 若有定义语句：int a[3][6];,按在内存中的存放顺序,a数组的第10个元素是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
语句printf('' abre 'hi' yboun '');的输出结果是（　）。(说明:'b'是退格符)A. re'hi'you  B. abre'hi'ybou  C. abre'hi'ybou　D. abre'hi'ybou ",语句printf('' abre 'hi' yboun '');的输出结果是____,"
 请将下列题目转化为填空题:

语句`printf('' abre 'hi' yboun '');`的输出结果是（　）。(说明:'b'是退格符)

A. re'hi'you  
B. abre'hi'ybou  
C. abre'hi'ybou  
D. abre'hi'ybou 

正确答案是（D）abre'hi'ybou。","
 语句printf('' abre 'hi' yboun '');的输出结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下列程序执行后的输出结果是（　）。void main(){ int x='f'; printf('' % c n '','A'+(x-'a'+1)); }A. A　　　 B. B　　　 C. F 　　D. G","下列程序执行后的输出结果是____。void main(){ int x='f'; printf('' % c n '','A'+(x-'a'+1)); }","
 请将下列程序执行后的输出结果是（　）。

void main(){ int x='f'; printf('' % c n '','A'+(x-'a'+1)); }

A. A
B. B
C. F
D. G","
 下列程序执行后的输出结果是____void main(){ int x='f'; printf('' % c n '','A'+(x-'a'+1)); }",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若变量已正确定义,有以下程序段i=0;do {printf（'' % d,'',i）;}while（i++）;printf（'' % dn '',i）其输出结果是（　）。A. 0,0       B. 0,1        C. 1,1      D. 程序进入无限循环","若变量已正确定义,有以下程序段i=0;do {printf（'' % d,'',i）;}while（i++）;printf（'' % dn '',i）其输出结果是____","
 请将下列程序段填空，使其符合语法和逻辑要求：

（ ， ）();

（ ， ）();

（ ， ）();

（ ， ）();","
 若变量已正确定义,有以下程序段i=0;do {printf（'' % d,'',i）;}while（i++）;printf（'' % dn '',i）其输出结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下程序#include  <stdio.h>void main（）{int i,j,m=55;for（i=1;i<=3;i++）for（j=3;j<=i;j++） m=m%j;取余数printf（'' % dn '',m）;}程序的运行结果是(  )。A. 0            B. 1           C. 2            D. 3","有以下程序#include  <stdio.h>void main（）{int i,j,m=55;for（i=1;i<=3;i++）for（j=3;j<=i;j++） m=m%j;取余数printf（'' % dn '',m）;}程序的运行结果是____","
 请将下列程序#include <stdio.h>void main（）。(){int i,j,m=55;for（i=1;i<=3;i++）for（j=3;j<=i;j++） m=m%j;取余数printf（'' % dn '',m）;}程序的运行结果是(  )。A. 0            B. 1           C. 2            D. 3","
 有以下程序#include  <stdio.h>void main（）{int i,j,m=55;for（i=1;i<=3;i++）for（j=3;j<=i;j++） m=m%j;取余数printf（'' % dn '',m）;}程序的运行结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
已定义以下函数　　fun(int *p)　　{ return *p; }　　该函数的返回值是（　）。A. 不确定的值 　　　　　B. 形参p所指存储单元中的值C. 形参p中存放的值　　　D. 形参p的地址值",已定义以下函数　　fun(int *p)　　{ return *p; }　　该函数的返回值是____,"
 请将下列题目转化为填空题：

已定义以下函数　　fun(int *p)　　{ return *p; }　　该函数的返回值是（　）。
A. 不确定的值 
B. 形参p所指存储单元中的值 
C. 形参p中存放的值 
D. 形参p的地址值","
 已定义以下函数　　fun(int *p)　　{ return *p; }　　该函数的返回值是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
执行下面的程序段后,变量k中的值为（　）。int k=3, s[2];s[0]=k; k=s[1]*10;A. 10 　　B. 3　　 C. 不定值　　D. 0","执行下面的程序段后,变量k中的值为_____。int k=3, s[2];s[0]=k; k=s[1]*10;","
 执行下面的程序段后,变量k中的值为（A. 10）。int k=3, s[2];s[0]=k; k=s[1]*10;","
 执行下面的程序段后,变量k中的值为_____。int k=3, s[2];s[0]=k; k=s[1]*10;",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下程序void main(){char s[ ]={ ''aeiou ''},*ps;ps=s; printf('' % cn '',(*ps)+4);}程序运行后的输出结果是________。A. a　B. o 　C. u　D. e","有以下程序void main(){char s[ ]={ ''aeiou ''},*ps;ps=s; printf('' % cn '',(*ps)+4);}程序运行后的输出结果是________","
 请将下列程序转化为填空题:

有以下程序void main(){char s[ ]={ ''aeiou ''},*ps;ps=s; printf('' % cn '',(*ps)+4);}程序运行后的输出结果是________。A. a　B. o 　C. u　D. e","
 有以下程序void main(){char s[ ]={ ''aeiou ''},*ps;ps=s; printf('' % cn '',(*ps)+4);}程序运行后的输出结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下程序 #define F(X,Y)  X*Ymain(){int a=3, b=4;printf('' % dn '', F(a+b, a-b));}程序运行后的输出结果是（　）。A. 12 　B. 7 　C. -7 　D. 11","有以下程序 #define F(X,Y)  X*Ymain(){int a=3, b=4;printf('' % dn '', F(a+b, a-b));}程序运行后的输出结果是____","
 请将下列程序的输出结果用填空完成：

#define F(X,Y)  X*Y
main(){int a=3, b=4;printf('' % dn '', F(a+b, a-b));}

程序运行后的输出结果是（　）。
A. 12
B. 7
C. -7
D. 11","
 有以下程序 #define F(X,Y)  X*Ymain(){int a=3, b=4;printf('' % dn '', F(a+b, a-b));}程序运行后的输出结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下程序main(){int m[][3]={1,4,7,2,5,8,3,6,9};int i,j,k=2;for(i=0;i<3;i++){ printf('' % d '',m[k][i]); }}执行后输出结果是（　）。A. 2 5 8 　B. 3 6 9 　C. 4 5 6 　D. 7 8 9","有以下程序main(){int m[][3]={1,4,7,2,5,8,3,6,9};int i,j,k=2;for(i=0;i<3;i++){ printf('' % d '',m[k][i]); }}执行后输出结果是_____","
 请将下列程序main(){int m[][3]={1,4,7,2,5,8,3,6,9};int i,j,k=2;for(i=0;i<3;i++){ printf('' % d '',m[k][i]); }}执行后输出结果是（　）。A. 2 5 8 　B. 3 6 9 　C. 4 5 6 　D. 7 8 9","
 有以下程序main(){int m[][3]={1,4,7,2,5,8,3,6,9};int i,j,k=2;for(i=0;i<3;i++){ printf('' % d '',m[k][i]); }}执行后输出结果是_____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下程序#include <stdio.h>void main(){  FILE *fp; int i;char ch[]='abcd',t; 写读二进制fp=fopen('abc.dat','wb+');for(i=0;i<4;i++)fwrite（&ch[i],1,1,fp）;fseek(fp,-2L,SEEK_END); 说明：SEEK_END为文件尾fread(&t,1,1,fp);fclose(fp);printf('%cn',t);}程序执行后的输出结果是________。A. c　B. d　C. aD. b","有以下程序#include <stdio.h>void main(){  FILE *fp; int i;char ch[]='abcd',t; 写读二进制fp=fopen('abc.dat','wb+');for(i=0;i<4;i++)fwrite（&ch[i],1,1,fp）;fseek(fp,-2L,SEEK_END); 说明：SEEK_END为文件尾fread(&t,1,1,fp);fclose(fp);printf('%cn',t);}程序执行后的输出结果是_______","(""The length of the file is %d\n"",length(t)); 以下空格中的内容应填写什么?

1. 将文件'abc.dat'打开,并写入文件,写入4个字符'abcd'后,文件的内容应为______.
2. 文件'abc.dat'被写入后,如果文件'abc.dat'的内容变为'abcde'。","
 有以下程序#include <stdio.h>void main(){  FILE *fp; int i;char ch[]='abcd',t; 写读二进制fp=fopen('abc.dat','wb+');for(i=0;i<4;i++)fwrite（&ch[i],1,1,fp）;fseek(fp,-2L,SEEK_END); 说明：SEEK_END为文件尾fread(&t,1,1,fp);fclose(fp);printf ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
判断 char 型变量c1是否为大写字母的正确表达式（ ）A. ’A’<=c1<=’Z’ B. (c1>=’A’)&(c1<=’Z’)C. (c1>=’A’)&&(c1<=’Z’) D. (‘a<=c1’)AND(‘Z’>=c1)",判断 char 型变量c1是否为大写字母的正确表达式为____,"
 将题目转化为填空题后，请填写以下空白处：

判断 char 型变量 c1 是否为大写字母的正确表达式是（ ）
A. '\A'<=c1<='Z'
B. (c1>='A')&(c1<='Z')
C. (c1>='A')&&(c1<='Z')
D. ('a<=c1')AND('Z'>=c1)","
 判断 char 型变量c1是否为大写字母的正确表达式为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
源程序要正确地运行,必须要有什么函数?（  ）A. printf函数 B. 自定义的函数 C. main 函数 D. 不需要函数","源程序要正确地运行,必须要有____函数","
 将题目转化为填空题后，题目变为：

源程序要正确地运行,必须要有什么函数?（ ）A. printf函数 B. 自定义的函数 C. main 函数 D. 不需要函数

正确答案为：C. main 函数","
 源程序要正确地运行,必须要有什么函数?____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
在Ｃ语言中逻辑'真'等价于以下（  ）A. 整数１ B. 大于０的数 C. 小于０的数 D. 不等于０的数",在Ｃ语言中逻辑'真'等价于____,"
 以下哪个选项能表示“真”的逻辑等价物？
A. 整数1
B. 大于0的数
C. 小于0的数
D. 不等于0的数","
 在Ｃ语言中逻辑'真'等价于____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若 a 为整型变量,且有以下语句 (  )a=-017L;printf('' % dn '',a);则下面哪个说法是正确的?A. 赋值不合法   B. 输出值为- 17      C. 输出为不确定值   D. 输出值为- 15","若 a 为整型变量,且有以下语句 (  )a=-017L;printf('' % dn '',a);输出值为____","
 请将下列题目转化为填空题:

若 a 为整型变量,且有以下语句 (  )a=-017L;printf('' % dn '',a);则下面哪个说法是正确的?A. 赋值不合法   B. 输出值为- 17      C. 输出为不确定值   D. 输出值为- 15

题目:

若 a 为整型变量,且有以下语句 (  )a=-017L;printf('' % dn '',a);则下面哪个说法是正确的?A. 赋值不合法   B. 输出值为- 17      C. 输出为不确定值   D. 输出值为- 15

填空题:

若 a 为整型变量,且有以下语句 (  )a=-017L;printf('' % dn '',a);则下面哪个说法是正确的?A. 赋值不合法   B. 输出值为- 17      C. 输出为不确定值   D. 输出值为- 15","
 若 a 为整型变量,且有以下语句 (  )a=-017L;printf('' % dn '',a);输出值为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
以下程序的运行结果是（  ）main(){int x=1,y=2,z=3;z+=x>y?++x :++y;printf('%d ',z) ;}A. 1     B. 2        C. 3        D. 6","以下程序的运行结果是____main(){int x=1,y=2,z=3;z+=x>y?++x :++y;printf('%d ',z) ;}","
 以下程序的运行结果是（  ）main(){int x=1,y=2,z=3;z+=x>y?++x :++y;printf('%d ',z) ;}

A. 1     B. 2        C. 3        D. 6","
 以下程序的运行结果是____main(){int x=1,y=2,z=3;z+=x>y?++x :++y;printf('%d ',z) ;}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
如果对以下程序进行编译和运行,其结果为（ ）main (){int x,y; x=555;y=x+2;y=x+2;printf('x=%d ',x,y) ;}A. 程序不能通过编译,出现错误提示信息B. 程序能通过编译,不出现错误提示信息C. 程序能通过编译,但不能运行D. 显示 x=555","如果对以下程序进行编译和运行,其结果为____main (){int x,y; x=555;y=x+2;y=x+2;printf('x=%d ',x,y) ;}","
 请将下列程序填空后运行,其结果为（ ）main (){int x,y; x=555;y=x+2;y=x+2;printf('x=%d ',x,y) ;}

A. 程序不能通过编译,出现错误提示信息
B. 程序能通过编译,不出现错误提示信息
C. 程序能通过编译,但不能运行
D. 显示 x=555","
 如果对以下程序进行编译和运行,其结果为____main (){int x,y; x=555;y=x+2;y=x+2;printf('x=%d ',x,y) ;}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
在 C 语言的 if 语句中,用作判断的表达式为 (  )A. 关系表达式   B. 逻辑表达式   C. 算术表达式   D. 任意表达式","在 C 语言的 if 语句中,用作判断的表达式为____","
 在 C 语言的 if 语句中,用作判断的表达式为 (  )A. 关系表达式   B. 逻辑表达式   C. 算术表达式   D. 任意表达式","
 在 C 语言的 if 语句中,用作判断的表达式为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下面这个程序段的输出是什么？(  )int a,b,c;a=7;b=8;c=9;if(a>b)a=b ,b=c ；c=a；printf(''a = % db = % d c = % dn '',a,b,c);A. a=7 b=8 c=7      B. a=7 b=9 c=7         C. a=8 b=9 c=7      D. a=8 b=9 c=8","下面这个程序段的输出是____int a,b,c;a=7;b=8;c=9;if(a>b)a=b ,b=c ；c=a；printf(''a = % db = % d c = % dn '',a,b,c);","
 下面那个程序段的输出是什么？(  )

int a,b,c;
a=7;
b=8;
c=9;
if(a>b)
    a=b ;
    b=c ;
c=a;
printf(''a = % db = % d c = % dn '',a,b,c);

A. a=7 b=8 c=7      
B. a=7 b=9 c=7        
C. a=8 b=9 c=7      
D. a=8 b=9 c=8","
 下面这个程序段的输出是____int a,b,c;a=7;b=8;c=9;if(a>b)a=b,b=c ；c=a；printf(''a = % db = % d c = % dn '',a,b,c);",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下列程序执行后输出的结果为（  ）#include<stdio.h>abc(){ static int x=0; ++x ; printf('%d',x) ;}main (){ abc() ; abc() ;abc() ;}A. 000      B. 111      C. 1,2,3        D. 123","下列程序执行后输出的结果为____#include<stdio.h>abc(){ static int x=0; ++x ; printf('%d',x) ;}main (){ abc() ; abc() ;abc() ;}","
 下列程序执行后输出的结果为（  ）

#include<stdio.h>
abc(){ 
 static int x=0; 
 ++x ; 
 printf('%d',x) ; 
}main (){ 
 abc() ; 
 abc() ; 
 abc() ; 
}

A. 000      B. 111      C. 1,2,3        D. 123","
 下列程序执行后输出的结果为____#include<stdio.h>abc(){ static int x=0; ++x ; printf('%d',x) ;}main (){ abc() ; abc() ;abc() ;}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下列程序的输出结果为（  ）main (){ int a[5]= {2,4,5,6,10},*p,**k ;p=a ; k=&p; printf('%d ',*(P++)) ; printf('%dn ',**k) ;}A. 4 4     B. 2 2      C. 2 4      D. 4 6","下列程序的输出结果为____main (){ int a[5]= {2,4,5,6,10},*p,**k ;p=a ; k=&p; printf('%d ',*(P++)) ; printf('%dn ',**k) ;}","
 请将下列程序的输出结果为（  ）main (){ int a[5]= {2,4,5,6,10},*p,**k ;p=a ; k=&p; printf('%d ',*(P++)) ; printf('%dn ',**k) ;}A. 4 4     B. 2 2      C. 2 4      D. 4 6

填空题：

下列程序的输出结果为（  ）main (){ int a[5]= {2,4,5,6,10},*p,**k ;p=a ; k=&p; printf('%d ',*(P++)) ; printf('%dn ',**k) ;}A. 4 4     B. 2 2      C. 2 4      D. 4 6","
 下列程序的输出结果为____main (){ int a[5]= {2,4,5,6,10},*p,**k ;p=a ; k=&p; printf('%d ',*(P++)) ; printf('%dn ',**k) ;}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
该源程序执行后,屏幕上显示什么?(   )void main(){int a;float b;a=4;b=9.5;printf(''a = % d,b = % 4.2 fn '',a,b);}A. a=%d,b=%fn        B. a=%d,b=%f      C. a=4,b=9.50          D. a=4,b=9.","该源程序执行后,屏幕上显示____void main(){int a;float b;a=4;b=9.5;printf(''a = % d,b = % 4.2 fn '',a,b);}","
 请将下列题目转化为填空题:

该源程序执行后,屏幕上显示什么?(   )
void main(){int a;float b;a=4;b=9.5;printf(''a = % d,b = % 4.2 fn '',a,b);}
A. a=%d,b=%fn        B. a=%d,b=%f      C. a=4,b=9.50          D. a=4,b=9.

答案:D. a=4,b=9.","
 该源程序执行后,屏幕上显示____void main(){int a;float b;a=4;b=9.5;printf(''a = % d,b = % 4.2 fn '',a,b);}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
以下程序的输出结果为（  ）#include<stdio.h>main (){ int a=010,b=10; printf('%d,%dn ',a++,--b) ; }A. 10,10     B. 8,10    C. 10,9     D. 8,9","以下程序的输出结果为____#include<stdio.h>main (){ int a=010,b=10; printf('%d,%dn ',a++,--b) ; }","
 以下程序的输出结果为（  ）

#include<stdio.h>
main (){ 
 int a=0;
 int b=10; 
 printf('%d,%dn ',a++,--b) ; 
 }
A. 10,10 
 B. 8,10 
 C. 10,9 
 D. 8,9","
 以下程序的输出结果为_____#include<stdio.h>main (){ int a=010,b=10; printf('%d,%dn ',a++,--b) ; }",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若输入 12 和 8,以下程序的输出结果为（   ）main(){ int a,b,num1,num2,temp;scanf('%d,%d ',&num1,&num2) ;if(num1>num2){temp=num1; num1=num2;num2=temp;}a=num1; b=num2;while(b!=0){temp=a%b ; a=b ;b=temp;}printf('%d,%d ',a,num1*num2a) ;}A. 4,24      B. 3,24     C. 5,25     D. 4,25","若输入 12 和 8,以下程序的输出结果为____main(){ int a,b,num1,num2,temp;scanf('%d,%d ',&num1,&num2) ;if(num1>num2){temp=num1; num1=num2;num2=temp;}a=num1; b=num2;while(b!=0){temp=a%b ; a=b ;b=temp;}printf('%d,%d ',a,num1*num2a) ;}","1, 120B. 2, 200C. 3, 240D. 4, 120D. 5, 120D. 6, 120D. 7, 120D. 8, 120D. 9, 120D. 10, 120D. 11, 120D. 12, 120D. 13, 120D. 14, 120D. 15, 120D. 16, 120D. 17, 120D. 18, 120D. 19, 120D. 20, 120D. 21, 120D. 22, 120D. 23, 120D. 24, 120D. 25, 120D. 26, 120D. 27, 120D. 28, 120D. 29, 120D. 30, 120D. 31, 120D. 32, 120D. 33, 120D. 34, 120D. 35, 120D. 36, 120D. 37, 120D. 38, 120D. 39, 120D. 40, 120D. 41, 120D. 42, 120D. 43, 120D. 44, 120D. 45, 120D. 46, 120D. 47, 120D. 48, 120D. 49, 120D. 50, 120D. 51, 120D. 52, 120D. 5","
 若输入 12 和 8,以下程序的输出结果为____main(){ int a,b,num1,num2,temp;scanf('%d,%d ',&num1,&num2) ;if(num1>num2){temp=num1; num1=num2;num2=temp;}a=num1; b=num2;while(b!=0){temp=a%b ; a=b ;b=temp;}printf('%d,%d ',a,num1*num2a) ;}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若有以下说明和语句,则输出结果是 (   )char str[]=''''c:abc.dat'''';printf('' % s '',str);A. 字符串中有非法字符  B. ''c: abc.dat ''    C. ''''c: abc.dat ''   D. ''c: abc.dat ''","若有以下说明和语句,则输出结果是____char str[]=''''c:abc.dat'''';printf('' % s '',str);","
 请将下列题目转化为填空题:

若有以下说明和语句,则输出结果是 (   )

char str[] = '\0'c:abc.dat';printf('' % s '',str);

A. 字符串中有非法字符
B. ''c: abc.dat ''
C. ''''c: abc.dat ''
D. ''c: abc.dat ''","
 若有以下说明和语句,则输出结果是____char str[]=''''c:abc.dat'''';printf('' % s '',str);",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若 k 为整型, 以下while循环执行(    )次.k=2;while(k=0)printf('' % d '',k),k--;printf(''n '');A. 无限次   B. 0 次   C. 1 次   D. 2 次","若 k 为整型, 以下while循环执行____次.k=2;while(k=0)printf('' % d '',k),k--;printf(''n '');","
 请将下列题目转化为填空题:

若 k 为整型, 以下while循环执行(    )次.k=2;while(k=0)printf('' % d '',k),k--;printf(''n '');A. 无限次   B. 0 次   C. 1 次   D. 2 次","
 若 k 为整型, 以下while循环执行____次.k=2;while(k=0)printf('' % d '',k),k--;printf(''n '');",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若要定义b为 5*10 的二维数组,正确的定义语句为（）A. float b(5,10)              B. float b[5,10]C. float [5][10]              D. float b[5][10]","若要定义b为 5*10 的二维数组,正确的定义语句为____","
 将题目转化为填空题后，正确的定义语句为：

若要定义b为 5*10 的二维数组,正确的定义语句为（）。

选项A: float b(5,10)
选项B: float b[5,10]
选项C: float [5][10]
选项D: float b[5][10]

请从上述选项中选择正确的定义语句。","
 若要定义b为 5*10 的二维数组,正确的定义语句为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
C 语言程序由什么组成?（  ）A. 子程序   B. 主程序和子程序   C. 函数   D. 过程",C 语言程序由____组成,"
 C 语言程序由什么组成?（  ）
A. 子程序  
B. 主程序和子程序  
C. 函数  
D. 过程","
 C 语言程序由____组成",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
判断 char 型变量c1是否为大写字母的正确表达式（ ）A. ’A’<=c1<=’Z ’                              B. (c1>=’A’)&(c1<=’Z’)C. (c1>=’A’)&&(c1<=’Z’)              D. (‘a<=c1’)AND(‘Z’>=c1)",判断 char 型变量c1是否为大写字母的正确表达式是____,"
 判断 char 型变量 c1 是否为大写字母的正确表达式是（ ）A. '\A'<=c1<='Z'                              B. (c1>='A')&(c1<='Z')                          C. (c1>='A')&&(c1<='Z')                          D. (‘a<=c1’)AND(‘Z’>=c1)","
 判断 char 型变量c1是否为大写字母的正确表达式是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
(多选)这段程序中的常量有:#define PI    3.14void main(){int sum;sum = 10 + 15;printf(''sum = % dn '',sum);printf(''result is 25 n '');}这段程序中常量有( ):A. 10      B. sum      C. 15      D. 25      E. main      F. PI","#define PI    3.14void main(){int sum;sum = 10 + 15;printf(''sum = % dn '',sum);printf(''result is 25 n '');}这段程序中常量有____","
 这段程序中的常量有:#define PI 3.14void main(){int sum;sum = 10 + 15;printf(''sum = % dn '',sum);printf(''result is 25 n '');}这段程序中常量有( ):A. 10      B. sum      C. 15      D. 25      E. main      F. PI","
 #define PI    3.14void main(){int sum;sum = 10 + 15;printf(''sum = % dn '',sum);printf(''result is 25 n '');}这段程序中常量有____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
在C语言中逻辑'真 '等价于以下（   ）A. 整数1 B. 大于0的数   C. 小于0的数  D. 不等于0的数",在C语言中逻辑'真 '等价于____,"
 1. 分析题目，找出关键词""逻辑'真'""。
2. 分析选项A、B、C、D，判断与""逻辑'真'""的等价关系。
3. 选项A：整数1，与""逻辑'真'""等价；
4. 选项B：大于0的数，与""逻辑'真'""不等价；
5. 选项C：小于0的数，与""逻辑'真'""不等价；
6. 选项D：不等于0的数，与""逻辑'真'""不等价。
7. 根据分析，选项A与""逻辑'真'""等价。

最终答案：A","
 在C语言中逻辑'真 '等价于____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
在 C 语言的 if 语句中,用作判断的表达式为（  ）。A. 关系表达式   B. 逻辑表达式   C. 算术表达式   D. 任意表达式","在 C 语言的 if 语句中,用作判断的表达式为____","
 在 C 语言的 if 语句中,用作判断的表达式为（B. 逻辑表达式）。","
 在 C 语言的 if 语句中,用作判断的表达式为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
程序片段输出结果为（   ）m=37;n=13;while(m!=n){while(m>n)m=m-n;while(n>m)n-=m;}printf(''m = % dn '',m);A. m=13      B. m=11        C. m=1        D. m=2","程序片段输出结果为__m=37;n=13;while(m!=n){while(m>n)m=m-n;while(n>m)n-=m;}printf(''m = % dn '',m);","
 请将下列题目转化为填空题:

程序片段输出结果为（ ）m=37;n=13;while(m!=n){while(m>n)m=m-n;while(n>m)n-=m;}printf(''m = % dn '',m);A. m=13      B. m=11        C. m=1        D. m=2","
 程序片段输出结果为__m = 37;n = 13;while(m!=n){while(m>n)m=m-n;while(n>m)n-=m;}printf(''m = % dn '',m);",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下列程序执行后,a 的值为（  ）main (){ int a,b;for(a=1,b=1;a<=100;a++){ if(b>=20) break;if(b%3==1) {  b+=3;  continue;}b-=5;}}A. 7      B. 8      C. 9      D. 10","下列程序执行后,a 的值为____main (){ int a,b;for(a=1,b=1;a<=100;a++){ if(b>=20) break;if(b%3==1) {  b+=3;  continue;}b-=5;}}","
 请将下列程序执行后,a 的值为（  ）main (){ int a,b;for(a=1,b=1;a<=100;a++){ if(b>=20) break;if(b%3==1) {  b+=3;  continue;}b-=5;}}

A. 7      B. 8      C. 9      D. 10","
 下列程序执行后,a 的值为____main (){ int a,b;for(a=1,b=1;a<=100;a++){ if(b>=20) break;if(b%3==1) {  b+=3;  continue;}b-=5;}}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下列程序的运行结果为（  ）main (){ char a[7]= {'65ab21 '}; int i,s=0;for (i=0;a[i]>= ’0 ’&&a[i]<= ’9 ’;i++)s=10*s+a[i]-‘0 ’;printf('%d ',s);}A. 12AB56        B. 6521        C. 65           D. 62","下列程序的运行结果为____main (){ char a[7]= {'65ab21 '}; int i,s=0;for (i=0;a[i]>= ’0 ’&&a[i]<= ’9 ’;i++)s=10*s+a[i]-‘0 ’;printf('%d ',s);}","
 请将下列程序的运行结果为（  ）main (){ char a[7]= {'65ab21 '}; int i,s=0;for (i=0;a[i]>= ’0 ’&&a[i]<= ’9 ’;i++)s=10*s+a[i]-‘0 ’;printf('%d ',s);}A. 12AB56        B. 6521        C. 65           D. 62

请将选项中的数字填入空白处，使得程序的运行结果与题目所给的选项一致。

选项：
A. 12AB56
B. 6521
C. 65
D. 62","
 下列程序的运行结果为____main (){ char a[7]= {'65ab21 '}; int i,s=0;for (i=0;a[i]>= ’0 ’&&a[i]<= ’9 ’;i++)s=10*s+a[i]-‘0 ’;printf('%d ',s);}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下列程序执行后输出的结果为（   ）#include<stdio.h>abc(){ static int x=0; ++x; printf('%d ',x);}main (){ abc(); abc();abc();}A. 0 0 0 B. 1 1 1 C. 1 ,2,3 D. 1 2 3","下列程序执行后输出的结果为_____#include<stdio.h>abc(){ static int x=0; ++x; printf('%d ',x);}main (){ abc(); abc();abc();}","
 下列程序执行后输出的结果为（D. 1 2 3）。","
 下列程序执行后输出的结果为_____#include<stdio.h>abc(){ static int x=0; ++x; printf('%d ',x);}main (){ abc(); abc();abc();}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下列程序的输出结果为（  ）main (){ int a[5]= {2,4,5,6,10},*p,**k;p=a; k=&p; printf('%d ',*(P++)); printf('%dn ',**k); } A. 4 4        B. 2 2        C. 2 4       D. 4 6","下列程序的输出结果为____main (){ int a[5]= {2,4,5,6,10},*p,**k;p=a; k=&p; printf('%d ',*(P++)); printf('%dn ',**k); } ","
 下列程序的输出结果为（  ）main (){ int a[5]= {2,4,5,6,10},*p,**k;p=a; k=&p; printf('%d ',*(P++)); printf('%dn ',**k); } A. 4 4        B. 2 2        C. 2 4       D. 4 6","
 下列程序的输出结果为____main (){ int a[5]= {2,4,5,6,10},*p,**k;p=a; k=&p; printf('%d ',*(P++)); printf('%dn ',**k); } ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
该程序的输出结果是（   ）for(i=0;i<5;i++){for(j=1;j<10;j++)if(j==5)break;if(i<2)continue;if(i>2)break;printf('' % d,'',j);}printf('' % dn '',i);输出结果为:A. 10,3      B. 5,2        C. 5,3        D. 10,2","该程序的输出结果是_____for(i=0;i<5;i++){for(j=1;j<10;j++)if(j==5)break;if(i<2)continue;if(i>2)break;printf('' % d,'',j);}printf('' % dn '',i);","
 请将下列程序的输出结果补充完整：

```c
for(i=0;i<5;i++){for(j=1;j<10;j++)if(j==5)break;if(i<2)continue;if(i>2)break;printf('' % d,'',j);}printf('' % dn '',i);
```

输出结果为：

```
A. 10,3
```","
 该程序的输出结果是_____for(i=0;i<5;i++){for(j=1;j<10;j++)if(j==5)break;if(i<2)continue;if(i>2)break;printf('' % d,'',j);}printf('' % dn '',i);",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
以下程序的输出结果为（  ）#include<stdio.h>main(){ int  a=010,b=10; printf('%d,%dn ',a++,--b); }A. 10,10      B. 8,10       C. 10,9       D. 8,9","以下程序的输出结果为_____#include<stdio.h>main(){ int  a=010,b=10; printf('%d,%dn ',a++,--b); }","
 以下程序的输出结果为（  ）

#include<stdio.h>
main(){ 
 int  a=0x10,b=10; 
 printf('%d,%dn ',a++,--b); 
 }

A. 10,10 
 B. 8,10 
 C. 10,9 
 D. 8,9 
 ","
 以下程序的输出结果为_____#include<stdio.h>main(){ int  a=010,b=10; printf('%d,%dn ',a++,--b); }",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下面这个程序段的输出是什么？（   ）int a,b,c;a=7;b=8;c=9;if(a>b) a=b；b=c;c=a;printf(''a = % db = % d c = % dn '',a,b,c);A. a=7 b=8 c=7      B. a=7 b=9 c=7         C. a=8 b=9 c=7      D. a=8 b=9 c=8","下面这个程序段的输出是_____int a,b,c;a=7;b=8;c=9;if(a>b) a=b；b=c;c=a;printf(''a = % db = % d c = % dn '',a,b,c);","
 下面这个程序段的输出是什么？（  ）

int a,b,c;a=7;b=8;c=9;if(a>b) a=b；b=c;c=a;printf(''a = % db = % d c = % dn '',a,b,c);

A. a=7 b=8 c=7      B. a=7 b=9 c=7         C. a=8 b=9 c=7      D. a=8 b=9 c=8","
 下面这个程序段的输出是_____int a,b,c;a=7;b=8;c=9;if(a>b) a=b；b=c;c=a;printf(''a = % db = % d c = % dn '',a,b,c);",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下面这个程序段的输出是（  ）point(char *pt);main (){ char b[4]= {‘a ’, ’c ’, ’s ’, ’f ’},*pt=b;point(pt);printf('%cn ',*pt);}point(char *p){p+=3;}A. a      B. c      C. s      D. f","下面这个程序段的输出是_____point(char *pt);main (){ char b[4]= {‘a ’, ’c ’, ’s ’, ’f ’},*pt=b;point(pt);printf('%cn ',*pt);}point(char *p){p+=3;}","
 下面这个程序段的输出是（B. c）。

分析：首先，程序定义了一个字符数组b，其中包含字符'a'，字符'c'，字符's'和字符'f'。然后，将数组b的首元素赋给指针pt。接下来，调用了point(pt)函数，该函数将指针pt向后移动3个字符。最后，使用printf函数输出指针pt指向的字符。由于指针pt向后移动了3个字符，所以输出的字符是字符'c'。","
 下面这个程序段的输出是_____point(char *pt);main (){ char b[4]= {‘a ’, ’c ’, ’s ’, ’f ’},*pt=b;point(pt);printf('%cn ',*pt);}point(char *p){p+=3;}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
以下程序的输出结果为（    ）#include <stdio.h>main(){int i,j,x=0;for(i=0;i<2;i++){x++;for(j=0;j<=3;j++){if(j%2) continue;x++;}}printf(''x = % dn '',x);}A. x=4        B. x=8        C. x=6        D. x= 12","以下程序的输出结果为_____#include <stdio.h>main(){int i,j,x=0;for(i=0;i<2;i++){x++;for(j=0;j<=3;j++){if(j%2) continue;x++;}}printf(''x = % dn '',x);}","
 以下程序的输出结果为（    ）

#include <stdio.h>
main(){int i,j,x=0;for(i=0;i<2;i++){x++;for(j=0;j<=3;j++){if(j%2) continue;x++;}}printf(''x = % dn '',x);}

A. x=4        
B. x=8        
C. x=6        
D. x= 12","
 以下程序的输出结果为_____#include <stdio.h>main(){int i,j,x=0;for(i=0;i<2;i++){x++;for(j=0;j<=3;j++){if(j%2) continue;x++;}}printf(''x = % dn '',x);}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若要定义 b 为 10*10 的二维数组,正确的定义语句为（  ）A. float b(10,10)                  B. float b[10,10]C. float [10][10]              D. float b[10][10]","若要定义 b 为 10*10 的二维数组,正确的定义语句为____","
 请将下列题目转化为填空题:

若要定义 b 为 10*10 的二维数组,正确的定义语句为（  ）

A. float b(10,10)                  
B. float b[10,10]                  
C. float [10][10]                  
D. float b[10][10]                  

答案：D","
 若要定义 b 为 10*10 的二维数组,正确的定义语句为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
以下不是C语言的特点的是 ( )A. C语言简洁、紧凑B. 能够编制出功能复杂的程序C. C语言可以直接对硬件进行操作D. C语言移植性好",C语言的特点的是____,"
 以下不是C语言的特点的是 ( )B. 能够编制出功能复杂的程序C. C语言可以直接对硬件进行操作D. C语言移植性好","
 C语言的特点的是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
一个C语言程序是由 ( )A. 一个主程序和若干子程序组成B. 函数组成C. 若干过程组成D. 若干子程序组成",一个C语言程序是由____组成,"
 请将下列题目转化为填空题:

一个C语言程序是由 ( )组成。

A. 一个主程序和若干子程序组成
B. 函数组成
C. 若干过程组成
D. 若干子程序组成","
 一个C语言程序是由____组成",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
一个算法应该具有'确定性'等5个特性,对另外4个特性的描述中错误的是 ( )A. 有零个或多个输入B. 有零个或多个输出C. 有穷性D. 可行性",一个算法应该具有5个特性_____,"
 请将下列题目转化为填空题:

一个算法应该具有'确定性'等5个特性,对另外4个特性的描述中错误的是 ( )。

A. 有零个或多个输入
B. 有零个或多个输出
C. 有穷性
D. 可行性","
 一个算法应该具有5个特性_____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设变量a是整型,f是实型,i是双精度型,则表达式10+‘a’+i*f值的数据类型为 ( )A. int B. float C. double D. 不确定","设变量a是整型,f是实型,i是双精度型,则表达式10+‘a’+i*f值的数据类型为____","
 设变量a是整型,f是实型,i是双精度型,则表达式10+‘a’+i*f值的数据类型为 ( )A. int B. float C. double D. 不确定","
 设变量a是整型,f是实型,i是双精度型,则表达式10+‘a’+i*f值的数据类型为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
在C语言中,char型数据在内存中的存储形式是 ( )A. 补码 B. 反码 C. 源码 D. ASCII码","在C语言中,char型数据在内存中的存储形式是____","
 在C语言中,char型数据在内存中的存储形式是 ( )。

A. 补码
B. 反码
C. 源码
D. ASCII码

答案:D. ASCII码","
 在C语言中,char型数据在内存中的存储形式是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有如下程序,输入数据：12345M678＜cR＞后（<CR>表示回车）,x的值是 ( ) 。#include<stdio.h>main(){int x;float y;scanf('' % 3 d % f '',&x,&y);}A. 12345 B. 123 C. 45 D. 345","有如下程序,输入数据：12345M678＜cR＞后（<CR>表示回车）,x的值是____ 。#include<stdio.h>main(){int x;float y;scanf('' % 3 d % f '',&x,&y);}","
 请将下列程序填空，输入数据：12345M678＜cR＞后（<CR>表示回车）,x的值是 ( ) 。

#include<stdio.h>
main(){int x;float y;scanf('' % 3 d % f '',&x,&y);}

A. 12345 B. 123 C. 45 D. 345","
 有如下程序,输入数据：12345M678＜cR＞后（<CR>表示回车）,x的值是____ 。#include<stdio.h>main(){int x;float y;scanf('' % 3 d % f '',&x,&y);}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
以下程序的执行结果是 ( )#include<stdio.h>{int i=10,j=10;printf('' % d,% dn '',++i,j--);}A. 11,10 B. 9,10 C. 11,9 D. 10,9 ","以下程序的执行结果是_____#include<stdio.h>{int i=10,j=10;printf('' % d,% dn '',++i,j--);}","
 以下程序的执行结果是 (C)11,9。","
 以下程序的执行结果是_____#include<stdio.h>{int i=10,j=10;printf('' % d,% dn '',++i,j--);}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
已知字母A的ASCII码是65,以下程序的执行结果是 ( )#include<stdio.h>main(){char c1='A',c2='Y';printf('' % d,% dn '',c1,c2);}A. A,Y B. 65,65 C. 65,90 D. 65,89","已知字母A的ASCII码是65,以下程序的执行结果是_____#include<stdio.h>main(){char c1='A',c2='Y';printf('' % d,% dn '',c1,c2);}","
 已知字母A的ASCII码是65,以下程序的执行结果是 ( )。

#include<stdio.h>
main(){
char c1='A',c2='Y';
printf('' % d,% dn '',c1,c2);
}
A. A,Y 
B. 65,65 
C. 65,90 
D. 65,89","
 已知字母A的ASCII码是65,以下程序的执行结果是_____#include<stdio.h>main(){char c1='A',c2='Y';printf('' % d,% dn '',c1,c2);}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下列运算符中优先级最高的是 ( )A. ＜ B. 十 C. % D. !＝",运算符中优先级最高的是____,"
 下列运算符中优先级最高的是 ( D.!＝ )。","
 运算符中优先级最高的是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
判断char型变量cl是否为小写字母的正确表达式为 ( )A. ’a’＜＝c1＜＝f’z’ B. (c1＞＝a)&&(c1＜＝z)C. (‘a’＞=c1) (‘z’＜＝c1) D. (c1＞＝’a’)&&(c1＜＝’z’)",判断char型变量cl是否为小写字母的正确表达式为____,"
 请将下列题目转化为填空题:

判断char型变量cl是否为小写字母的正确表达式为 ( )A. ’a’＜＝c1＜＝f’z’ B. (c1＞＝a)&&(c1＜＝z)C. (‘a’＞=c1) (‘z’＜＝c1) D. (c1＞＝’a’)&&(c1＜＝’z’)","
 判断char型变量cl是否为小写字母的正确表达式为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
字符串''a ''在内存中占据的字节个数为 ( )A. 0 B. 1 C. 2 D. 3",字符串''a ''在内存中占据的字节个数为____,"
 请将下列题目转化为填空题:

字符串''a ''在内存中占据的字节个数为 ( )A. 0 B. 1 C. 2 D. 3","
 字符串''a ''在内存中占据的字节个数为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下面程序的运行结果是( )#include<stdio.h>main(){int num=0;while(num<=2){num++;printf('' % d '',num);}}A. 1B. 1 2C. 1 2 3D. 1 2 3 4","下面程序的运行结果是_____#include<stdio.h>main(){int num=0;while(num<=2){num++;printf('' % d '',num);}}","
 下面程序的运行结果是( )

#include<stdio.h>
main(){int num=0;while(num<=2){num++;printf('' % d '',num);}}

A. 1
B. 1 2
C. 1 2 3
D. 1 2 3 4","
 下面程序的运行结果是_____#include<stdio.h>main(){int num=0;while(num<=2){num++;printf('' % d '',num);}}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
以下对一维整形数组a的正确说明是 ( )A. int a(10); B. int n=10,a[n];C. int n; D. int a[10]",对一维整形数组a的正确说明是____,"
 以下对一维整形数组a的正确说明是 ( )。

A. int a(10);
B. int n=10,a[n];
C. int n;
D. int a[10]。","
 对一维整形数组a的正确说明是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
以下对二维数组a的正确说明是 ( )A. int a[3][]; B. float a(3,4);C. double a[1][4]; D. float a(3)(4);",对二维数组a的正确说明是____,"
 以下对二维数组a的正确说明是 ( )。

A. int a[3][]; 
B. float a(3,4); 
C. double a[1][4]; 
D. float a(3)(4); 

答案：D","
 对二维数组a的正确说明是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若二维数组a有m列,则在a[x]前面的元素个数为 ( )A. j*m+iB. i*m+jC. i*m+j-1D. i*m+j+1","若二维数组a有m列,则在a[x]前面的元素个数为____","
 请将下列题目转化为填空题:

若二维数组a有m列,则在a[x]前面的元素个数为 ( ) A. j*m+i B. i*m+j C. i*m+j-1 D. i*m+j+1","
 若二维数组a有m列,则在a[x]前面的元素个数为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
数字字符0的ASCII值为48,若有以下程序 main(){ char a='1',b='2'; printf('' % c,'',b++); printf('' % dn '',b-a); 51-49} 程序运行后的输出结果是（）。 A. 3,2    B. 50,2    C. 2,2    D. 2,50 ","数字字符0的ASCII值为48,若有以下程序 main(){ char a='1',b='2'; printf('' % c,'',b++); printf('' % dn '',b-a); 51-49} 程序运行后的输出结果是____","
 请将下列题目转化为填空题:

数字字符0的ASCII值为48,若有以下程序 main(){ char a='1',b='2'; printf('' % c,'',b++); printf('' % dn '',b-a); 51-49} 程序运行后的输出结果是（）。 A. 3,2    B. 50,2    C. 2,2    D. 2,50 

请填写适当的值，使程序运行后的输出结果为所给选项中的一个。

数字字符0的ASCII值为48，若以下程序 main(){ char a='1',b='2'; printf('' % c,'',b++); printf('' % dn '',b-a); 51-49} 程序运行后的输出结果是（）。 A. 3,2    B. 50,2    C. 2,2    D. 2,50","
 数字字符0的ASCII值为48,若有以下程序 main(){ char a='1',b='2'; printf('' % c,'',b++); printf('' % dn '',b-a); 51-49} 程序运行后的输出结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下程序 main() { int m=12,n=34; printf('' % d % d '',m++, ++n);printf('' % d % dn '',n++, ++m); } 程序运行后的输出结果是（）。 A. 12 35 35 14   B. 12 35 35 13   C. 12 34 35 14   D. 12 34 35 13 ","有以下程序 main() { int m=12,n=34; printf('' % d % d '',m++, ++n);printf('' % d % dn '',n++, ++m); } 程序运行后的输出结果是____","
 请将下列程序 main() { int m=12,n=34; printf('' % d % d '',m++, ++n);printf('' % d % dn '',n++, ++m); } 程序运行后的输出结果是（）。

A. 12 35 35 14   B. 12 35 35 13   C. 12 34 35 14   D. 12 34 35 13","
 有以下程序 main() { int m=12,n=34; printf('' % d % d '',m++, ++n);printf('' % d % dn '',n++, ++m); } 程序运行后的输出结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下语句:int b;char c[10];,则正确的输入语句是（）。 A. scanf('' % d % s '',&b,&c);    B. scanf('' % d % s '',&b,c); C. scanf('' % d % s '',b,c);       D. scanf('' % d % s '',b,&c); ","有以下语句:int b;char c[10];,则正确的输入语句是____","
 以下为填空题：

有以下语句：int b;char c[10];,则正确的输入语句是（）。
A. scanf('' % d % s '',&b,&c);    B. scanf('' % d % s '',&b,c);
C. scanf('' % d % s '',b,c);       D. scanf('' % d % s '',b,&c); 

请从选项中选择正确的输入语句。","
 有以下语句:int b;char c[10];,则正确的输入语句是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下程序main(){ int m,n,p; scanf(''m = % dn = % dp = % d '',&m,&n,&p); printf('' % d % d % dn '',m,n,p); } 若想从键盘上输入数据,使变量m中的值为123,n中的值为456,p中的值为789,则正确的输入是（）。 A. m=123n=456p=789 B. m=123 n=456 p=789 C. m=123,n=456,p=789 D. 123 456 789 ","有以下程序main(){ int m,n,p; scanf(''m = % dn = % dp = % d '',&m,&n,&p); printf('' % d % d % dn '',m,n,p); } 若想从键盘上输入数据,使变量m中的值为123,n中的值为456,p中的值为789,则正确的输入是____",". 

以下哪个选项是正确的输入? 

要回答这个问题，需要对输入的格式和选项进行分析。正确的输入应该是将m、n、p三个变量的值分别输入一次，而不是将它们作为一个整体输入。因此，正确的输入应该是选项C。","
 有以下程序main(){ int m,n,p; scanf(''m = % dn = % dp = % d '',&m,&n,&p); printf('' % d % d % dn '',m,n,p); } 若想从键盘上输入数据,使变量m中的值为123,n中的值为456,p中的值为789,则正确的输入是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下程序main() { int a,b,d=25;  a=d10%9;b=a&&(-1);  printf('' % d,% dn '',a,b);  } 程序运行后的输出结果是（）。A. 6,1     B. 2,1     C. 6,0     D. 2,0 ","有以下程序main() { int a,b,d=25;  a=d10%9;b=a&&(-1);  printf('' % d,% dn '',a,b);  } 程序运行后的输出结果是____","
 以下是对题目的填空题：

main() { int a,b,d=25;  a=d10%9;b=a&&(-1);  printf('' % d,% dn '',a,b);  } 程序运行后的输出结果是（）。

A. 6,1     B. 2,1     C. 6,0     D. 2,0 

正确答案是 A. 6,1。","
 有以下程序main() { int a,b,d=25;  a=d10%9;b=a&&(-1);  printf('' % d,% dn '',a,b);  } 程序运行后的输出结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下程序main() { int i=1,j=2,k=3; if(i++==1&&(++j==3||k++==3)) printf('' % d % d % dn '',i,j,k); } 程序运行后的输出结果是（）。 A. 1 2 3      B. 2 3 4      C. 2 2 3     D. 2 3 3","有以下程序main() { int i=1,j=2,k=3; if(i++==1&&(++j==3||k++==3)) printf('' % d % d % dn '',i,j,k); } 程序运行后的输出结果是____","
 请将下列程序main() { int i=1,j=2,k=3; if(i++==1&&(++j==3||k++==3)) printf('' % d % d % dn '',i,j,k); } 程序运行后的输出结果是（）。

A. 1 2 3      B. 2 3 4      C. 2 2 3     D. 2 3 3","
 有以下程序main() { int i=1,j=2,k=3; if(i++==1&&(++j==3||k++==3)) printf('' % d % d % dn '',i,j,k); } 程序运行后的输出结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
表有以下程序main() { int p[8]={11,12,13,14,15,16,17,18},i=0,j=0; while(i++<7)if(p[i]%2)  j+=p[i]; printf('' % dn '',j); }程序运行后的输出结果是（）。A. 42   B. 45   C. 56   D. 60 ","表有以下程序main() { int p[8]={11,12,13,14,15,16,17,18},i=0,j=0; while(i++<7)if(p[i]%2)  j+=p[i]; printf('' % dn '',j); }程序运行后的输出结果是____","
 请将下列程序填空：

main() { int p[8]={11,12,13,14,15,16,17,18},i=0,j=0; while(i++<7)if(p[i]%2)  j+=p[i]; printf('' % dn '',j); }

程序运行后的输出结果是（）。
A. 42
B. 45
C. 56
D. 60","
 表有以下程序main() { int p[8]={11,12,13,14,15,16,17,18},i=0,j=0; while(i++<7)if(p[i]%2)  j+=p[i]; printf('' % dn '',j); }程序运行后的输出结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下程序 main() { char a[7]=''a00a00 ''; int i,j; i=sizeof(a); j=strlen(a); printf('' % d % dn '',i,j); } 程序运行后的输出结果是（）。 A. 2 2    B. 7 6     C. 7 2     D. 6 2 ","有以下程序 main() { char a[7]=''a00a00 ''; int i,j; i=sizeof(a); j=strlen(a); printf('' % d % dn '',i,j); } 程序运行后的输出结果是____","
 以下是将题目转化为填空题的选项：

A. 2 2    
B. 7 6    
C. 7 2    
D. 6 2 

请从上述选项中选择一个正确答案。","
 有以下程序 main() { char a[7]=''a00a00 ''; int i,j; i=sizeof(a); j=strlen(a); printf('' % d % dn '',i,j); } 程序运行后的输出结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下程序  int f1(int x,int y){return x>y?x:y;} int f2(int x,int y){return x>y?y:x;} main(){ int a=4,b=3,c=5,d=2,e,f,g; e=f2(f1(a,b),f1(c,d)); f=f1(f2(a,b),f2(c,d)); g=a+b+c+d-e-f; printf('' % d,% d,% dn '',e,f,g); } 程序运行后的输出结果是 （）。A. 4,3,7   B. 3,4,7    C. 5,2,7    D. 2,5,7 ","有以下程序  int f1(int x,int y){return x>y?x:y;} int f2(int x,int y){return x>y?y:x;} main(){ int a=4,b=3,c=5,d=2,e,f,g; e=f2(f1(a,b),f1(c,d)); f=f1(f2(a,b),f2(c,d)); g=a+b+c+d-e-f; printf('' % d,% d,% dn '',e,f,g); } 程序运行后的输出结果是____",",% d,% d,% d\n',d,e,f,g); return 0; } 

以下是我尝试的转换:

 int f1(int x,int y){return x>y?x:y;} 
 int f2(int x,int y){return x>y?y:x;} 
 
main(){ int a=4,b=3,c=5,d=2,e,f,g; e=f2(f1(a,b),f1(c,d)); f=f1(f2(a,b),f2(c,d)); g=a+b+c+d-e-f; printf('' % d,% d,% d,% d,% d\n',d,e,f,g); return 0; } 

但是,这段代码中存在一些错误,我无法完全理解它的工作原理。 

以下是我尝试的转换:

 int f1(int x,int y){return x>y?x:y;} 
 int f2(int x,int y){return x>y?y:x;} 
 
main(){ int a=4,b=3,c=5,d=2,e,f,g; e=f2(f1(a,b),f1(c,d)); f=f1(f2(a,b),f2(c,d)); g=a+b+c+d-e-f; printf('' % d,% d,% d,% d,% d\n',d,e,f,g); return 0; } 

这段代码的主要问题在于,f1和f2函数的参数类型不匹配。 

以下是我尝试的转换:

 int f1(int x,int y){return x>y?x:y;} 
 int f2(int x,int y){return x>y?y:x;} 
 
main(){ int a=4,b=3,c=5,d=2,e,f,g; e=f2(f1(a,b),f1(c,d)); f=f1(f2(a,b),f2(c,","
 有以下程序  int f1(int x,int y){return x>y?x:y;} int f2(int x,int y){return x>y?y:x;} main(){ int a=4,b=3,c=5,d=2,e,f,g; e=f2(f1(a,b),f1(c,d)); f=f1(f2(a,b),f2(c,d)); g=a+b+c+d-e-f; printf(''% d,% d ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
已有定义:char a[]=''xyz '',b[]={'x','y','z'};,以下叙述中正确的是（）。 A. 数组a和b的长度相同        B. a数组长度小于b数组长度 C. a数组长度大于b数组长度     D. 上述说法都不对 ","已有定义:char a[]=''xyz '',b[]={'x','y','z'};a数组长度_____b数组长度 ","
 已有定义:char a[]=''xyz '',b[]={'x','y','z'};,以下叙述中正确的是（）。

A. 数组a和b的长度相同
B. a数组长度小于b数组长度
C. a数组长度大于b数组长度
D. 上述说法都不对","
 已有定义:char a[]=''xyz '',b[]={'x','y','z'};a数组长度_____b数组长度 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下程序 交换void f(int *x,int *y) { int t; t=*x;*x=*y;*y=t; } main() { int a[8]={1,2,3,4,5,6,7,8},i,*p,*q; p=a;q=&a[7]; while(p<q){ f(p,q);p++;q--;} 打印数组for(i=0;i<8;i++) printf('' % d,'',a[i]);  } 程序运行后的输出结果是（）。A. 8,2,3,4,5,6,7,1,      B. 5,6,7,8,1,2,3,4, C. 1,2,3,4,5,6,7,8,      D. 8,7,6,5,4,3,2,1,","有以下程序 交换void f(int *x,int *y) { int t; t=*x;*x=*y;*y=t; } main() { int a[8]={1,2,3,4,5,6,7,8},i,*p,*q; p=a;q=&a[7]; while(p<q){ f(p,q);p++;q--;} 打印数组for(i=0;i<8;i++) printf('' % d,'',a[i]);  } 程序运行后的输出结果是____","2 3 4 5 6 7 8 B. 

 首先分析程序，该程序定义了一个名为f的函数，用于交换两个变量的值，主函数中定义了一个数组a和两个指针p和q，分别指向数组的第一个元素。

程序中的while循环用于遍历数组，每次循环中调用f函数将数组中第一个元素和最后一个元素交换，然后p指向下一个元素，q指向下一个元素的下一个元素。这样在循环结束后，数组中的元素将按逆序排列。

最后使用for循环打印数组中的元素。

因此程序的输出结果应该是：8 2 3 4 5 6 7 8，选项A符合要求。

最终答案：A","
 有以下程序 交换void f(int *x,int *y) { int t; t=*x;*x=*y;*y=t; } main() { int a[8]={1,2,3,4,5,6,7,8},i,*p,*q; p=a;q=&a[7]; while(p<q){ f(p,",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下程序 main()  {  int a[3][3],*p,i;  p=&a[0][0];  for(i=0;i<9;i++) p[i]=i;     for(i=0;i<3;i++)  printf('' % d '',a[1][i]);  }  程序运行后的输出结果是（）。 A. 0 1 2    B. 1 2 3     C. 2 3 4     D. 3 4 5 ","有以下程序 main()  {  int a[3][3],*p,i;  p=&a[0][0];  for(i=0;i<9;i++) p[i]=i;     for(i=0;i<3;i++)  printf('' % d '',a[1][i]);  }  程序运行后的输出结果是____","
 以下是将题目转化为填空题的版本：

请将以下程序中的空缺部分填写完整。

```c
main()  {  int a[3][3],*p,i;  p=&a[0][0];  for(i=0;i<9;i++) p[i]=i;     for(i=0;i<3;i++)  printf('' % d '',a[1][i]);  }
```

程序运行后的输出结果是（）。 A. 0 1 2    B. 1 2 3     C. 2 3 4     D. 3 4 5 

请填写空缺部分，使程序能够正常运行并输出正确的结果。","
 有以下程序 main()  {  int a[3][3],*p,i;  p=&a[0][0];  for(i=0;i<9;i++) p[i]=i;     for(i=0;i<3;i++)  printf('' % d '',a[1][i]);  }  程序运行后的输出结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下程序  #define N 20  fun(int a[],int n,int m)  {int i,j;  for(i=m;i>=n;i--) a[i+1]=a[i];  }  main()  {  int i,a[N]={1,2,3,4,5,6,7,8,9,10};  fun(a,2,9);  for(i=0;i<5;i++) printf('' % d '',a[i]);  }  程序运行后的输出结果是（）。  A. 10234   B. 12344   C. 12334   D. 12234 ","有以下程序  #define N 20  fun(int a[],int n,int m)  {int i,j;  for(i=m;i>=n;i--) a[i+1]=a[i];  }  main()  {  int i,a[N]={1,2,3,4,5,6,7,8,9,10};  fun(a,2,9);  for(i=0;i<5;i++) printf('' % d '',a[i]);  }  程序运行后的输出结果是____","结果是 The number of characters in the output is__. 

以下是我根据题目要求填空的答案:

1. 首先，定义了一个名为N的常量，其值为20。
2. 定义了一个名为fun的函数，接收三个参数：一个整型数组a，一个整型变量n，一个整型变量m。
3. 在函数fun中，定义了两个整型变量i和j。
4. 使用一个for循环，让i从m开始，每次递减1，直到i大于等于n。
5. 在循环中，将a[i+1]赋值为a[i]。
6. 在main函数中，定义了一个整型数组a，并初始化为{1,2,3,4,5,6,7,8,9,10}。
7. 调用函数fun，将a数组，n参数设置为2，m参数设置为9。
8. 使用一个for循环，让i从0开始，每次递增1，直到i小于等于4。
9. 在循环中，使用printf函数输出a[i]的值。

最终答案：程序运行结果是 The number of characters in the output is 10。","
 有以下程序  #define N 20  fun(int a[],int n,int m)  {int i,j;  for(i=m;i>=n;i--) a[i+1]=a[i];  }  main()  {  int i,a[N]={1,2,3,4,5,6,7,8,9,10};  fun(a,2,9);  ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下程序#define P 3 main()  {没有F的声明printf('' % dn '',F(3+5)); 函数定义不应在main函数里面void F(int x){ return(P*x*x); } }  程序运行后的输出结果是（）。  A. 192   B. 29  C. 25   D. 编译出错 ","有以下程序#define P 3 main()  {没有F的声明printf('' % dn '',F(3+5)); 函数定义不应在main函数里面void F(int x){ return(P*x*x); } }  程序运行后的输出结果是____","
 请将下列程序#define P 3 main()  {没有F的声明printf('' % dn '',F(3+5)); 函数定义不应在main函数里面void F(int x){ return(P*x*x); } }  程序运行后的输出结果是（）。  A. 192   B. 29  C. 25   D. 编译出错 
 请将下列程序#define P 3 main()  {没有F的声明printf('' % dn '',F(3+5)); 函数定义不应在main函数里面void F(int x){ return(P*x*x); } }  程序运行后的输出结果是（）。  A. 192   B. 29  C. 25   D. 编译出错 
 请将下列程序#define P 3 main()  {没有F的声明printf('' % dn '',F(3+5)); 函数定义不应在main函数里面void F(int x){ return(P*x*x); } }  程序运行后的输出结果是（）。  A. 192   B. 29  C. 25   D. 编译出错 
 请将下列程序#define P 3 main()  {没有F的声明printf('' % dn '',F(3+5)); 函数定义不应在main函数里面void F(int x){ return(P*x*x); } }  程序运行后的输出结果是（）。  A. 192   B. 29  C. 25   D. 编译出错 
 请将下列程序#define P 3 main()  {没有F的声明printf('' % dn '',F(3+5)); 函数定义不应在main函数里面void F(int x){ return(P*x*x); } }  程序运行后的输出结果是（）。  A. 192   B. 29  C. 25   D. 编译出错 
 请将下列程序#define P 3 main()  {没有F的声明printf('' % dn '',F(3+5)); 函数定义不应在main函数里面void F(int x){ return(P*x","
 有以下程序#define P 3 main()  {没有F的声明printf('' % dn '',F(3+5)); 函数定义不应在main函数里面void F(int x){ return(P*x*x); } }  程序运行后的输出结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下程序  main(){int c=35;printf('' % dn '',c&c);}  程序运行后的输出结果是（）。  A. 0    B. 70    C. 35    D. 1 ","有以下程序  main(){int c=35;printf(''% dn '',c&c);}  程序运行后的输出结果是____","
 请将下列程序转化为填空题:

有以下程序 main(){int c=35;printf('' % dn '',c&c);}  程序运行后的输出结果是（）。  A. 0    B. 70    C. 35    D. 1 

请填写正确的选项。

答案：C","
 有以下程序  main(){int c=35;printf(''% dn '',c&c);}  程序运行后的输出结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
在C语言中,语句以（）结尾。A. 回车 B. 逗号 C. 分号 D. 句号 ","在C语言中,语句以____结尾","
 在C语言中,语句以（）结尾。
A. 回车
B. 逗号
C. 分号
D. 句号","
 在C语言中,语句以____结尾",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
一个C语言程序总是从（）开始执行的。A. main函数      B. 程序第一条include命令C. 排在前面的函数 D. 任意函数 ",一个C语言程序总是从____开始执行的,"
 一个C语言程序总是从（A. main函数）开始执行的。","
 一个C语言程序总是从____开始执行的",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
在C语言中,变量所分配的内存空间大小（）。 A. 均为一个字节 B. 由用户自己定义 C. 由变量的类型决定 D. 是任意的","在C语言中,变量所分配的内存空间大小____","
 在C语言中,变量所分配的内存空间大小( )。

A. 均为一个字节
B. 由用户自己定义
C. 由变量的类型决定
D. 是任意的","
 在C语言中,变量所分配的内存空间大小____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
现有下列格式的scanf语句：scanf('%d,%d',&x,&y);则正确的输入是()。A. 2  3 B. 2[回车]3  c. 2,3   D. x=2,y=3","现有下列格式的scanf语句：scanf('%d,%d',&x,&y);则正确的输入是____","
 现有下列格式的scanf语句：scanf('%d,%d',&x,&y);则正确的输入是()。D. x=2,y=3","
 现有下列格式的scanf语句：scanf('%d,%d',&x,&y);则正确的输入是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
已定义x为float型变量：x=213.82631;printf('%4.2fn',x);则以上程序（）。A. 输出格式描述符的域宽不够,不能输出B. 输出为213.83 C. 输出为213.82D. 213.82631 ","已定义x为float型变量：x=213.82631;printf('%4.2fn',x);则以上程序输出____","
 请将下列程序空格填满，使它成为一个完整的C语言程序：

已定义x为float型变量：x=213.82631;printf('%4.2fn',x);","
 已定义x为float型变量：x=213.82631;printf('%4.2fn',x);则以上程序输出____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若执行printf('%dn',strlen('an’x41'))语句,其输出结果是()。A. 7     B. 8     C. 4     D. 6","若执行printf('%dn',strlen('an’x41'))语句,其输出结果是____","
 请将下列代码中的字符串替换为其他字符串，并输出结果。

```c
#include <stdio.h>
#include <string.h>

int main() {
    char str1[] = ""Hello, World!"";
    char str2[] = ""Hello, Unix!"";

    printf(""%s\n"", str1);
    printf(""%s\n"", str2);

    return 0;
}
```

将上述代码中的`str1`和`str2`替换为其他字符串，然后输出结果。","
 若执行printf('%dn',strlen('an’x41'))语句,其输出结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
以下运算符中,优先级最高的运算符是()。A. <=      B. ～     C. !=    D. ||",优先级最高的运算符是____,"
 以下运算符中,优先级最高的运算符是()。
A. <= 
B. ~ 
C.!= 
D. ||","
 优先级最高的运算符是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设有语句i t x; char ch=1; double d; 则表达式x=5,ch++,x+1的值是()。A. 5    B. 1     C. 2     D. 6 ","设有语句i t x; char ch=1; double d; 则表达式x=5,ch++,x+1的值是____","
 请将下列题目转化为填空题:

设有语句i t x; char ch=1; double d; 则表达式x=5,ch++,x+1的值是()。A. 5    B. 1     C. 2     D. 6 

请将下列题目转化为填空题:

设有语句i t x; char ch=1; double d; 则表达式x=5,ch++,x+1的值是()。A. 5    B. 1     C. 2     D. 6 

请将下列语句中的变量类型及其值填写到空白处:

__i t __;

请将下列代码中的变量类型及其值填写到空白处:

int a=5; double b=3.14; char c='A';","
 设有语句i t x; char ch=1; double d; 则表达式x=5,ch++,x+1的值是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
表示关系x<=y<=z的c语言表达式为()。A. （x<=y）&&(y<=z)   B. (x<=y)and(y<=z) C. (x<=y<=z)    D. (x<=y)&(y<=z) ",表示关系x<=y<=z的c语言表达式为____,"
 表示关系x<=y<=z的C语言表达式为（）。
A. （x<=y）&&(y<=z)  
B. (x<=y)and(y<=z)  
C. (x<=y<=z)    
D. (x<=y)&(y<=z) 

正确答案：C","
 表示关系x<=y<=z的c语言表达式为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若有以下定义：char a; int b;float c; double d;则表达式a*b+d-c值的类型为()。A. float   B. int    C. char    D. double ",若有以下定义：char a; int b;float c; double d;则表达式a*b+d-c值的类型为____,"
 请将下列题目转化为填空题:

若有以下定义：char a; int b; float c; double d; 则表达式a*b+d-c值的类型为()。A. float   B. int    C. char    D. double 

答案：A. float","
 若有以下定义：char a; int b;float c; double d;则表达式a*b+d-c值的类型为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
c语言的程序结构包括（）。 A. 顺序结构,循环结构,分支结构B. 循环结构,函数结构,分支结构C. 对象结构,顺序结构,分支结构D. 顺序结构,函数结构,对象结构 ",c语言的程序结构包括____,"
 请将下列题目转化为填空题:

c语言的程序结构包括（）。

A. 顺序结构,循环结构,分支结构
B. 循环结构,函数结构,分支结构
C. 对象结构,顺序结构,分支结构
D. 顺序结构,函数结构,对象结构","
 c语言的程序结构包括____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
在C语言中,终止一个死循环的有效语句是()。 A. continueB. break C. exit D. return ","在C语言中,终止一个死循环的有效语句是____","
 在C语言中，终止一个死循环的有效语句是()。
A. continue
B. break
C. exit
D. return","
 在C语言中,终止一个死循环的有效语句是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
定义如下变量：int n=10;则下列循环的输出结果是()。while(n>7){  n--;printf('%d',n);}A. 10987B. 9876C. 1098D. 987","定义如下变量：int n=10;则下列循环的输出结果是_____。while(n>7){  n--;printf('%d',n);}","
 请将下列题目转化为填空题:

定义如下变量：int n=10;则下列循环的输出结果是()。while(n>7){  n--;printf('%d',n);}A. 10987B. 9876C. 1098D. 987","
 定义如下变量：int n=10;则下列循环的输出结果是_____。while(n>7){  n--;printf('%d',n);}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
关于一维数组的定义和初始化,以下正确的是()。A. int a[]={1,2,3,4,5};B. int a[4]={1,2,3,4,5};C. int a[5]={};       D. int n=5,a[n]={1,2,3,4,5}; ",一维数组的定义和初始化____,"
 关于一维数组的定义和初始化，以下正确的是()。
A. int a[]={1,2,3,4,5};
B. int a[4]={1,2,3,4,5};
C. int a[5]={};      
D. int n=5,a[n]={1,2,3,4,5};","
 一维数组的定义和初始化____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
在C语言程序中,数组名作为函数调用的实参时,传递给形参的是()。A. 数组的首地址       B. 数组的第一个元素值C. 数组中全部元素的值 D. 数组元素的个数","在C语言程序中,数组名作为函数调用的实参时,传递给形参的是____","
 在C语言程序中,数组名作为函数调用的实参时,传递给形参的是()。

A. 数组的首地址
B. 数组的第一个元素值
C. 数组中全部元素的值
D. 数组元素的个数","
 在C语言程序中,数组名作为函数调用的实参时,传递给形参的是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设有如下定义：int arr[]={6,7,8,9,10};int *ptr;ptr=arr;*(ptr+2)+=2;printf('%d,%dn',*ptr,*(ptr+2));则下列程序段的输出结果为()。 A. 8,10  B. 6,8  C. 7,9   D. 6,10 ","设有如下定义：int arr[]={6,7,8,9,10};int *ptr;ptr=arr;*(ptr+2)+=2;printf('%d,%dn',*ptr,*(ptr+2));则下列程序段的输出结果为____","
 请将下列程序段转化为填空题:

设有如下定义：int arr[]={6,7,8,9,10};int *ptr;ptr=arr;*(ptr+2)+=2;printf('%d,%dn',*ptr,*(ptr+2));则下列程序段的输出结果为()。 A. 8,10  B. 6,8  C. 7,9  D. 6,10 

填空题：

设有如下定义：int arr[]={6,7,8,9,10};int *ptr;ptr=arr;*(ptr+2)+=2;printf('%d,%dn',*ptr,*(ptr+2));则下列程序段的输出结果为()。 A. 8,10  B. 6,8  C. 7,9  D. 6,10 

答案：A. 8,10","
 设有如下定义：int arr[]={6,7,8,9,10};int *ptr;ptr=arr;*(ptr+2)+=2;printf('%d,%dn',*ptr,*(ptr+2));则下列程序段的输出结果为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若有以下定义和语句,则对a数组元素地址的正确引用是()。int a[2][3],(*p)[3];  p=a;A. (p+1)+2    B. p[1]+1    C. p[2]    D. *(p+2) ","若有以下定义和语句,则对a数组元素地址的正确引用是_____。int a[2][3],(*p)[3];  p=a;","
 请将下列题目转化为填空题:

若有以下定义和语句,则对a数组元素地址的正确引用是()。int a[2][3],(*p)[3];  p=a;A. (p+1)+2    B. p[1]+1    C. p[2]    D. *(p+2) 

请填写正确的答案。

答案:D. *(p+2)","
 若有以下定义和语句,则对a数组元素地址的正确引用是_____。int a[2][3],(*p)[3];  p=a;",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下列程序的输出结果是()。main(){ char*p1,*p2,str[50]='xyz';  p1='abcd';p2='ABCD';strcpy(str,strcat(p1,p2));printf('%s',str);}A. abcd B. ABCD C. abcdABCD  D. xyz ","下列程序的输出结果是____。main(){ char*p1,*p2,str[50]='xyz';  p1='abcd';p2='ABCD';strcpy(str,strcat(p1,p2));printf('%s',str);}","
 下列程序的输出结果是()。main(){ char*p1,*p2,str[50]='xyz';  p1='abcd';p2='ABCD';strcpy(str,strcat(p1,p2));printf('%s',str);}A. abcd B. ABCD C. abcdABCD  D. xyz 
 下列程序的输出结果是()。main(){ char*p1,*p2,str[50]='xyz';  p1='abcd';p2='ABCD';strcpy(str,strcat(p1,p2));printf('%s',str);}D. xyz","
 下列程序的输出结果是____。main(){ char*p1,*p2,str[50]='xyz';  p1='abcd';p2='ABCD';strcpy(str,strcat(p1,p2));printf('%s',str);}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设有说明语句 int *s[3];则s表示()。A. 指针数组  B. 指针函数C. 函数指针D. 数组指针",设有说明语句 int *s[3];则s表示____,"
 设有说明语句 int *s[3];则s表示数组指针。A. 指针数组 B. 指针函数 C. 函数指针 D. 数组指针","
 设有说明语句 int *s[3];则s表示____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下列程序的输出结果是()。main(){  int x;x=fun(4);printf('%dn',x);}fun(int n){ int s;if(n==1)||(n==2) s=2;else  s=n+fun(n-1);return (s);}A. 2  B. 9   C. 11  D. 12","下列程序的输出结果是_____。main(){  int x;x=fun(4);printf('%dn',x);}fun(int n){ int s;if(n==1)||(n==2) s=2;else  s=n+fun(n-1);return (s);}","
 请将下列程序的输出结果是()。main(){  int x;x=fun(4);printf('%dn',x);}fun(int n){ int s;if(n==1)||(n==2) s=2;else  s=n+fun(n-1);return (s);}A. 2  B. 9   C. 11  D. 12

填空题：

下列程序的输出结果是()。main(){  int x;x=fun(4);printf('%dn',x);}fun(int n){ int s;if(n==1)||(n==2) s=2;else  s=n+fun(n-1);return (s);}A. 2  B. 9   C. 11  D. 12

答案：D. 12","
 下列程序的输出结果是_____。main(){  int x;x=fun(4);printf('%dn',x);}fun(int n){ int s;if(n==1)||(n==2) s=2;else  s=n+fun(n-1);return (s);}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
运行下列程序,其结果是()。main(){ int k=5;{int k=8;printf('%2d',k);}printf('%2dn',k);}A. 5 5   B. 8 5C. 8 8  D. 5 8","运行下列程序,其结果是_____main(){ int k=5;{int k=8;printf('%2d',k);}printf('%2dn',k);}","
 请将下列程序,其结果是()。main(){ int k=5;{int k=8;printf('%2d',k);}printf('%2dn',k);}A. 5 5   B. 8 5C. 8 8  D. 5 8

填空题：

运行下列程序,其结果是()。main(){ int k=5;{int k=8;printf('%2d',k);}printf('%2dn',k);}A. 5 5   B. 8 5C. 8 8  D. 5 8","
 运行下列程序,其结果是_____main(){ int k=5;{int k=8;printf('%2d',k);}printf('%2dn',k);}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下列程序执行后输出的结果是()。f(int a){ int b=0;static c=3;a=b+c++;return(a);}main(){ int a=2,k;k=f(a);  k=f(a+1);printf('%dn',k);}A. 3  B. 0  C. 5  D. 4","下列程序执行后输出的结果是_____。f(int a){ int b=0;static c=3;a=b+c++;return(a);}main(){ int a=2,k;k=f(a);  k=f(a+1);printf('%dn',k);}","
 请将下列程序执行后输出的结果是()。

f(int a){ int b=0;static c=3;a=b+c++;return(a);}main(){ int a=2,k;k=f(a);  k=f(a+1);printf('%dn',k);}

A. 3  B. 0  C. 5  D. 4","
 下列程序执行后输出的结果是____。f(int a){ int b=0;static c=3;a=b+c++;return(a);}main(){ int a=2,k;k=f(a);  k=f(a+1);printf('%dn',k);}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设有以下定义：#define N 3#define Y(n) ((N+1)*n)则执行语句：z=2*(N+Y(5+1));后,z的值为()。A. 出错  B. 42  C. 48  D. 54","设有以下定义：#define N 3#define Y(n) ((N+1)*n)则执行语句：z=2*(N+Y(5+1));后,z的值为____","
 请将下列题目转化为填空题:

设有以下定义：#define N 3#define Y(n) ((N+1)*n)则执行语句：z=2*(N+Y(5+1));后,z的值为()。A. 出错  B. 42  C. 48  D. 54","
 设有以下定义：#define N 3#define Y(n) ((N+1)*n)则执行语句：z=2*(N+Y(5+1));后,z的值为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设有语句enum days{sun, mon,tue=2,wed,thu,fri,sat}；则语句printf('%dn',wed);执行结果是()。A. 0  B. 1  C. 3  D. wed","设有语句enum days{sun, mon,tue=2,wed,thu,fri,sat}；则语句printf('%dn',wed);执行结果是____","
 请将下列题目转化为填空题:

设有语句enum days{sun, mon, tue=2, wed, thu, fri, sat}；则语句printf('%dn', wed);执行结果是()。A. 0  B. 1  C. 3  D. wed","
 设有语句enum days{sun, mon,tue=2,wed,thu,fri,sat}；则语句printf('%dn',wed);执行结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
在C语言中,变量所分配的内存空间大小（ ）。 A. 均为一个字节 B. 由用户自己定义 C. 由变量的类型决定 D. 是任意的","在C语言中,变量所分配的内存空间大小____","
 请将下列题目转化为填空题:

在C语言中,变量所分配的内存空间大小( )。

A. 均为一个字节
B. 由用户自己定义
C. 由变量的类型决定
D. 是任意的","
 在C语言中,变量所分配的内存空间大小____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若执行printf('' % dn '',strlen(''anx41 '' ) )语句,其输出结果是( )。A. 2     B. 3     C. 4     D. 5","若执行printf('' % dn '',strlen(''anx41 '' ) )语句,其输出结果是____","
 请将下列题目转化为填空题:

若执行printf('' % dn '',strlen(''anx41 '' ) )语句,其输出结果是( )。A. 2     B. 3     C. 4     D. 5","
 若执行printf('' % dn '',strlen(''anx41 '' ) )语句,其输出结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
以下运算符中,优先级最高的运算符是（ ）。A. <=      B. ～     C. !=    D. ||",优先级最高的运算符是____,"
 以下运算符中,优先级最高的运算符是（D. ||）。","
 优先级最高的运算符是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设有语句int x; char ch=1; double d; 则表达式x=5,ch++,x+1的值是( )。A. 5    B. 1     C. 2     D. 6 ","设有语句int x; char ch=1; double d; 则表达式x=5,ch++,x+1的值是____","
 请将下列题目转化为填空题:

设有语句int x; char ch=1; double d; 则表达式x=5,ch++,x+1的值是( )。A. 5    B. 1     C. 2     D. 6 

请将下列题目转化为填空题:

设有语句int x; char ch=1; double d; 则表达式x=5,ch++,x+1的值是( )。A. 5    B. 1     C. 2     D. 6 

请将下列题目转化为填空题:

设有语句int x; char ch=1; double d; 则表达式x=5,ch++,x+1的值是( )。A. 5    B. 1     C. 2     D. 6 

请将下列题目转化为填空题:

设有语句int x; char ch=1; double d; 则表达式x=5,ch++,x+1的值是( )。A. 5    B. 1     C. 2     D. 6 

请将下列题目转化为填空题:

设有语句int x; char ch=1; double d; 则表达式x=5,ch++,x+1的值是( )。A. 5    B. 1     C. 2     D. 6 

请将下列题目转化为填空题:

设有语句int x; char ch=1; double d; 则表达式x=5,ch++,x+1的值是( )。A. 5    B. 1     C. 2     D. 6 

请将下列题目转化为填空题:

设有语句int x; char ch=1; double d; 则表达式x=5,ch++,x+1的值是( )。A. 5    B. 1     C. 2     D. 6 

请将下列题目转化为填空题:

设有语句int x; char ch=1; double d; 则表达式x=5,ch++,x+1的值是( )。A. ","
 设有语句int x; char ch=1; double d; 则表达式x=5,ch++,x+1的值是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
表示关系x<=y<=z的C语言表达式为（ ）。A.（x<=y）&&(y<=z)     B. (x<=y)and(y<=z) C. (x<=y<=z)           D. (x<=y)&(y<=z) ",表示关系x<=y<=z的C语言表达式为____,"
 表示关系x<=y<=z的C语言表达式为（D. (x<=y)&(y<=z)）。","
 表示关系x<=y<=z的C语言表达式为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若有以下定义：char a; int b;float c; double d;则表达式a*b+d-c值的类型为（ ）。A. float   B. int    C. char    D. double",若有以下定义：char a; int b;float c; double d;则表达式a*b+d-c值的类型为____,"
 请将下列题目转化为填空题:

若有以下定义：char a; int b; float c; double d; 则表达式a*b+d-c值的类型为（ ）。A. float   B. int    C. char    D. double","
 若有以下定义：char a; int b;float c; double d;则表达式a*b+d-c值的类型为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设有以下程序段int x=0,s=0;while(!x!=0) s+=++x;printf('' % d '',s);则（ ）。A. 运行程序段后输出0                    B. 运行程序段后输出1C. 程序段中的循环控制表达式是非法的      D. 程序段出现死循环 ","设有以下程序段int x=0,s=0;while(!x!=0) s+=++x;printf('' % d '',s);则输出____","
 请将下列程序段填空：

int x = 0, s = 0; while (!x!=0) s += ++x; printf(""%d"", s); 

则（）。

A. 运行程序段后输出0
B. 运行程序段后输出1
C. 程序段中的循环控制表达式是非法的
D. 程序段出现死循环","
 设有以下程序段int x=0,s=0;while(!x!=0) s+=++x;printf('' % d '',s);则输出____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
以下函数返回a数组中的最小元素所在的小标值,在下划线处应填入的是（ ）。 int (int *a,int n){ int i,index=0;  for(i=1;i<n;i++)if(a[i]<a[index])   __________;return index;}A. a[i]=a[index]   B. index=i  C. i=index   D. a[index]=a[i]","以下函数返回a数组中的最小元素所在的小标值,在下划线处应填入的是_____。 int (int *a,int n){ int i,index=0;  for(i=1;i<n;i++)if(a[i]<a[index])   __________;return index;}","
 以下函数返回a数组中的最小元素所在的小标值,在下划线处应填入的是（_______）。

int (int *a,int n){ int i,index=0;  for(i=1;i<n;i++)if(a[i]<a[index])   __________;return index;}

A. a[i]=a[index]  
B. index=i  
C. i=index  
D. a[index]=a[i]","
 以下函数返回a数组中的最小元素所在的小标值,在下划线处应填入的是_____。 int (int *a,int n){ int i,index=0;  for(i=1;i<n;i++)if(a[i]<a[index])   __________;return index;}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
如下程序段的输出结果是（ ）。int a[]={6,7,8,9,10};int *p;p=a;*(ptr+2)+=2;printf('' % d,% dn '',*ptr,*(ptr+2));A. 8,10  B. 6,8  C. 7,9   D. 6,10 ","如下程序段的输出结果是_____int a[]={6,7,8,9,10};int *p;p=a;*(ptr+2)+=2;printf('' % d,% dn '',*ptr,*(ptr+2));","
 请将下列程序段的输出结果是（ ） int a[]={6,7,8,9,10};int *p;p=a;*(ptr+2)+=2;printf('' % d,% dn '',*ptr,*(ptr+2));A. 8,10  B. 6,8  C. 7,9  D. 6,10 ","
 如下程序段的输出结果是_____int a[]={6,7,8,9,10};int *p;p=a;*(ptr+2)+=2;printf('' % d,% dn '',*ptr,*(ptr+2));",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若有以下定义和语句,则对a数组元素地址的正确引用是（ ）。int a[2][3],(*p)[3];  p=a;A. (p+1)+2    B. p[1]+1    C. p[2]    D. *(p+2) ","若有以下定义和语句,则对a数组元素地址的正确引用是____。int a[2][3],(*p)[3];  p=a;","
 请将下列题目转化为填空题:

若有以下定义和语句,则对a数组元素地址的正确引用是（ ). int a[2][3],(*p)[3];  p=a;A. (p+1)+2    B. p[1]+1    C. p[2]    D. *(p+2) 

请从以下选项中选择正确的答案:

A. (p+1)+2
B. p[1]+1
C. p[2]
D. *(p+2)","
 若有以下定义和语句,则对a数组元素地址的正确引用是____。int a[2][3],(*p)[3];  p=a;",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下列程序的输出结果是（ ）。#include<stdio.h>#include<string.h>void main(void){ char *p1, *p2, str[50]= ''xyz '';p1=''abcd '';p2=''ABCD '';strcpy(str,strcat(p1,p2));printf('' % s '',str);}A. abcd B. ABCD C. abcdABCD  D. xyz ","下列程序的输出结果是_____。#include<stdio.h>#include<string.h>void main(void){ char *p1, *p2, str[50]= ''xyz '';p1=''abcd '';p2=''ABCD '';strcpy(str,strcat(p1,p2));printf('' % s '',str);}","
 下列程序的输出结果是（B. ABCD）。","
 下列程序的输出结果是_____。#include<stdio.h>#include<string.h>void main(void){ char *p1, *p2, str[50]= ''xyz '';p1=''abcd '';p2=''ABCD '';strcpy(str,strcat(p1,p2));printf('' % s '',str);}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设有说明语句 int *s[3]; 则s表示( )。A. 指针数组  B. 指针函数 C. 函数指针 D. 数组指针 ",设有说明语句 int *s[3]; 则s表示____,"
 请将下列题目转化为填空题:

设有说明语句 int *s[3]; 则s表示( )。
A. 指针数组
B. 指针函数
C. 函数指针
D. 数组指针","
 设有说明语句 int *s[3]; 则s表示____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
已有如下数组定义和f函数调用语句,则在f函数的说明中,对形参数组array的正确定义方式为（ ）。 int a[3][4];f(a);A. f(array[3][4]) B. f(int array[3][]) C. f(int array[][4]) D. f(int array[][])","已有如下数组定义和f函数调用语句,则在f函数的说明中,对形参数组array的正确定义方式为____int a[3][4];f(a);","
 已有如下数组定义和f函数调用语句,则在f函数的说明中,对形参数组array的正确定义方式为（ ）。 int a[3][4];f(a);

A. f(array[3][4]) 
B. f(int array[3][]) 
C. f(int array[][4]) 
D. f(int array[][])","
 已有如下数组定义和f函数调用语句,则在f函数的说明中,对形参数组array的正确定义方式为____int a[3][4];f(a);",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下结构体说明和变量的定义,且指针p指向变量a,指针q指向变量b。则不能把结点b连接在结点a之后的语句是（ ）。struct node{char data;struct node* next;}a,b,*p=&a,*q=&b;A. a.next=q;   B. p.next=&b;   C. P->next=&b; D. (*p).next=q;","有以下结构体说明和变量的定义,且指针p指向变量a,指针q指向变量b。则不能把结点b连接在结点a之后的语句是____。struct node{char data;struct node* next;}a,b,*p=&a,*q=&b;","
 请将下列题目转化为填空题:

有以下结构体说明和变量的定义,且指针p指向变量a,指针q指向变量b。则不能把结点b连接在结点a之后的语句是（ ）。

struct node{char data;struct node* next;}a,b,*p=&a,*q=&b;

A. a.next=q;  

B. p.next=&b;  

C. P->next=&b;  

D. (*p).next=q;","
 有以下结构体说明和变量的定义,且指针p指向变量a,指针q指向变量b。则不能把结点b连接在结点a之后的语句是____。struct node{char data;struct node* next;}a,b,*p=&a,*q=&b;",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下列程序的输出结果是( )。void main(void){  int x;x=fun(4);printf('' % dn '',x);}int fun(int n){ int s;if(n==1)||(n==2) s=2;else  s=n+fun(n-1);return (s);}A. 2  B. 9   C. 11  D. 12","下列程序的输出结果是____。void main(void){  int x;x=fun(4);printf('' % dn '',x);}int fun(int n){ int s;if(n==1)||(n==2) s=2;else  s=n+fun(n-1);return (s);}","
 请将下列程序的输出结果是( )。

void main(void){
  int x;
  x = fun(4);
  printf('' % dn '',x);
}

int fun(int n){
   int s;
   if(n == 1) || (n == 2) s = 2;
   else
       s = n + fun(n - 1);
   return (s);
}

A. 2  
B. 9  
C. 11  
D. 12","
 下列程序的输出结果是____。void main(void){  int x;x=fun(4);printf('' % dn '',x);}int fun(int n){ int s;if(n==1)||(n==2) s=2;else  s=n+fun(n-1);return (s);}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
运行下列程序,其结果是( )。void main(void){ int k=5;{int k=8;printf('' % 2 d '',k);}printf('' % 2 dn '',k);}A. 5 5   B. 8 5    C. 8 8    D. 5 8","运行下列程序,其结果是_____。void main(void){ int k=5;{int k=8;printf('' % 2 d '',k);}printf('' % 2 dn '',k);}","
 请将下列程序,其结果是( )。void main(void){ int k=5;{int k=8;printf('' % 2 d '',k);}printf('' % 2 dn '',k);}A. 5 5   B. 8 5    C. 8 8    D. 5 8

填空题：

运行下列程序,其结果是( )。void main(void){ int k=5;{int k=8;printf('' % 2 d '',k);}printf('' % 2 dn '',k);}A. 5 5   B. 8 5    C. 8 8    D. 5 8

正确答案：B. 8 5","
 运行下列程序,其结果是_____。void main(void){ int k=5;{int k=8;printf('' % 2 d '',k);}printf('' % 2 dn '',k);}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下列程序执行后输出的结果是( )。int f(int a){ int b=0;static c=3;a=b+c++;return(a);}void main(void){ int a=2,k;k=f(a);  k=f(a+1);printf('' % dn '',k);}A. 3  B. 0  C. 5  D. 4","下列程序执行后输出的结果是____。int f(int a){ int b=0;static c=3;a=b+c++;return(a);}void main(void){ int a=2,k;k=f(a);  k=f(a+1);printf('' % dn '',k);}","
 请将下列程序执行后输出的结果是(C)。int f(int a){ int b=0;static c=3;a=b+c++;return(a);}void main(void){ int a=2,k;k=f(a);  k=f(a+1);printf('' % dn '',k);}","
 下列程序执行后输出的结果是____。int f(int a){ int b=0;static c=3;a=b+c++;return(a);}void main(void){ int a=2,k;k=f(a);  k=f(a+1);printf('' % dn '',k);}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
以下程序运行后的输出结果是（）。#define P 3 void F(int x){return(P*x*x);} void main(void){printf('' % dn '',F(3+5));} A. 192   B. 29  C. 25   D. 编译出错 ","以下程序运行后的输出结果是_____。#define P 3 void F(int x){return(P*x*x);} void main(void){printf('' % dn '',F(3+5));} ","
 以下程序运行后的输出结果是（B. 29）。","
 以下程序运行后的输出结果是_____。#define P 3 void F(int x){return(P*x*x);} void main(void){printf('' % dn '',F(3+5));} ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设有语句enum days{sun, mon,tue=2,wed,thu,fri,sat}；则语句printf('%dn',wed);执行结果是（ ）。A. 0  B. 1  C. 3  D. wed","设有语句enum days{sun, mon,tue=2,wed,thu,fri,sat}；则语句printf('%dn',wed);执行结果是____","
 请将下列题目转化为填空题:

设有语句enum days{sun, mon, tue=2, wed, thu, fri, sat}；则语句printf('%dn', wed);执行结果是（ ）。A. 0  B. 1  C. 3  D. wed","
 设有语句enum days{sun, mon,tue=2,wed,thu,fri,sat}；则语句printf('%dn',wed);执行结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设有以下说明和定义：union DATE{long i; int k[5]; char c;};struct date{int cat; union DATE cow; double dog;}too;则下列语句的执行结果是（ ）。printf('' % d '',sizeof(too));A. 20   B. 15    C. 14   D. 10","设有以下说明和定义：union DATE{long i; int k[5]; char c;};struct date{int cat; union DATE cow; double dog;}too;则下列语句的执行结果是____printf('' % d '',sizeof(too));","
 请将下列题目转化为填空题:

设有以下说明和定义：union DATE{long i; int k[5]; char c;};struct date{int cat; union DATE cow; double dog;}too;则下列语句的执行结果是（ ). printf('' % d '',sizeof(too));A. 20   B. 15    C. 14   D. 10","
 设有以下说明和定义：union DATE{long i; int k[5]; char c;};struct date{int cat; union DATE cow; double dog;}too;则下列语句的执行结果是____printf('' % d '',sizeof(too));",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设有 int x=11; 则表示式 (++x)%3 的值是（　）。A. 0　B. 1  C. 2  D. 3",设有 int x=11; 则表示式 (++x)%3 的值是____,"
 请将下列题目转化为填空题:

设有 int x=11; 则表示式 (++x)%3 的值是（　）。A. 0　B. 1  C. 2  D. 3","
 设有 int x=11; 则表示式 (++x)%3 的值是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
C语言源程序名的后缀是（　）。A. exe           B. cp            C. obj                D. c",C语言源程序名的后缀是____,"
 1. 分析题目，需要找到C语言源程序名的后缀。
2. 分析选项A、B、C、D，找出符合要求的后缀。
3. 选项A（.exe）是可执行文件的后缀；
4. 选项B（.cp）是编译后的目标文件的后缀，但源程序名不带.cp；
5. 选项C（.obj）是编译后的目标文件的后缀，但源程序名不带.obj；
6. 选项D（.c）是C语言源程序名的后缀，符合题目要求。

最终答案：D（.c）","
 C语言源程序名的后缀是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若在定义语句：int a,b,c,*p=&c;之后,接着执行以下选项中的语句,则能正确执行的语句是（　）。A. scanf（'' % d '',a,b,c）;                     B. scanf（'' % d % d % d '',a,b,c）;C. scanf（'' % d '',a,b）;                         D. scanf（'' % d '',&p）","若在定义语句：int a,b,c,*p=&c;之后,接着执行以下选项中的语句,则能正确执行的语句是____","
 1. 题目中已经定义了一个整型变量c，并将其地址赋值给指针p，所以选项D中 scanf() 函数的格式控制字符串应该使用 & 符号来表示指针p的地址。

2. 选项A和C中的scanf()函数的格式控制字符串都是只包含一个字符'%d'，而选项B中的scanf()函数的格式控制字符串包含两个字符'%d %d %d'。由于c是一个整型变量，只能接受一个整数值，所以选项B中的scanf()函数的格式控制字符串是不正确的。

3. 因此，能正确执行的语句是选项D：scanf('%d', &p)。","
 若在定义语句：int a,b,c,*p=&c;之后,接着执行以下选项中的语句,则能正确执行的语句是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
C语言中运算对象必须是整型的运算符是 （　）。A. %= 　　　　B. ／ 　　 C. =　　　　　 D. 〈=",C语言中运算对象必须是整型的运算符是____,"
 C语言中运算对象必须是整型的运算符是 （ B. ／ ）。","
 C语言中运算对象必须是整型的运算符是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若有定义语句：int a[3][6]; ,按在内存中的存放顺序,a数组的第10个元素是（　）。A. a[0][4]         B. a[0][3]         C. a[1][4]        D. a[1][3]","若有定义语句：int a[3][6]; ,按在内存中的存放顺序,a数组的第10个元素是____","
 请将下列题目转化为填空题:

若有定义语句：int a[3][6];,按在内存中的存放顺序,a数组的第10个元素是（　）。A. a[0][4]         B. a[0][3]         C. a[1][4]        D. a[1][3]","
 若有定义语句：int a[3][6];,按在内存中的存放顺序,a数组的第10个元素是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
语句printf(''abre 'hi' yboun '');的输出结果是（　）。(说明:'b'是退格符)A. re'hi'you  B. abre'hi'ybou  C. abre'hi'ybou　D. abre'hi'ybou ",语句printf(''abre 'hi' yboun '');的输出结果是____,"
 请将下列题目转化为填空题:

语句`printf(''abre 'hi' yboun '');`的输出结果是（　）。(说明:'b'是退格符)

A. re'hi'you 
B. abre'hi'ybou 
C. abre'hi'ybou 
D. abre'hi'ybou 

正确答案是（D）abre'hi'ybou。","
 语句printf(''abre 'hi' yboun '');的输出结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
以下对一维整形数组a的正确说明是 ( )A. int a(10); B. int n=10,a[n];C. int n; D. int a[10]",对一维整形数组a的正确说明是____,"
 以下对一维整形数组a的正确说明是 ( )。

A. int a(10);
B. int n=10,a[n];
C. int n;
D. int a[10]。","
 对一维整形数组a的正确说明是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
以下对二维数组a的正确说明是 ( )A. int a[3][]; B. float a(3,4);C. double a[1][4]; D. float a(3)(4);",对二维数组a的正确说明是____,"
 请将下列题目转化为填空题:

以下对二维数组a的正确说明是 ( )
A. int a[3][]; 
B. float a(3,4); 
C. double a[1][4]; 
D. float a(3)(4); 

请从给出的选项中选择正确的描述二维数组a的语句。","
 对二维数组a的正确说明是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若二维数组a有m列,则在a[x]前面的元素个数为 ( )A. j*m+iB. i*m+jC. i*m+j-1D. i*m+j+1","若二维数组a有m列,则在a[x]前面的元素个数为____","
 请将下列题目转化为填空题:

若二维数组a有m列,则在a[x]前面的元素个数为 ( ) A. j*m+i B. i*m+j C. i*m+j-1 D. i*m+j+1","
 若二维数组a有m列,则在a[x]前面的元素个数为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
数字字符0的ASCII值为48,若有以下程序 main(){ char a='1',b='2'; printf('' % c,'',b++); printf('' % dn '',b-a); 51-49} 程序运行后的输出结果是（）。 A. 3,2    B. 50,2    C. 2,2    D. 2,50 ","数字字符0的ASCII值为48,若有以下程序 main(){ char a='1',b='2'; printf('' % c,'',b++); printf('' % dn '',b-a); 51-49} 程序运行后的输出结果是____","
 请将下列题目转化为填空题:

数字字符0的ASCII值为48,若有以下程序 main(){ char a='1',b='2'; printf('' % c,'',b++); printf('' % dn '',b-a); 51-49} 程序运行后的输出结果是（）。 A. 3,2    B. 50,2    C. 2,2    D. 2,50 

请将答案放在括号中。","
 数字字符0的ASCII值为48,若有以下程序 main(){ char a='1',b='2'; printf('' % c,'',b++); printf('' % dn '',b-a); 51-49} 程序运行后的输出结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下程序 main() { int m=12,n=34; printf('' % d % d '',m++, ++n);printf('' % d % dn '',n++, ++m); } 程序运行后的输出结果是（）。 A. 12 35 35 14   B. 12 35 35 13   C. 12 34 35 14   D. 12 34 35 13 ","有以下程序 main() { int m=12,n=34; printf('' % d % d '',m++, ++n);printf('' % d % dn '',n++, ++m); } 程序运行后的输出结果是____","
 以下是对题目的填空题：

有以下程序 main() { int m=12,n=34; printf('' % d % d '',m++, ++n);printf('' % d % dn '',n++, ++m); } 程序运行后的输出结果是（）。

A. 12 35 35 14   B. 12 35 35 13   C. 12 34 35 14   D. 12 34 35 13 

正确答案是 A. 12 35 35 14。","
 有以下程序 main() { int m=12,n=34; printf('' % d % d '',m++, ++n);printf('' % d % dn '',n++, ++m); } 程序运行后的输出结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下语句:int b;char c[10];,则正确的输入语句是（）。 A. scanf('' % d % s '',&b,&c);    B. scanf('' % d % s '',&b,c); C. scanf('' % d % s '',b,c);       D. scanf('' % d % s '',b,&c); ","有以下语句:int b;char c[10];,则正确的输入语句是____","
 以下为填空题：

有以下语句:int b;char c[10];,则正确的输入语句是（）。 A. scanf('' % d % s '',&b,&c);    B. scanf('' % d % s '',&b,c); C. scanf('' % d % s '',b,c);       D. scanf('' % d % s '',b,&c); 

请从给出的选项中选择正确的输入语句。

选项：
A. scanf('' % d % s '',&b,&c);
B. scanf('' % d % s '',&b,c);
C. scanf('' % d % s '',b,c);
D. scanf('' % d % s '',b,&c);","
 有以下语句:int b;char c[10];,则正确的输入语句是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下程序main(){ int m,n,p; scanf(''m = % dn = % dp = % d '',&m,&n,&p); printf('' % d % d % dn '',m,n,p); } 若想从键盘上输入数据,使变量m中的值为123,n中的值为456,p中的值为789,则正确的输入是（）。 A. m=123n=456p=789 B. m=123 n=456 p=789 C. m=123,n=456,p=789 D. 123 456 789 ","有以下程序main(){ int m,n,p; scanf(''m = % dn = % dp = % d '',&m,&n,&p); printf('' % d % d % dn '',m,n,p); } 若想从键盘上输入数据,使变量m中的值为123,n中的值为456,p中的值为789,则正确的输入是____",". 

首先，我们分析题目要求，需要从键盘输入数据使得变量m的值为123，n的值为456，p的值为789。然后我们分析选项：

A. m=123n=456p=789
这个选项中，n和p的值没有经过任何操作，所以不符合题意。

B. m=123 n=456 p=789
这个选项中，n和p的值没有经过任何操作，所以不符合题意。

C. m=123,n=456,p=789
这个选项中，所有变量的值都经过操作，符合题意。

D. 
这个选项没有给出完整的输入格式，所以不符合题意。

综上，正确答案是C。","
 有以下程序main(){ int m,n,p; scanf(''m = % dn = % dp = % d '',&m,&n,&p); printf('' % d % d % dn '',m,n,p); } 若想从键盘上输入数据,使变量m中的值为123,n中的值为456,p中的值为789,则正确的输入是（）。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下程序main() { int a,b,d=25;  a=d10%9;b=a&&(-1);  printf('' % d,% dn '',a,b);  } 程序运行后的输出结果是（）。A. 6,1     B. 2,1     C. 6,0     D. 2,0 ","有以下程序main() { int a,b,d=25;  a=d10%9;b=a&&(-1);  printf('' % d,% dn '',a,b);  } 程序运行后的输出结果是____","
 请将下列程序main() { int a,b,d=25;  a=d10%9;b=a&&(-1);  printf('' % d,% dn '',a,b);  } 程序运行后的输出结果是（）。A. 6,1     B. 2,1     C. 6,0     D. 2,0 
 答案是A. 6,1","
 有以下程序main() { int a,b,d=25;  a=d10%9;b=a&&(-1);  printf('' % d,% dn '',a,b);  } 程序运行后的输出结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下列程序执行后的输出结果是（　）。void main(){ int x='f'; printf('' % c n '','A'+(x-'a'+1)); }A. A　　　 B. B　　　 C. F 　　D. G","下列程序执行后的输出结果是____void main(){ int x='f'; printf('' % c n '','A'+(x-'a'+1)); }","
 请将下列程序执行后的输出结果是（　）。void main(){ int x='f'; printf('' % c n '','A'+(x-'a'+1)); }A. A　　　 B. B　　　 C. F 　　D. G","
 下列程序执行后的输出结果是____void main(){ int x='f'; printf('' % c n '','A'+(x-'a'+1)); }",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若变量已正确定义,有以下程序段i=0;do {printf（'' % d,'',i）;}while（i++）;printf（'' % dn '',i）其输出结果是（　）。A. 0,0       B. 0,1        C. 1,1      D. 程序进入无限循环","若变量已正确定义,有以下程序段i=0;do {printf（'' % d,'',i）;}while（i++）;printf（'' % dn '',i）其输出结果是____","
 请将下列程序段填空，以完成正确的输出结果：

```c
i = 0;
do {
    printf(""%d,"", i);
    i++;
} while (i++);
printf(""%d"", i);
```

选项有：
A. 0,0       B. 0,1        C. 1,1      D. 程序进入无限循环","
 若变量已正确定义,有以下程序段i=0;do {printf（'' % d,'',i）;}while（i++）;printf（'' % dn '',i）其输出结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下程序#include  <stdio.h>void main（）{  int i,j,m=55;for（i=1;i<=3;i++）for（j=3;j<=i;j++） m=m%j;printf（'' % dn '',m）;}程序的运行结果是(  )。A. 0            B. 1           C. 2            D. 3","有以下程序#include  <stdio.h>void main（）{  int i,j,m=55;for（i=1;i<=3;i++）for（j=3;j<=i;j++） m=m%j;printf（'' % dn '',m）;}程序的运行结果是____","
 请将下列程序#include <stdio.h>void main(){  int i,j,m=55;for（i=1;i<=3;i++）for（j=3;j<=i;j++） m=m%j;printf(""%d"",m）;}程序的运行结果是(  )。A. 0            B. 1           C. 2            D. 3","
 有以下程序#include  <stdio.h>void main（）{  int i,j,m=55;for（i=1;i<=3;i++）for（j=3;j<=i;j++） m=m%j;printf（'' % dn '',m）;}程序的运行结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
已定义以下函数fun(int *p){ return *p; }该函数的返回值是（　）。A. 不确定的值 　　　　　B. 形参p所指存储单元中的值C. 形参p中存放的值　　　D. 形参p的地址值",已定义以下函数fun(int *p){ return *p; }该函数的返回值是____,"
 请将下列题目转化为填空题:

已定义以下函数fun(int *p){ return *p; }该函数的返回值是（　）。
A. 不确定的值 
B. 形参p所指存储单元中的值 
C. 形参p中存放的值 
D. 形参p的地址值","
 已定义以下函数fun(int *p){ return *p; }该函数的返回值是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
执行下面的程序段后,变量k中的值为（　）。int k=3, s[2];s[0]=k; k=s[1]*10;A. 10 　　B. 3　　 C. 不定值　　D. 0","执行下面的程序段后,变量k中的值为_____。int k=3, s[2];s[0]=k; k=s[1]*10;","
 执行下面的程序段后,变量k中的值为（B. 3）。","
 执行下面的程序段后,变量k中的值为_____。int k=3, s[2];s[0]=k; k=s[1]*10;",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下函数int aaa（char *s）{ char *t=s;while（*t++）;t--;return（t-s）;}以下关于aaa函数的功能叙述正确的是（　）。A. 求字符串s的长度              B. 比较两个串的大小C. 将串s复制到串t                 D. 求字符串s所占字节数 ",有以下函数int aaa（char *s）{ char *t=s;while（*t++）;t--;return（t-s）;}aaa函数的功能是____,"
 以下关于aaa函数的功能叙述正确的是（D）。D. 求字符串s所占字节数。","
 有以下函数int aaa（char *s）{ char *t=s;while（*t++）;t--;return（t-s）;}aaa函数的功能是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下程序void main(){  char s[ ]={ ''aeiou ''},*ps;ps=s; printf('' % cn '',(*ps)+4);}程序运行后的输出结果是________。A. a　B. o 　C. u　D. e ","有以下程序void main(){  char s[ ]={ ''aeiou ''},*ps;ps=s; printf('' % cn '',(*ps)+4);}程序运行后的输出结果是____","
 请将下列程序转化为填空题:

有以下程序void main(){  char s[ ]={ ''aeiou ''},*ps;ps=s; printf('' % cn '',(*ps)+4);}程序运行后的输出结果是________。A. a　B. o 　C. u　D. e 
 请将下列程序转化为填空题:

有以下程序void main(){  char s[ ]={ ''aeiou ''},*ps;ps=s; printf('' % cn '',(*ps)+4);}程序运行后的输出结果是________。A. a　B. o 　C. u　D. e 
 请将下列程序转化为填空题:

有以下程序void main(){  char s[ ]={ ''aeiou ''},*ps;ps=s; printf('' % cn '',(*ps)+4);}程序运行后的输出结果是________。A. a　B. o 　C. u　D. e 
 请将下列程序转化为填空题:

有以下程序void main(){  char s[ ]={ ''aeiou ''},*ps;ps=s; printf('' % cn '',(*ps)+4);}程序运行后的输出结果是________。A. a　B. o 　C. u　D. e 
 请将下列程序转化为填空题:

有以下程序void main(){  char s[ ]={ ''aeiou ''},*ps;ps=s; printf('' % cn '',(*ps)+4);}程序运行后的输出结果是________。A. a　B. o 　C. u　D. e 
 请将下列程序转化为填空题:

有以下程序void main(){  char s[ ]={ ''aeiou ''},*ps;ps=s; printf('' % cn '',(*ps)+4);}程序运行后的输出结果是________。A. a　B. o 　C. u　D. e 
 请将下列程序转化为填空题:

有以下程序void main(){  char s[ ]={ ''aeiou ''},*ps;ps=s; printf('' % cn '',(*ps)+4);}程序运行后的输出结果是________。A. a","
 有以下程序void main(){  char s[ ]={ ''aeiou ''},*ps;ps=s; printf('' % cn '',(*ps)+4);}程序运行后的输出结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下程序#include #define F(X,Y)  X*Ymain(){int a=3, b=4;printf('' % dn '', F(a+b, a-b));}程序运行后的输出结果是（　）。A. 12 　B. 7 　C. -7 　D. 11","有以下程序#include #define F(X,Y)  X*Ymain(){int a=3, b=4;printf('' % dn '', F(a+b, a-b));}程序运行后的输出结果是____","
 请将下列程序#include #define F(X,Y)  X*Ymain(){int a=3, b=4;printf('' % dn '', F(a+b, a-b));}程序运行后的输出结果是（　）。A. 12 　B. 7 　C. -7 　D. 11","
 有以下程序#include #define F(X,Y)  X*Ymain(){int a=3, b=4;printf('' % dn '', F(a+b, a-b));}程序运行后的输出结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下程序main(){ int m[][3]={1,4,7,2,5,8,3,6,9};int i,j,k=2;for(i=0;i<3;i++){ printf('' % d '',m[k][i]); }}执行后输出结果是（ ）。A. 2 5 8 　B. 3 6 9 　C. 4 5 6 　D. 7 8 9","有以下程序main(){ int m[][3]={1,4,7,2,5,8,3,6,9};int i,j,k=2;for(i=0;i<3;i++){ printf('' % d '',m[k][i]); }}执行后输出结果是____","
 请将下列程序main(){ int m[][3]={1,4,7,2,5,8,3,6,9};int i,j,k=2;for(i=0;i<3;i++){ printf('' % d '',m[k][i]); }}执行后输出结果是（ ）。A. 2 5 8 　B. 3 6 9 　C. 4 5 6 　D. 7 8 9

请将上述程序修改为以下形式，以便更好地进行填空题：

有以下程序main(){ int m[][3]={1,4,7,2,5,8,3,6,9};int i,j,k=2;for(i=0;i<3;i++){ printf('' % d '',m[k][i]); }}执行后输出结果是（ ​）。A. 2 5 8 ​B. 3 6 9 ​C. 4 5 6 ​D. 7 8 9","
 有以下程序main(){ int m[][3]={1,4,7,2,5,8,3,6,9};int i,j,k=2;for(i=0;i<3;i++){ printf('' % d '',m[k][i]); }}执行后输出结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下程序#include <stdio.h>void main(){  FILE *fp; int i;char ch[]='abcd',t;fp=fopen('abc.dat','wb+');for(i=0;i<4;i++)fwrite（&ch[i],1,1,fp）;fseek(fp,-2L,SEEK_END); 说明：SEEK_END为文件尾fread(&t,1,1,fp);fclose(fp);printf('%cn',t);}程序执行后的输出结果是________。A. c　B. d　C. a　D. b","有以下程序#include <stdio.h>void main(){  FILE *fp; int i;char ch[]='abcd',t;fp=fopen('abc.dat','wb+');for(i=0;i<4;i++)fwrite（&ch[i],1,1,fp）;fseek(fp,-2L,SEEK_END); 说明：SEEK_END为文件尾fread(&t,1,1,fp);fclose(fp);printf('%cn',t);}程序执行后的输出结果是____","的输出结果是____。 

填空：

以下是一个C语言程序，它将_______（填空1），并输出结果为____（填空2）。

以下是C语言程序，它将_______（填空3），并输出结果为____（填空4）。

以下是一个C语言程序，它将_______（填空5），并输出结果为____（填空6）。 

C语言程序#include <stdio.h>void main(){ 
FILE *fp; int i;char ch[]='abcd',t;fp=fopen('abc.dat','wb+');for(i=0;i<4;i++)fwrite（&ch[i],1,1,fp）;fseek(fp,-2L,SEEK_END); 
fread(&t,1,1,fp);fclose(fp);printf('%cn',t);}","
 有以下程序#include <stdio.h>void main(){  FILE *fp; int i;char ch[]='abcd',t;fp=fopen('abc.dat','wb+');for(i=0;i<4;i++)fwrite（&ch[i],1,1,fp）;fseek(fp,-2L,SEEK_END); 说明：SEEK_END为文件尾fread(&t,1,1,fp);fclose(fp);printf('%cn',t);",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
C语言源程序文件经过C编译程序编译连接之后生成的文件后缀名是____A. .exe B. .obj C. .bat D. .c",C语言源程序文件经过C编译程序编译连接之后生成的文件后缀名是____,"
 请将下列题目转化为填空题:

C语言源程序文件经过C编译程序编译连接之后生成的文件后缀名是____D..c","
 C语言源程序文件经过C编译程序编译连接之后生成的文件后缀名是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
结构化程序设计的三种基本结构是____A. 顺序结构、复杂结构、循环结构           B. 顺序结构、复杂结构、分支结构C. 顺序结构、分支结构、选择结构           D. 顺序结构、选择结构、循环结构",结构化程序设计的三种基本结构是____,"
 将下列题目转化为填空题:

结构化程序设计的三种基本结构是____A. 顺序结构、复杂结构、循环结构           B. 顺序结构、复杂结构、分支结构C. 顺序结构、分支结构、选择结构           D. 顺序结构、选择结构、循环结构","
 结构化程序设计的三种基本结构是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设变量定义为【int a[3]={1,3,5}, *p=&a[0]+1; 】,则*p的值是____A. 2  B. 3 C. 4   D. &a[0]+1","设变量定义为【int a[3]={1,3,5}, *p=&a[0]+1; 】,则*p的值是____","
 设变量定义为【int a[3]={1,3,5}, *p=&a[0]+1; 】,则*p的值是____A. 2  B. 3 C. 4  D. &a[0]+1","
 设变量定义为【int a[3]={1,3,5}, *p=&a[0]+1; 】,则*p的值是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
在C 语言程序中,在函数内部定义的变量称为____A. 全局量 B. 外部变量 C. 全程变量  D. 内部变量","在C 语言程序中,在函数内部定义的变量称为____","
 在C 语言程序中,在函数内部定义的变量称为____D. 内部变量。","
 在C 语言程序中,在函数内部定义的变量称为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
对于以下的变量定义,正确的表达式是____           struct node {             char s[10];             int k;             } p[4];A. p->k=2 B. p[0]->k=2 C. p(0)->k=2 D. p->s='a'","对于以下的变量定义,正确的表达式是____           struct node {             char s[10];             int k;             } p[4];","
 对于以下的变量定义,正确的表达式是____           struct node {             char s[10];             int k;             } p[4];

A. p->k=2 
B. p[0]->k=2 
C. p(0)->k=2 
D. p->s='a'","
 对于以下的变量定义,正确的表达式是____           struct node {             char s[10];             int k;             } p[4];",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若变量c为char类型,则能正确判断出c为小写字母的表达式是____A. (c>= 'a')||(c<= 'z')  B. 'a'<=c<= 'z'  C. (c>='a')&&(c<='z')  D. ('a'<=c)and ('z'>=c)","若变量c为char类型,则能正确判断出c为小写字母的表达式是____","
 请将下列题目转化为填空题:

若变量c为char类型,则能正确判断出c为小写字母的表达式是____A. (c>= 'a')||(c<= 'z')  B. 'a'<=c<= 'z'  C. (c>='a')&&(c<='z')  D. ('a'<=c)and ('z'>=c)","
 若变量c为char类型,则能正确判断出c为小写字母的表达式是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
C语言中以'只读'方式打开文件,应选择的参数是____A. o  B. w  C. a  D. r","C语言中以'只读'方式打开文件,应选择的参数是____","
 C语言中以'只读'方式打开文件,应选择的参数是____A. o  B. w  C. a  D. r","
 C语言中以'只读'方式打开文件,应选择的参数是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设变量定义为【int a[2][3]={1,2,3,4,5,6}, *p=a[1]; 】,则p的值是____A. 数组a的首地址B. 数组a的第1个元素的地址C. 数组a的第'1'行的首地址             D. 数组a的第'1'列的首地址","设变量定义为【int a[2][3]={1,2,3,4,5,6}, *p=a[1]; 】,则p的值是____","
 设变量定义为【int a[2][3]={1,2,3,4,5,6}, *p=a[1]; 】,则p的值是____A. 数组a的首地址B. 数组a的第1个元素的地址C. 数组a的第'1'行的首地址             D. 数组a的第'1'列的首地址","
 设变量定义为【int a[2][3]={1,2,3,4,5,6}, *p=a[1]; 】,则p的值是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
用链表表示线性表的优点是____A. 便于随机存取 B. 便于插入和删除操作C. 花费的存储空间较顺序存储少 D. 数据元素的物理顺序与逻辑顺序相同",用链表表示线性表的优点是____,"
 用链表表示线性表的优点是____A. 便于随机存取 B. 便于插入和删除操作 C. 花费的存储空间较顺序存储少 D. 数据元素的物理顺序与逻辑顺序相同","
 用链表表示线性表的优点是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
结构化程序设计主要强调的是____A. 程序的规模 B. 程序设计语言的先进性 C. 程序的效率 D. 程序清晰的结构",结构化程序设计主要强调的是____,"
 结构化程序设计主要强调的是____D. 程序清晰的结构。","
 结构化程序设计主要强调的是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若【int x=12,*p=x；】,则正确的赋值表达式是____A. p=x   B. p=*x C. *p=x D. *p=*x","若【int x=12,*p=x；】,则正确的赋值表达式是____","
 请将下列题目转化为填空题:

若【int x=12,*p=x；】,则正确的赋值表达式是____A. p=x   B. p=*x C. *p=x D. *p=*x

正确的填空题应该是：

若【int x=12,*p=&x；】,则正确的赋值表达式是____A. p=x   B. p=*x C. *p=x D. *p=*x","
 若【int x=12,*p=x；】,则正确的赋值表达式是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设有如下程序段：int i=5;for(;i<=10;)i++;执行完这段程序后,i的值是____A. 5  B. 6 C. 10 D. 11","设有如下程序段：int i=5;for(;i<=10;)i++;执行完这段程序后,i的值是____","
 请将下列程序段中的空格填上，使得程序正常运行并产生正确的结果。

int i=5;for(;i<=10;)i++;","
 设有如下程序段：int i=5;for(;i<=10;)i++;执行完这段程序后,i的值是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设有如下程序段：int i=15;while(i<15)i++;则以下描述中正确的是A. 循环体语句执行15次              B. 这是一个死循环C. 循环体语句一次也不执行              D. 循环体语句只执行一次",设有如下程序段：int i=15;while(i<15)i++;循环体执行次数为____,"
 请将下列题目转化为填空题：

设有如下程序段：int i=15;while(i<15)i++;则以下描述中正确的是______。

A. 循环体语句执行15次
B. 这是一个死循环
C. 循环体语句一次也不执行
D. 循环体语句只执行一次","
 设有如下程序段：int i=15;while(i<15)i++;循环体执行次数为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设有如下程序段：       char a[2][6]={''abcde '',''uvwxy''},*p=a[1];       printf(''n % s '',p);这段程序执行后,屏幕输出的结果是____A. abced B. uvwxy C. b D. v","设有如下程序段：       char a[2][6]={''abcde '',''uvwxy''},*p=a[1];       printf(''n % s '',p);这段程序执行后,屏幕输出的结果是____","
 请将下列程序段中的空格替换为指定的字符，并输出最终结果。

```c
char a[2][6]={''abcde '',''uvwxy''},*p=a[1];
printf(''n % s '',p);
```

选项有：
A. abced
B. uvwxy
C. b
D. v","
 设有如下程序段：       char a[2][6]={''abcde '',''uvwxy''},*p=a[1];       printf(''n % s '',p);这段程序执行后,屏幕输出的结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设有如下程序段： union{int i; char c;}a;a.i=12;a.c='A';printf(''n % d '',a.i);这段程序执行后,屏幕输出的结果是____A. 12 B. 97 C. 65 D. A","设有如下程序段： union{int i; char c;}a;a.i=12;a.c='A';printf(''n % d '',a.i);这段程序执行后,屏幕输出的结果是____","
 请将下列程序段中的空格替换为相应的数字、字母或字符，以完成程序的执行：

union{int i; char c;}a;a.i=12;a.c='A';printf(''n % d '',a.i);

选项：
A. 12
B. 97
C. 65
D. A","
 设有如下程序段： union{int i; char c;}a;a.i=12;a.c='A';printf(''n % d '',a.i);这段程序执行后,屏幕输出的结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
C程序的基本单位是：（     ）A. 子程序    B. 程序    C. 子过程    D. 函数",C程序的基本单位是____,"
 C程序的基本单位是：（D.函数）。","
 C程序的基本单位是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
字符串'xyzw'在内存中占用的字节数是：（     ）A. 6    B. 5    C. 4    D. 3",字符串'xyzw'在内存中占用的字节数是____,"
 请将下列题目转化为填空题:

字符串'xyzw'在内存中占用的字节数是：（    ）A. 6 B. 5 C. 4 D. 3","
 字符串'xyzw'在内存中占用的字节数是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若已定义f,g为double类型,则表达式：f=1,g=f+54的值是：（     ）A. 2.0    B. 2.25    C. 2.1    D. 1.5  ","若已定义f,g为double类型,则表达式：f=1,g=f+54的值是____","
 请将下列题目转化为填空题:

若已定义f,g为double类型,则表达式：f=1,g=f+54的值是：（     ）A. 2.0    B. 2.25    C. 2.1    D. 1.5  

填空题如下：

若已定义f,g为double类型,则表达式：f=1,g=f+54的值是：（    ）A. 2.0    B. 2.25    C. 2.1    D. 1.5","
 若已定义f,g为double类型,则表达式：f=1,g=f+54的值是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若有语句char  c1=`d`,c2=`g`；printf('%c,%dn',c2-`a`,c2-c1);则输出结果为：（  ）（a的ASCII码值为97）A.M,2    B.G,3    C.G,2    D.D,g","若有语句char  c1=`d`,c2=`g`；printf('%c,%dn',c2-`a`,c2-c1);则输出结果为____","
 请将下列题目转化为填空题:

若有语句char  c1=`d`,c2=`g`；printf('%c,%dn',c2-`a`,c2-c1);则输出结果为：（  ）（a的ASCII码值为97）A.M,2    B.G,3    C.G,2    D.D,g","
 若有语句char  c1=`d`,c2=`g`；printf('%c,%dn',c2-`a`,c2-c1);则输出结果为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
使用语句scanf('a=%f,b=%d',&a,&b);输入数据时,正确的数据输入是：（     ）A. a=2.2,b=3    B. a=2.2 b=3    C. 2.2 3    D. 2.2,3","使用语句scanf('a=%f,b=%d',&a,&b);输入数据时,正确的数据输入是____","
 使用语句scanf('a=%f,b=%d',&a,&b);输入数据时,正确的数据输入是：（ ）A. a=2.2,b=3    B. a=2.2 b=3    C. 2.2 3    D. 2.2,3","
 使用语句scanf('a=%f,b=%d',&a,&b);输入数据时,正确的数据输入是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
表示关系12<=x<=y的C语言表达式为：（     ）A. (12<=x)&(x<=y)  B. (12<=x)&&(x<=y)  C. (12<=x)|(x<=y)D. (12<=x)||(x<=y)",表示关系12<=x<=y的C语言表达式为____,"
 表示关系 12<=x<=y 的 C 语言表达式为：（ ）A. (12<=x)&(x<=y)  B. (12<=x)&&(x<=y)  C. (12<=x)|(x<=y)  D. (12<=x)||(x<=y)","
 表示关系12<=x<=y的C语言表达式为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设x=1,y=2,m=4,n=3,则表达式x>y?x:m<n?y:n的值为：A. 1    B. 3    C. 2    D. 4","设x=1,y=2,m=4,n=3,则表达式x>y?x:m<n?y:n的值为____","
 设x=1,y=2,m=4,n=3,则表达式x>y?x:m<n?y:n的值为：B. 3","
 设x=1,y=2,m=4,n=3,则表达式x>y?x:m<n?y:n的值为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若有说明和语句：int a=5,b=6;b*=a+1;则b的值为：（     ）A. 5    B. 6    C. 31    D. 36","若有说明和语句：int a=5,b=6;b*=a+1;则b的值为____","
 请将下列题目转化为填空题:

若有说明和语句：int a=5,b=6;b*=a+1;则b的值为：（ ）A. 5    B. 6    C. 31    D. 36","
 若有说明和语句：int a=5,b=6;b*=a+1;则b的值为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设整型变量s,t,c1,c2,c3,c4的值均为2,则执行语句（s=c1==c2）||(t=c3>c4)后,s,t的值为：A. 1,2   B. 1,1    C. 0,1    D. 1,0 ","设整型变量s,t,c1,c2,c3,c4的值均为2,则执行语句（s=c1==c2）||(t=c3>c4)后,s,t的值为____","
 设整型变量s, t, c1, c2, c3, c4的值均为2, 则执行语句（s=c1==c2）||(t=c3>c4)后, s, t的值为：D. 1,0","
 设整型变量s,t,c1,c2,c3,c4的值均为2,则执行语句（s=c1==c2）||(t=c3>c4)后,s,t的值为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
语句for（a=0,b=0；b！=100&&a<5;a++）scanf('%d',&b); scanf最多可执行次数为：A. 4    B. 6    C. 5    D. 1 ","语句for（a=0,b=0；b！=100&&a<5;a++）scanf('%d',&b); scanf最多可执行次数为____","
 请将下列题目转化为填空题:

语句for（a=0,b=0；b！=100&&a<5;a++）scanf('%d',&b); scanf最多可执行次数为：A. 4    B. 6    C. 5    D. 1 

填空题:

语句for（a=0,b=0；b！=100&&a<5;a++）scanf('%d',&b); scanf最多可执行次数为：A. 4    B. 6    C. 5    D. 1 

答案：D. 1","
 语句for（a=0,b=0；b！=100&&a<5;a++）scanf('%d',&b); scanf最多可执行次数为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
对于for（s=2；  ；s++）可以理解为：（     ）A. for（s=2；0 ；s++）      B. for（s=2；1 ；s++）  C. for（s=2；s<2 ；s++）    D. for（s=2；s>2；s++） ",对于for（s=2；  ；s++）可以理解为____,"
 请将下列题目转化为填空题:

对于for（s=2；  ；s++）可以理解为：（ ）A. for（s=2；0 ；s++）      B. for（s=2；1 ；s++）  C. for（s=2；s<2 ；s++）    D. for（s=2；s>2；s++） 

对于for（s=2；  ；s++）可以理解为：（ ）A. for（s=2；0 ；s++）      B. for（s=2；1 ；s++）  C. for（s=2；s<2 ；s++）    D. for（s=2；s>2；s++） 

答案：D. for（s=2；s>2；s++）","
 对于for（s=2；  ；s++）可以理解为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若有char h=`a`,g=`f`；int a[6]={1,2,3,4,5,6}；则数值为4的表达式为：（     ）A. a[g-h]    B. a[4]    C. a[`d`-`h`]    D. a[`h`-`c`]","若有char h=`a`,g=`f`；int a[6]={1,2,3,4,5,6}；则数值为4的表达式为____","
 请将下列题目转化为填空题:

若有char h=`a`,g=`f`；int a[6]={1,2,3,4,5,6}；则数值为4的表达式为：（ ）A. a[g-h]    B. a[4]    C. a[`d`-`h`]    D. a[`h`-`c`]","
 若有char h=`a`,g=`f`；int a[6]={1,2,3,4,5,6}；则数值为4的表达式为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设：char s[10]={'october'}；则printf（'%dn',strlen（s））；输出是：（  ）A. 7    B. 8    C. 10   D. 11","设：char s[10]={'october'}；则printf（'%dn',strlen（s））；输出是____","
 设：char s[10]={'october'};则printf（'%dn',strlen（s）);输出是：（  ）A. 7    B. 8    C. 10   D. 11

答案：D. 11","
 设：char s[10]={'october'}；则printf（'%dn',strlen（s））；输出是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若有int a[3][5]={2,2},{2,6},{2,6,2}},则数组a共有个元素：（     ）A. 8    B. 5    C. 3   D. 15","若有int a[3][5]={2,2},{2,6},{2,6,2}},则数组a共有_____个元素","
 请将下列题目转化为填空题:

若有int a[3][5]={2,2},{2,6},{2,6,2}},则数组a共有个元素：（ ）A. 8    B. 5    C. 3   D. 15","
 若有int a[3][5]={2,2},{2,6},{2,6,2}},则数组a共有_____个元素",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设int a=5,b,*p=&a,则使b不等于5的语句为: （     ）A. b=*&a     B. b=*a     C. b=*p   D. b=a","设int a=5,b,*p=&a,则使b等于5的语句为____","
 设int a=5,b,*p=&a,则使b不等于5的语句为: （ ）A. b=*&a     B. b=*a     C. b=*p   D. b=a","
 设int a=5,b,*p=&a,则使b等于5的语句为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若有int a[7]={1,2,3,4,5,6,7},*p=a则不能表示数组元素的表达式是: （     ）A. *p     B. *a     C. a[7]   D. a[p-a]","若有int a[7]={1,2,3,4,5,6,7},*p=a则不能表示数组元素的表达式是____","
 若有int a[7]={1,2,3,4,5,6,7},*p=a则不能表示数组元素的表达式是:（ ）A. *p     B. *a     C. a[7]   D. a[p-a]

答案：D","
 若有int a[7]={1,2,3,4,5,6,7},*p=a则不能表示数组元素的表达式是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若有int b[4]={0,1,2,3},*p则数值不为3的表达式是: （     ）A. p=s+2,*(p++)     B. p=s+3,*p++     C. p=s+2,*( ++p)   D. s[3]","若有int b[4]={0,1,2,3},*p则数值不为3的表达式是____","
 请将下列题目转化为填空题:

若有int b[4]={0,1,2,3},*p则数值不为3的表达式是: （     ）A. p=s+2,*(p++)     B. p=s+3,*p++     C. p=s+2,*( ++p)   D. s[3]","
 若有int b[4]={0,1,2,3},*p则数值不为3的表达式是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设有如下定义:struct jan{int a;float b;}c2,*p;若有p=&c2;则对c2中的成员a的正确引用是:（     ）A. (*p).c2.a     B. (*p).a     C. p->c2.a    D. p.c2.a ","设有如下定义:struct jan{int a;float b;}c2,*p;若有p=&c2;则对c2中的成员a的正确引用是____","
 请将下列题目转化为填空题:

设有如下定义:struct jan{int a;float b;}c2,*p;若有p=&c2;则对c2中的成员a的正确引用是:（     ）A. (*p).c2.a     B. (*p).a     C. p->c2.a    D. p.c2.a 

请将此题目转化为填空题:

设有如下定义:struct jan{int a;float b;}c2,*p;若有p=&c2;则对c2中的成员a的正确引用是:（ ）A. (*p).c2.a     B. (*p).a     C. p->c2.a    D. p.c2.a 

请填写空格:

设有如下定义:struct jan{int a;float b;}c2,*p;若有p=&c2;则对c2中的成员a的正确引用是:（ ）A. (*p).c2.a     B. (*p).a     C. p->c2.a    D. p.c2.a 

请填写空格:

设有如下定义:struct jan{int a;float b;}c2,*p;若有p=&c2;则对c2中的成员a的正确引用是:（ ）A. (*p).c2.a     B. (*p).a     C. p->c2.a    D. p.c2.a 

请填写空格:

设有如下定义:struct jan{int a;float b;}c2,*p;若有p=&c2;则对c2中的成员a的正确引用是:（ ）A. (*p).c2.a     B. (*p).a     C. p->c2.a    D. p.c2.a 

请填写空格:","
 设有如下定义:struct jan{int a;float b;}c2,*p;若有p=&c2;则对c2中的成员a的正确引用是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
C语言中用于结构化程序设计的三种基本结构是A. 顺序结构、选择结构、循环结构B. if、switch、breakC. for、while、do-whileD. if、for、continue",C语言中用于结构化程序设计的三种基本结构是____,"
 将下列题目转化为填空题:

C语言中用于结构化程序设计的三种基本结构是______结构、______结构、______结构。

C语言中用于控制流程的三个关键字是______、______、______。","
 C语言中用于结构化程序设计的三种基本结构是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
在一个C程序中A. main函数必须出现在所有函数之前B. main函数可以在任何地方出现C. main函数必须出现在所有函数之后D. main函数必须出现在固定位置","在一个C程序中,main函数的位置____","
 请将下列题目转化为填空题:

1. 在一个C程序中,A. main函数必须出现在所有函数之前
2. 在一个C程序中,B. main函数可以在任何地方出现
3. 在一个C程序中,C. main函数必须出现在所有函数之后
4. 在一个C程序中,D. main函数必须出现在固定位置","
 在一个C程序中,main函数的位置____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
应用数据库的主要目的是A. 解决数据保密问题B. 解决数据完整性问题C. 解决数据共享问题D. 解决数据量大的问题",应用数据库的主要目的是____,"
 应用数据库的主要目的是____.

A. 解决数据保密问题
B. 解决数据完整性问题
C. 解决数据共享问题
D. 解决数据量大的问题","
 应用数据库的主要目的是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
一个C语言程序是由A. 一个主程序和若干个子程序组成B. 函数组成C. 若干过程组成D. 若干子程序组成",一个C语言程序是由____组成,"
 请将下列题目转化为填空题:

一个C语言程序是由A. 一个主程序和若干个子程序组成 B. 函数组成 C. 若干过程组成 D. 若干子程序组成

答案:D. 若干子程序组成","
 一个C语言程序是由____组成",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下列个数据类型不属于构造类型的是A. 枚举型B. 共用型C. 结构型D. 数组型",属于构造类型的数据类型有____,"
 下列个数据类型不属于构造类型的是:

A. 枚举型 
B. 共用型 
C. 结构型 
D. 数组型 

答案:B. 共用型","
 属于构造类型的数据类型有____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
sizeof(float)是A. 一个双精度型表达式B. 一个整型表达式C. 一种函数调用D. 一个不合法的表达式",sizeof(float)是一个____表达式,"
 请将下列题目转化为填空题:

sizeof(float)是______。

A. 一个双精度型表达式
B. 一个整型表达式
C. 一种函数调用
D. 一个不合法的表达式","
 sizeof(float)是一个____表达式",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若x,i,j和k都是int型变量,则计算表达式x=(i=4,h=16,k=32)后,x的值为A. 4B. 16C. 32D. 52","若x,i,j和k都是int型变量,则计算表达式x=(i=4,h=16,k=32)后,x的值为____","
 请将下列题目转化为填空题:

若x, i, j 和 k 都是 int 型变量,则计算表达式 x = (i = 4, h = 16, k = 32) 后,x 的值为 A. 4 B. 16 C. 32 D. 52","
 若x,i,j和k都是int型变量,则计算表达式x=(i=4,h=16,k=32)后,x的值为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
计算机能直接执行的程序是A. 源程序B. 目标程序C. 汇编程序D. 可执行程序",计算机能直接执行的程序是____,"
 将下列题目转化为填空题:

计算机能直接执行的程序是____程序。

选项:
A. 源程序
B. 目标程序
C. 汇编程序
D. 可执行程序","
 计算机能直接执行的程序是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
C源程序中不能表示的数制是A. 二进制B. 八进制C. 十进制D. 十六进制",C源程序中不能表示的数制是____,"
 C源程序中不能表示的数制是D. 十六进制。","
 C源程序中不能表示的数制是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
检查软件产品是否符合需求定义的过程称为A. 确认测试B. 集成测试C. 验证测试D. 验收测试",检查软件产品是否符合需求定义的过程称为____,"
 将下列题目转化为填空题:

检查软件产品是否符合需求定义的过程称为____。

A. 确认测试
B. 集成测试
C. 验证测试
D. 验收测试","
 检查软件产品是否符合需求定义的过程称为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
数据流图用于抽象描述一个软件的逻辑类型,数据流图由一些特定的图符构成。下列图符名识别的图符不属于数据流图合法图符的事A. 控制流B. 加工C. 数据存储D. 愿和谭","数据流图用于抽象描述一个软件的逻辑类型,数据流图由一些特定的图符构成,不属于数据流图合法图符的是____","
 数据流图用于抽象描述一个软件的逻辑类型，数据流图由一些特定的图符构成。下列图符名识别的图符不属于数据流图合法图符的是：

A. 控制流
B. 加工
C. 数据存储
D. 愿和谭","
 数据流图用于抽象描述一个软件的逻辑类型,数据流图由一些特定的图符构成,不属于数据流图合法图符的是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下程序段int a,b,c;a=10;b=50;c=30;if(a>b)a=b,b=c,c=a;printf(''a = % d b = % d c = % dn '',a,b,c);程序输出结果是A. a=10 b=50 c=10B. a=10 b=50 c=30C. a=10 b=30,c=10D. a=50 b=30 c=50","有以下程序段int a,b,c;a=10;b=50;c=30;if(a>b)a=b,b=c,c=a;printf(''a = % d b = % d c = % dn '',a,b,c);程序输出结果是____","
 请将下列程序段中的空格填上，使程序正常运行并输出正确的结果。

int a, b, c; a = 10; b = 50; c = 30; if(a > b) a = b, b = c, c = a; printf('a = %d b = %d c = %d', a, b, c); 程序输出结果是：

A. a = 10 b = 50 c = 10
B. a = 10 b = 50 c = 30
C. a = 10 b = 30, c = 10
D. a = 50 b = 30 c = 50","
 有以下程序段int a,b,c;a=10;b=50;c=30;if(a>b)a=b,b=c,c=a;printf(''a = % d b = % d c = % dn '',a,b,c);程序输出结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
为了避免嵌套的条件分支语句if-else的二义性,C语言规定：C程序中的else总是与（     ）组成配对关系。A. 缩排位置相同的ifB. 在其之前未配对的ifC. 在其之前未配对的最近的if           D. 同一行上的if","为了避免嵌套的条件分支语句if-else的二义性,C语言规定：C程序中的else总是与_____组成配对关系","
 为了避免嵌套的条件分支语句if-else的二义性,C语言规定：C程序中的else总是与（B）组成配对关系。","
 为了避免嵌套的条件分支语句if-else的二义性,C语言规定：C程序中的else总是与_____组成配对关系",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
以下程序的输出结果是int x=10,y=10; printf('%d  %dn',x--,--y);A. 10  10      B. 9   9      C. 9   10     D. 10   9","以下程序的输出结果是_____int x=10,y=10; printf('%d  %dn',x--,--y);","
 以下程序的输出结果是int x=10,y=10; printf('%d  %dn',x--,--y); A. 10  10      B. 9   9      C. 9   10     D. 10   9","
 以下程序的输出结果是_____int x=10,y=10; printf('%d  %dn',x--,--y);",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设A为存放（短）整型的一维数组,如果A的首地址为P,那么A中第i 个元素的地址为A. P+i*2       B. P+(i-1)*2      C. P+(i-1)       D. P+i","设A为存放（短）整型的一维数组,如果A的首地址为P,那么A中第i 个元素的地址为____","
 设A为存放（短）整型的一维数组，如果A的首地址为P，那么A中第i个元素的地址为____。

选项：
A. P+i*2 
B. P+(i-1)*2 
C. P+(i-1) 
D. P+i","
 设A为存放（短）整型的一维数组,如果A的首地址为P,那么A中第i 个元素的地址为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
以下程序的输出结果是（     ）。int a=5;float x=3.14;a*=x*(‘E’ - ‘A’);printf('%fn',(float)a);A. 62.000000     B. 62.800000      C. 63.000000     D. 62","请将该题目转化成填空题,所给的题目如下：以下程序的输出结果是_____。int a=5;float x=3.14;a*=x*(‘E’ - ‘A’);printf('%fn',(float)a);","
 请将下列程序的输出结果是（    ）。

int a=5;float x=3.14;a*=x*(‘E’ - ‘A’);printf('%fn',(float)a);

A. 62.000000     B. 62.800000      C. 63.000000     D. 62","
 请将该题目转化成填空题,所给的题目如下：以下程序的输出结果是_____。int a=5;float x=3.14;a*=x*(‘E’ - ‘A’);printf('%fn',(float)a);",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设有说明double(*p1)[N];其中标识符p1是（     ）。A. N个指向double型变量的指针。B. 指向N个double型变量的函数指针。C. 一个指向由N个double型元素组成的一维数组的指针。D. 具有N个指针元素的一维指针数组,每个元素都只能指向double型量。",设有说明double(*p1)[N];其中标识符p1是____,"
 请将下列题目转化为填空题:

设有说明double(*p1)[N];其中标识符p1是（    ）。A. N个指向double型变量的指针。B. 指向N个double型变量的函数指针。C. 一个指向由N个double型元素组成的一维数组的指针。D. 具有N个指针元素的一维指针数组,每个元素都只能指向double型量。","
 设有说明double(*p1)[N];其中标识符p1是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
在C程序中有如下语句：char *func(int x,int y); 它是（     ）。A. 对函数func的定义。        B. 对函数func的调用。C．对函数func的原型说明。    D. 不合法的。","在C程序中有如下语句：char *func(int x,int y); 它是____","
 在C程序中有如下语句：char *func(int x,int y); 它是（C）。A. 对函数func的定义。        B. 对函数func的调用。C. 对函数func的原型说明。    D. 不合法的。","
 在C程序中有如下语句：char *func(int x,int y); 它是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
以下程序的输出结果是（     ）。char str[15]='hello!';printf('%dn',strlen(str));A. 15         B. 14          C. 7           D. 6","以下程序的输出结果是_____。char str[15]='hello!';printf('%dn',strlen(str));","
 以下程序的输出结果是（    ）。char str[15]='hello!';printf('%dn',strlen(str));A. 15         B. 14          C. 7           D. 6","
 以下程序的输出结果是_____。char str[15]='hello!';printf('%dn',strlen(str));",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
分析以下程序的输出结果是（     ）。main(){int  a=5,b=-1,c; c=adds(a,b); printf('%d',c); c=adds(a,b); printf('%dn',c);    }int adds(int x,int y){static int m=0,n=3; n*=++m; m=n%x+y++; return(m);            }A. 2,3         B. 2,2         C. 3,2          D. 2,4","分析以下程序的输出结果是_____。main(){int  a=5,b=-1,c; c=adds(a,b); printf('%d',c); c=adds(a,b); printf('%dn',c);    }int adds(int x,int y){static int m=0,n=3; n*=++m; m=n%x+y++; return(m);            }","
 请将下列程序的输出结果是（    ）。main(){int  a=5,b=-1,c; c=adds(a,b); printf('%d',c); c=adds(a,b); printf('%dn',c);    }int adds(int x,int y){static int m=0,n=3; n*=++m; m=n%x+y++; return(m);            }A. 2,3         B. 2,2         C. 3,2          D. 2,4","
 分析以下程序的输出结果是_____。main(){int  a=5,b=-1,c; c=adds(a,b); printf('%d',c); c=adds(a,b); printf('%dn',c);    }int adds(int x,int y){static int m=0,n=3; n*=++m; m=n%x+y++; return(m);            }",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
以下程序的输出结果是（     ）。#define  f(x)   x*xmain(){int a=6,b=2,c; c=f(a)f(b); printf('%dn',c);}A. 9         B. 6          C. 36           D. 18","以下程序的输出结果是_____。#define  f(x)   x*xmain(){int a=6,b=2,c; c=f(a)f(b); printf('%dn',c);}","
 以下程序的输出结果是（C. 36）。","
 以下程序的输出结果是_____。#define  f(x)   x*xmain(){int a=6,b=2,c; c=f(a)f(b); printf('%dn',c);}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设有如下定义: int x=10,y=3,z;则语句printf('' % dn '',z=(x%y,xy)); 的输出结果是A. 1      B. 0       C. 4        D. 3","设有如下定义: int x=10,y=3,z;则语句printf('' % dn '',z=(x%y,xy)); 的输出结果是____","
 请将下列题目转化为填空题:

设有如下定义: int x=10,y=3,z;则语句printf('' % dn '',z=(x%y,xy)); 的输出结果是____。

选项:
A. 1
B. 0
C. 4
D. 3","
 设有如下定义: int x=10,y=3,z;则语句printf('' % dn '',z=(x%y,xy)); 的输出结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
定义如下变量和数组:int i; int x[3][3]={1,2,3,4,5,6,7,8,9};则语句for(i=0;i<3;i++)  printf('' % d '',x[i][2-i]); 的输出结果是（     ）。A. 1  5  9           B. 1  4  7      C. 3  5  7          D. 3  6  9","定义如下变量和数组:int i; int x[3][3]={1,2,3,4,5,6,7,8,9};则语句for(i=0;i<3;i++)  printf('' % d '',x[i][2-i]); 的输出结果是____","
 请将下列题目转化为填空题:

定义如下变量和数组:int i; int x[3][3]={1,2,3,4,5,6,7,8,9};则语句for(i=0;i<3;i++)  printf('' % d '',x[i][2-i]); 的输出结果是（     ）。A. 1  5  9           B. 1  4  7      C. 3  5  7          D. 3  6  9","
 定义如下变量和数组:int i; int x[3][3]={1,2,3,4,5,6,7,8,9};则语句for(i=0;i<3;i++)  printf('' % d '',x[i][2-i]); 的输出结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
以下对二维数组a进行正确初始化的是（     ）A. int a[2][3]={{1,2},{3,4},{5,6}};          B. int a[ ][3]={1,2,3,4,5,6};C. int a[2][ ]={1,2,3,4,5,6};                D. int a[2][ ]={{1,2},{3,4}};",对二维数组a进行正确初始化是____,"
 以下对二维数组a进行正确初始化的是（    ）。

A. int a[2][3]={{1,2},{3,4},{5,6}};
B. int a[ ][3]={1,2,3,4,5,6};
C. int a[2][ ]={1,2,3,4,5,6};
D. int a[2][ ]={{1,2},{3,4}};","
 对二维数组a进行正确初始化是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
两次运行下面的程序,如果从键盘上分别输入6和3,则输出结果是int x;scanf('' % d '',&x);if(x++>5)   printf('' % d '',x);else   printf('' % dn '',x - -);A. 7和5      B. 6和3      C. 7和4       D. 6和4","两次运行下面的程序,如果从键盘上分别输入6和3,则输出结果是_____int x;scanf('' % d '',&x);if(x++>5)   printf('' % d '',x);else   printf('' % dn '',x - -);","
 请将下列程序的输入和输出结果转化为填空题:

输入:
```
6
3
```

输出:
```
int x;
scanf('' % d '',&x);
if(x++>5)   printf('' % d '',x);
else   printf('' % dn '',x - -);
```

请根据上述输入和输出结果，完成下面的填空题:

两次运行下面的程序,如果从键盘上分别输入6和3,则输出结果是int x;scanf('' % d '',&x);if(x++>5)   printf('' % d '',x);else   printf('' % dn '',x - -);
答案是:A. 7和5","
 两次运行下面的程序,如果从键盘上分别输入6和3,则输出结果是_____int x;scanf('' % d '',&x);if(x++>5)   printf('' % d '',x);else   printf('' % dn '',x - -);",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下列程序的输出结果是（     ）。char *p1=''abcd '', *p2=''ABCD '', str[50]=''xyz'';strcpy(str+2,strcat(p1+2,p2+1));printf('' % s '',str);A. xyabcAB        B. abcABz       C. ABabcz       D. xycdBCD","下列程序的输出结果是_____。char *p1=''abcd '', *p2=''ABCD '', str[50]=''xyz'';strcpy(str+2,strcat(p1+2,p2+1));printf('' % s '',str);","
 下列程序的输出结果是（    D. xycdBCD    ）。","
 下列程序的输出结果是_____。char *p1=''abcd '', *p2=''ABCD '', str[50]=''xyz'';strcpy(str+2,strcat(p1+2,p2+1));printf('' % s '',str);",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下列程序的输出结果是（     ）。int a[5]={2,4,6,8,10},*P,* *k;p=a;  k=&p;printf('' % d '',*(p++));printf('' % dn '',* *k);A. 4 4          B. 2 2        C. 2 4         D. 4 6","下列程序的输出结果是_____。int a[5]={2,4,6,8,10},*P,* *k;p=a;  k=&p;printf('' % d '',*(p++));printf('' % dn '',* *k);","
 下列程序的输出结果是（    C. 2 4        ）。","
 下列程序的输出结果是_____。int a[5]={2,4,6,8,10},*P,* *k;p=a;  k=&p;printf('' % d '',*(p++));printf('' % dn '',* *k);",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
 设int x=1,y=1;表达式（!x++ || y--）的值是_________A．0     B． 1       C． 2     D．-1","设int x=1,y=1;表达式（!x++ || y--）的值是____","
 设int x=1,y=1;表达式（!x++ || y--）的值是_________A．0     B． 1       C． 2     D．-1","
 设int x=1,y=1;表达式（!x++ || y--）的值是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
main( )  {  int n;     ( n=6*4,n+6),n*2;     printf('n=%dn',n);  }   此程序的输出结果是______________.A．30   B. 24     C. 60      D. 48","main( )  {  int n;     ( n=6*4,n+6),n*2;     printf('n=%dn',n);  }   此程序的输出结果是____","
 请将下列程序的输出结果填写到空白处：

main() { int n; ( n=6*4, n+6) n*2; printf('n=%d', n); } 

A. 30
B. 24
C. 60
D. 48","
 main( )  {  int n;     ( n=6*4,n+6),n*2;     printf('n=%dn',n);  }   此程序的输出结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若有如下定义,则__________是对数组元素的正确的引用。   int  a[10] , *p ;   p=a ;   p=a ;   p=a ;   p=a ;A. *&a[10]     B. a[11]      C. *(p+10)      D. *p","若有如下定义,则__________是对数组元素的正确的引用。   int  a[10] , *p ;   p=a ;   p=a ;   p=a ;   p=a ;","
 请将下列题目转化为填空题:

若有如下定义,则__________是对数组元素的正确的引用。   int  a[10], *p ;   p=a ;   p=a ;   p=a ;   p=a ; A. *&a[10]     B. a[11]      C. *(p+10)      D. *p","
 若有如下定义,则__________是对数组元素的正确的引用。   int  a[10], *p ;   p=a ;   p=a ;   p=a ;   p=a ;",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设整型变量n的值为2,执行语句'n+=n-=n*n；'后,n的值是__________A. 0     B. 4    C. -4     D. 2","设整型变量n的值为2,执行语句'n+=n-=n*n；'后,n的值是____","
 设整型变量n的值为2,执行语句'n+=n-=n*n；'后,n的值是__________A. 0     B. 4    C. -4     D. 2","
 设整型变量n的值为2,执行语句'n+=n-=n*n；'后,n的值是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
程序段____的功能是将变量 u 、s中的最大值赋给变量t 。A. if(u>s) t=u;t=s;       B. t=u;   if(t )  t=s;C. if(u>s) t=s;else t=u;    D. t=s; if(u )  t=u;",程序段if(u>s) t=u;t=s; 的功能是____,"
 请将下列题目转化为填空题:

程序段____的功能是将变量 u 、s中的最大值赋给变量t 。

A. if(u>s) t=u;t=s;
B. t=u;   if(t )  t=s;
C. if(u>s) t=s;else t=u;
D. t=s; if(u )  t=u;","
 程序段 t=s; if(u )  t=u;  的功能是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
程序段____的功能是将变量 u 、s中的最大值赋给变量t 。A. if(u>s) t=u;t=s;       B. t=u;   if(t )  t=s;C. if(u>s) t=s;else t=u;    D. t=s; if(u )  t=u;",程序段 t=u;   if(t )  t=s; 的功能是____,"
 下列选项中，哪个选项能实现将变量 u 和 s 中的最大值赋给变量 t 的功能？
A. if(u>s) t=u;t=s;
B. t=u;   if(t )  t=s;
C. if(u>s) t=s;else t=u;
D. t=s; if(u )  t=u;","
 程序段 t=s; if(u )  t=u;  的功能是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
程序段____的功能是将变量 u 、s中的最大值赋给变量t 。A. if(u>s) t=u;t=s;       B. t=u;   if(t )  t=s;C. if(u>s) t=s;else t=u;    D. t=s; if(u )  t=u;",程序段 if(u>s) t=s;else t=u;  的功能是____,"
 请将下列题目转化为填空题:

程序段____的功能是将变量 u 、s中的最大值赋给变量t 。

A. if(u>s) t=u;t=s;
B. t=u;   if(t )  t=s;
C. if(u>s) t=s;else t=u;
D. t=s; if(u )  t=u;","
 程序段 t=s; if(u )  t=u;  的功能是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
程序段____的功能是将变量 u 、s中的最大值赋给变量t 。A. if(u>s) t=u;t=s;       B. t=u;   if(t )  t=s;C. if(u>s) t=s;else t=u;    D. t=s; if(u )  t=u;",程序段 t=s; if(u )  t=u;  的功能是____,"
 请将下列题目转化为填空题:

程序段____的功能是将变量 u 、s中的最大值赋给变量t 。

A. if(u>s) t=u;t=s;
B. t=u;   if(t )  t=s;
C. if(u>s) t=s;else t=u;
D. t=s; if(u )  t=u;","
 程序段if(u>s) t=u;t=s; 的功能是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下列程序段的输出结果是           。void main(){   int k;for (k=1;k<5;k++〉{  if(k%2!=0)  printf(''#'');else   printf('*') ;  }}A. #*#*      B. *#*#    C. ##       D. 以上都不对",下列程序段的输出结果是_____void main(){   int k;for (k=1;k<5;k++〉{  if(k%2!=0)  printf(''#'');else   printf('*') ;  }},"
 下列程序段的输出结果是____。void main(){   int k;for (k=1;k<5;k++〉{  if(k%2!=0)  printf(''#'');else   printf('*') ;  }}

A. #*#*      B. *#*#    C. ##       D. 以上都不对","
 下列程序段的输出结果是_____void main(){   int k;for (k=1;k<5;k++〉{  if(k%2!=0)  printf(''#'');else   printf('*') ;  }}",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设变量定义为 int a[3]={1,4,7},*p=&a[2], 则*p的值是 ____。A. &a[2]    B. 4       C. 7       D. 1","设变量定义为 int a[3]={1,4,7},*p=&a[2], 则*p的值是____","
 设变量定义为 int a[3]={1,4,7},*p=&a[2], 则*p的值是 ____。
A. &a[2]    B. 4       C. 7       D. 1","
 设变量定义为 int a[3]={1,4,7},*p=&a[2], 则*p的值是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
能正确表示a和b同时为正或同时为负的逻辑表达式是_________。A. a>=0||b>=0）&&(a<0 ||b<0)      B. (a>=0 && b>=0)&&(a<0 && b<0)C. (a+b>0) &&(a+b<=0)            D. a*b>0",能正确表示a和b同时为正或同时为负的逻辑表达式是____,"
 能正确表示a和b同时为正或同时为负的逻辑表达式是______。
A. a>=0||b>=0）&&(a<0 ||b<0)      B. (a>=0 && b>=0)&&(a<0 && b<0) C. (a+b>0) &&(a+b<=0)            D. a*b>0","
 能正确表示a和b同时为正或同时为负的逻辑表达式是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设有数组定义：char array[]='China'; 则数组所占的空间是________。A. 4个字节      B. 5个字节      C. 6个字节        D. 7个字节",设有数组定义：char array[]='China'; 则数组所占的空间是____,"
 请将下列题目转化为填空题:

设有数组定义：char array[]='China'; 则数组所占的空间是________。A. 4个字节      B. 5个字节      C. 6个字节        D. 7个字节","
 设有数组定义：char array[]='China'; 则数组所占的空间是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若变量c为char类型,能正确判断出c为小写字母的表达式是_______。A. ’a’<=c<=’z’             B. (c>=’a’) || (c<=’z’)C. (‘a’<=c) and (‘z’>=c)      D. (c>=’a’) && (c<=’z’)","若变量c为char类型,能正确判断出c为小写字母的表达式是____","
 请将下列题目转化为填空题:

若变量c为char类型,能正确判断出c为小写字母的表达式是_______。A. ’a’<=c<=’z’             B. (c>=’a’) || (c<=’z’)C. (‘a’<=c) and (‘z’>=c)      D. (c>=’a’) && (c<=’z’)","
 若变量c为char类型,能正确判断出c为小写字母的表达式是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
C语言中以追加方式打开一个文件应选择_______________参数。A. 'r'                  B. 'w'C. 'rb'                D. 'a'",C语言中以追加方式打开一个文件应选择_____参数,"
 请将下列题目转化为填空题:

C语言中以追加方式打开一个文件应选择_______________参数。

A. 'r'                  
B. 'w'                
C. 'rb'                
D. 'a'","
 C语言中以追加方式打开一个文件应选择_____参数",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
Break语句的正确的用法是(    )。A. 无论在任何情况下,都中断程序的执行,退出到系统下一层。B. 在多重循环中,只能退出最靠近的那一层循环语句。C. 跳出多重循环。D. 只能修改控制变量。",Break语句的正确的用法是____,"
 请将下列题目转化为填空题:

Break语句的正确的用法是(    )。

A. 无论在任何情况下,都中断程序的执行,退出到系统下一层。
B. 在多重循环中,只能退出最靠近的那一层循环语句。
C. 跳出多重循环。
D. 只能修改控制变量。","
 Break语句的正确的用法是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
为表示关系x≥y≥z,应使用C语言表达式A. （x>=y）&&(y>=z)    B. (x>=y) AND (y>=z)C. (x>=y>=z)           D. (x>=z)&(y>=z)","为表示关系x≥y≥z,应使用C语言表达式____","
 为了表示关系x≥y≥z，应使用C语言表达式（x>=y）&&(y>=z)。","
 为表示关系x≥y≥z,应使用C语言表达式____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
在函数中默认存储类型说明符的变量应该是________存储类型。A. 内部静态    B. 外部      C. 自动          D. 寄存器",在函数中默认存储类型说明符的变量应该是________存储类型,"
 在函数中默认存储类型说明符的变量应该是________存储类型。

A. 内部静态
B. 外部
C. 自动
D. 寄存器","
 在函数中默认存储类型说明符的变量应该是________存储类型",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
main( )   {  int n;      ( n=6*4,n+6),n*2;       printf('n=%dn',n);    }  此程序的输出结果是______________.A. 30    B. 24     C. 60      D. 48","main( )   {  int n;      ( n=6*4,n+6),n*2;       printf('n=%dn',n);    }  此程序的输出结果是____","
 请将下列程序的输出结果补充完整：

main() { int n; ( n=6*4, n+6) * 2; printf('n=%d\n', n); }

此程序的输出结果是______________.

A. 30
B. 24
C. 60
D. 48","
 main( )   {  int n;      ( n=6*4,n+6),n*2;       printf('n=%dn',n);    }  此程序的输出结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
各种基本数据类型的存贮空间正确的长度排列为__________。A. Char<long<int<float<double     B. Double<float<long<int<charC. Char<int<long<float<double     D. Float<int<long<char<double",各种基本数据类型的存贮空间正确的长度排列为____,"
 各种基本数据类型的存贮空间正确的长度排列为__________。

A. Char<long<int<float<double     B. Double<float<long<int<char
C. Char<int<long<float<double> D. Float<int<long<char<double>","
 各种基本数据类型的存贮空间正确的长度排列为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
表达式y=(13>12?15:6>7?8:9)的值为____________ 。A. 9     B. 8    C. 15    D. 1",表达式y=(13>12?15:6>7?8:9)的值为____,"
 1. 判断13是否大于12，结果为1（真）。
2. 由于真值需要使后面的短路条件成立，所以将1传递给下一个条件。
3. 判断6是否大于7，结果为0（假）。
4. 由于假值需要使后面的短路条件成立，所以将0传递给下一个条件。
5. 判断9是否大于8，结果为1（真）。
6. 由于真值需要使后面的短路条件成立，所以将1传递给最后一个条件。
7. 判断1是否大于0，结果为1（真）。
8. 由于真值需要使后面的短路条件成立，所以将1传递给最后一个条件。
9. 判断9是否大于1，结果为1（真）。
10. 由于真值需要使后面的短路条件成立，所以将1传递给最后一个条件。
11. 判断8是否大于1，结果为1（真）。
12. 由于真值需要使后面的短路条件成立，所以将1传递给最后一个条件。
13. 判断6是否大于7，结果为0（假）。
14. 由于假值需要使后面的短路条件成立，所以将0传递给最后一个条件。
15. 判断1是否大于0，结果为1（真）。
16. 由于真值需要使后面的短路条件成立，所以将1传递给最后一个条件。
17. 判断13是否大于12，结果为1（真）。
18. 由于真值需要使后面的短路条件成立，所以将1传递给下一个条件。
19. 判断15是否大于8，结果为1（真）。
20. 由于真值需要使后面的短路条件成立，所以将1传递给下一个条件。
21. 判断12是否大于11，结果为1（真）。
22. 由于真值需要使后面的短路条件成立，所以将1传递给下一个条件。
23. 判断11是否大于10，结果为0（假）。
24. 由于假值需要使后面的短路条件成立，所以将0传递给最后一个条件。
25. 判断6是否大于5，结果为1（真）。
","
 表达式y=(13>12?15:6>7?8:9)的值为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若x=5,y=3 则y*=x+5; y的值为_______________.A. 10   B. 20    C. 15      D. 30","若x=5,y=3 则y*=x+5; y的值为____","
 题目:若x=5,y=3 则y*=x+5; y的值为_______________.

A. 10   B. 20    C. 15      D. 30","
 若x=5,y=3 则y*=x+5; y的值为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
已有定义 int x=3, y=4, z=5；则表达式'!(x+y)+z-1&&y+z2'的值是________。A. 6      B. 0      C. 2        D. 1","已有定义 int x=3, y=4, z=5；则表达式'!(x+y)+z-1&&y+z2'的值是____","
 已有定义 int x=3, y=4, z=5；则表达式'!(x+y)+z-1&&y+z2'的值是________。A. 6      B. 0      C. 2        D. 1","
 已有定义 int x=3, y=4, z=5；则表达式'!(x+y)+z-1&&y+z2'的值是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若变量c为char类型,能正确判断出c为小写字母的表达式是_______。A. ’a’<=c<=’z’             B. (c>=’a’) || (c<=’z’)C. (‘a’<=c) and (‘z’>=c)      D. (c>=’a’) && (c<=’z’)","若变量c为char类型,能正确判断出c为小写字母的表达式是____","
 请将下列题目转化为填空题:

若变量c为char类型,能正确判断出c为小写字母的表达式是_______。

A. ______ <= c <= ______
B. ______ || ______
C. ______ and ______
D. ______ && ______

正确答案为:

A. 'a' <= c <= 'z'
B. (c >= 'a') || (c <= 'z')
C. (‘a’ <= c) and (‘z’ >= c)
D. (c >= 'a') && (c <= 'z')","
 若变量c为char类型,能正确判断出c为小写字母的表达式是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
从循环体内某一层跳出,继续执行循环外的语句是：___________。A. break语句      B. return语句     C. continue语句     D. 空语句。","从循环体内某一层跳出,继续执行循环外的语句是____","
 请将下列题目转化为填空题:

从循环体内某一层跳出,继续执行循环外的语句是：___________。A. break语句      B. return语句     C. continue语句     D. 空语句。","
 从循环体内某一层跳出,继续执行循环外的语句是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
C语言用_______表示逻辑'真'值。A. true   B. t或y   C. 非零整型值   D. 整型值0",C语言用_______表示逻辑'真'值,"
 C语言用_______表示逻辑'真'值。
A. true   B. t或y   C. 非零整型值   D. 整型值0","
 C语言用_______表示逻辑'真'值",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
在使用TurboC2.0环境编辑程序时,运行某程序使用的菜单项为A. FILE    B. RUN    C. EDIT    D. OPTION","在使用TurboC2.0环境编辑程序时,运行某程序使用的菜单项为____","
 在使用TurboC2.0环境编辑程序时，运行某程序使用的菜单项为____。

选项：
A. FILE
B. RUN
C. EDIT
D. OPTION","
 在使用TurboC2.0环境编辑程序时,运行某程序使用的菜单项为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
C语言程序中,当出现条件分支语句if~else时, else与（ ）组成配对关系A. 同一复合语句内部的if                   B. 在其之前任意的ifC. 在其之前未配对的最近的if        D. 首行位置相同的if","C语言程序中,当出现条件分支语句if~else时, else与____组成配对关系","
 C语言程序中,当出现条件分支语句if~else时, else与（ ）组成配对关系。

A. 同一复合语句内部的if
B. 在其之前任意的if
C. 在其之前未配对的最近的if
D. 首行位置相同的if","
 C语言程序中,当出现条件分支语句if~else时, else与____组成配对关系",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
在C语言中,存储一个整型、字符型、双精度实型变量所需的字节数是A. 2、1、8                         B. 4、1、4C. 4、1、4                         D. 2、2、8","在C语言中,存储一个整型、字符型、双精度实型变量所需的字节数是____","
 请将下列题目转化为填空题:

在C语言中,存储一个整型、字符型、双精度实型变量所需的字节数是____、____、____。

选项:
A. 2、1、8
B. 4、1、4
C. 4、1、4
D. 2、2、8","
 在C语言中,存储一个整型、字符型、双精度实型变量所需的字节数是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
char型常量在内存中存放的是（  ）A. ASCII码   B. BCD码   C. 内码值   D. 十进制代码值",char型常量在内存中存放的是____,"
 请将下列题目转化为填空题:

char型常量在内存中存放的是（  ）A. ASCII码   B. BCD码   C. 内码值   D. 十进制代码值","
 char型常量在内存中存放的是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设整型变量i的值为3,则计算表达式i---i后表达式的值是（）A. 0   B. 1    C. 2   D. 表达式出错","设整型变量i的值为3,则计算表达式i---i后表达式的值是____","
 设整型变量i的值为3,则计算表达式i--i后表达式的值是（）。A. 0   B. 1    C. 2   D. 表达式出错","
 设整型变量i的值为3,则计算表达式i---i后表达式的值是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设整型变量a,b,c均为2,表达式a+++b+++c++的结果是（   ）A. 6    B. 9    C. 8   D. 表达式出错","设整型变量a,b,c均为2,表达式a+++b+++c++的结果是____","
 设整型变量a,b,c均为2,表达式a+++b+++c++的结果是（  ）A. 6    B. 9    C. 8   D. 表达式出错","
 设整型变量a,b,c均为2,表达式a+++b+++c++的结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若已定义x和y为double类型,则表达式x=1,y=x+32的值是（  ）A. 1    B. 2    C. 2.0    D. 2.5","若已定义x和y为double类型,则表达式x=1,y=x+32的值是____","
 请将下列题目转化为填空题:

若已定义x和y为double类型,则表达式x=1,y=x+32的值是（  ）A. 1    B. 2    C. 2.0    D. 2.5

填空题如下：

若已定义x和y为double类型,则表达式x=1,y=x+32的值是（  ）A. 1    B. 2    C. 2.0    D. 2.5","
 若已定义x和y为double类型,则表达式x=1,y=x+32的值是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设a=1,b=2,c=3,d=4,则表达式：a<b?a:c<d?a:d的结果是A. 4   B. 3   C. 2   D. 1","设a=1,b=2,c=3,d=4,则表达式：a<b?a:c<d?a:d的结果是____","
 设a=1,b=2,c=3,d=4,则表达式：a<b?a:c<d?a:d的结果是A. 4   B. 3   C. 2   D. 1","
 设a=1,b=2,c=3,d=4,则表达式：a<b?a:c<d?a:d的结果是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若有以下定义：char a、 int b 、 float c 、 double d,则表达式a*b+d-c值的类型为（）A. float  B. int   C. char   D. double","若有以下定义：char a、 int b 、 float c 、 double d,则表达式a*b+d-c值的类型为____","
 请将下列题目转化为填空题:

若有以下定义：char a、 int b 、 float c 、 double d,则表达式a*b+d-c值的类型为（）。A. float  B. int   C. char   D. double","
 若有以下定义：char a、 int b 、 float c 、 double d,则表达式a*b+d-c值的类型为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
循环语句 for (x=0,y=0; (y!=123)|| (x<4);x++);的循环执行（  ）A. 无限次   B. 不确定次   C. 4次   D. 3次","循环语句 for (x=0,y=0; (y!=123)|| (x<4);x++);的循环执行____","
 请将下列题目转化为填空题:

循环语句 for (x=0,y=0; (y!=123)|| (x<4);x++); 的循环执行（  ）A. 无限次   B. 不确定次   C. 4次   D. 3次","
 循环语句 for (x=0,y=0; (y!=123)|| (x<4);x++);的循环执行____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设有定义：char s[12]={'string'};则printf ('%dn',strlen(s));的输出是（  ）A. 6    B. 7   C. 11    D. 12","设有定义：char s[12]={'string'};则printf ('%dn',strlen(s));的输出是____","
 请将下列题目转化为填空题:

设有定义：char s[12]={'string'};则printf ('%dn',strlen(s));的输出是（  ）A. 6    B. 7   C. 11    D. 12

【答案】D. 12","
 设有定义：char s[12]={'string'};则printf ('%dn',strlen(s));的输出是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
函数调用strcat(strcpy(str1,str2),str3)的功能是（）A. 将字符串str2复制到字符串str1中后再将字符串str3连接到字符串str1之后B. 将字符串str1复制到字符串str2中后再连接到字符串str3之后C. 将字符串str1复制到字符串str2中后再复制到字符串str3之后D. 将字符串str2连接到字符串str1中后再将字符串str1复制到字符串str3中","函数调用strcat(strcpy(str1,str2),str3)的功能是____","
 函数调用strcat(strcpy(str1,str2),str3)的功能是（）。
A. 将字符串str2复制到字符串str1中后再将字符串str3连接到字符串str1之后
B. 将字符串str1复制到字符串str2中后再连接到字符串str3之后
C. 将字符串str1复制到字符串str2中后再复制到字符串str3之后
D. 将字符串str2连接到字符串str1中后再将字符串str1复制到字符串str3中","
 函数调用strcat(strcpy(str1,str2),str3)的功能是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设有单精度变量f,其值为13.8。执行语句'n=((int)f)%3;'后,n的值是（）A. 4     B. 1    C. 4.333333    D. 4.6","设有单精度变量f,其值为13.8。执行语句'n=((int)f)%3;'后,n的值是____","
 请将下列题目转化为填空题:

设有单精度变量f,其值为13.8。执行语句'n=((int)f)%3;'后,n的值是（）。

A. 4     B. 1    C. 4.333333    D. 4.6","
 设有单精度变量f,其值为13.8。执行语句'n=((int)f)%3;'后,n的值是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
执行语句'f=(3.0,4.0,5.0),(2.0,1.0,0.0);'后,单精度变量f的值是（   ）A. 3.0    B. 5.0     C. 2.0    D. 0.0","执行语句'f=(3.0,4.0,5.0),(2.0,1.0,0.0);'后,单精度变量f的值是____","
 执行语句'f=(3.0,4.0,5.0),(2.0,1.0,0.0);'后,单精度变量f的值是（ ）A. 3.0    B. 5.0     C. 2.0    D. 0.0","
 执行语句'f=(3.0,4.0,5.0),(2.0,1.0,0.0);'后,单精度变量f的值是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
表达式'1?(0?3:2): (10?1:0)'的值为（   ）A. 3    B. 2    C. 1   D. 0",表达式'1?(0?3:2): (10?1:0)'的值为____,"
 请将下列题目转化为填空题:

表达式'1?(0?3:2): (10?1:0)'的值为（ ）A. 3    B. 2    C. 1   D. 0

答案：D. 0","
 表达式'1?(0?3:2): (10?1:0)'的值为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
sizeof(double)的结果值是（    ）A. 8    B. 4    C. 2   D. 出错",sizeof(double)的结果值是____,"
 请将下列题目转化为填空题:

sizeof(double)的结果值是（    ）A. 8    B. 4    C. 2   D. 出错","
 sizeof(double)的结果值是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
在PC机中,‘n’在内存占用的字节数是（  ）A. 1   B. 2   C. 3   D. 4","在PC机中,‘n’在内存占用的字节数是____","
 请将下列题目转化为填空题:

在PC机中,‘n’在内存占用的字节数是（  ）A. 1   B. 2   C. 3   D. 4","
 在PC机中,‘n’在内存占用的字节数是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
字符串'ABC'在内存占用的字节数是（   ）A. 3   B. 4   C. 6   D. 8",字符串'ABC'在内存占用的字节数是____,"
 字符串'ABC'在内存占用的字节数是（ ）A. 3   B. 4   C. 6   D. 8","
 字符串'ABC'在内存占用的字节数是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
执行语句'x=(a=3,b=a--)'后,x,a,b的值依次是（   ）A. 3,3,2   B. 3,2,2   C. 3,2,3   D. 2,3,2","执行语句'x=(a=3,b=a--)'后,x,a,b的值依次是____","
 执行语句'x=(a=3,b=a--)'后,x,a,b的值依次是（   ）A. 3,3,2   B. 3,2,2   C. 3,2,3   D. 2,3,2","
 执行语句'x=(a=3,b=a--)'后,x,a,b的值依次是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设有语句int a=3；,则执行了语句a+=a-=a*a后,变量a的值是（  ）A. 3    B. 0   C. 9   D. -12","设有语句int a=3；,则执行了语句a+=a-=a*a后,变量a的值是____","
 请将下列题目转化为填空题:

设有语句int a=3；,则执行了语句a+=a-=a*a后,变量a的值是（  ）A. 3    B. 0   C. 9   D. -12

【答案】D","
 设有语句int a=3；,则执行了语句a+=a-=a*a后,变量a的值是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设int k=32767;执行k=k+1;后k值为（   ）A. 32768    B. -32768    C. 0   D. -1",设int k=32767;执行k=k+1;后k值为____,"
 设int k=32767;执行k=k+1;后k值为（   ）A. 32768    B. -32768    C. 0   D. -1","
 设int k=32767;执行k=k+1;后k值为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
执行x=(6*7%8+9)5;后,x的值为（     ）A. 1     B. 2    C. 3    D. 4","执行x=(6*7%8+9)5;后,x的值为____","
 请将下列题目转化为填空题:

执行x=(6*7%8+9)5;后,x的值为（ ）A. 1     B. 2    C. 3    D. 4","
 执行x=(6*7%8+9)5;后,x的值为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设a=-3;执行(a>0)?a:-a;后,a的值为（    ）A. 3    B. 1   C. 0     D. -3","设a=-3;执行(a>0)?a:-a;后,a的值为____","
 设a=-3;执行(a>0)?a:-a;后,a的值为（    ）A. 3    B. 1   C. 0    D. -3","
 设a=-3;执行(a>0)?a:-a;后,a的值为____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若有说明语句：char c=’72’;则变量c (     )A. 包含1个字符   B. 包含2个字符 C. 包含3个字符  D. 说明不合法,c值不确定",若有说明语句：char c=’72’;则变量c包含____个字符,"
 若有说明语句：char c=’72’;则变量c (     )
A. 包含1个字符  
B. 包含2个字符  
C. 包含3个字符  
D. 说明不合法,c值不确定","
 若有说明语句：char c=’72’;则变量c包含____个字符",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设变量a 是整型,f是实型,i是双精度型,则表达式10+’a’+i*f值的数据类型是（  ）A. int    B. folat   C. double   D. 不确定","设变量a 是整型,f是实型,i是双精度型,则表达式10+’a’+i*f值的数据类型是____","
 设变量a 是整型,f是实型,i是双精度型,则表达式10+’a’+i*f值的数据类型是（  ）A. int    B. folat   C. double   D. 不确定","
 设变量a 是整型,f是实型,i是双精度型,则表达式10+’a’+i*f值的数据类型是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若有定义int a[10],*p=a;,则p+5表示（     ）A. 元素a[5]的地址     B. 元素a[5]的值 C. 元素a[6]的地址  D. 元素a[6]的值","若有定义int a[10],*p=a;,则p+5表示____","
 若有定义int a[10],*p=a;,则p+5表示（    ）A. 元素a[5]的地址     B. 元素a[5]的值 C. 元素a[6]的地址  D. 元素a[6]的值","
 若有定义int a[10],*p=a;,则p+5表示____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
凡是函数中未指定存储类别的局部变量,其隐含的存储类别是（  ）A．auto     B．static    C．extern    D．register","凡是函数中未指定存储类别的局部变量,其隐含的存储类别是____","
 1. 分析题目，要求找出未指定存储类别的局部变量的隐含存储类别。
2. 分析选项A：auto，表示自动变量，其隐含的存储类别是栈（stack）或全局（global）。
3. 分析选项B：static，表示静态变量，其隐含的存储类别是栈（stack）。
4. 分析选项C：extern，表示外部变量，其隐含的存储类别是栈（stack）或全局（global）。
5. 分析选项D：register，表示寄存器变量，其隐含的存储类别是寄存器（register）。
6. 根据分析，只有选项A的隐含存储类别符合题目要求。

最终答案：A","
 凡是函数中未指定存储类别的局部变量,其隐含的存储类别是____",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
在C语言的一个源程序中定义的外部变量其作用域为______。A. 本文件全部范围B. 本程序全部范围C. 本函数的全部范围D. 从定义该变量的位置开始至本文件结束",在C语言的一个源程序中定义的外部变量其作用域为______ ,"
 请将下列题目转化为填空题:

在C语言的一个源程序中定义的外部变量其作用域为______。

A. 本文件全部范围
B. 本程序全部范围
C. 本函数的全部范围
D. 从定义该变量的位置开始至本文件结束","
 在C语言的一个源程序中定义的外部变量其作用域为______ ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
判断字符变量c是否属于英文字母的逻辑表达式为______。A. ('a'<=c<='z') && ('A'<=c<='Z')B. ('a'<=c<='z') || ('A'<=c<='Z')C. (('a'<=c)&&(c<='z'))&&(('A'<=c)&&(c<='Z'))D. (('a'<=c)&&(c<='z')) || (('A'<=c)&&(c<='Z'))",判断字符变量c是否属于英文字母的逻辑表达式为______ ,"
 判断字符变量c是否属于英文字母的逻辑表达式为______。

A. ('a'<=c<='z') && ('A'<=c<='Z')
B. ('a'<=c<='z') || ('A'<=c<='Z')
C. (('a'<=c)&&(c<='z'))&&(('A'<=c)&&(c<='Z'))
D. (('a'<=c)&&(c<='z')) || (('A'<=c)&&(c<='Z'))","
 判断字符变量c是否属于英文字母的逻辑表达式为______ ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设已定义数组int a[6][7][8]; 则a[4][5][6]为此数组的第（ ）个元素。（注:从1开始计数。）A. 269B. 270C. 271D. 107", 设已定义数组int a[6][7][8]; 则a[4][5][6]为此数组的第（ ）个元素。（注:从1开始计数。）,"
 已定义数组int a[6][7][8]; 则a[4][5][6]为此数组的第（ ）个元素。（注:从1开始计数。）A. 269B. 270C. 271D. 107","
  设已定义数组int a[6][7][8]; 则a[4][5][6]为此数组的第（ ）个元素。（注:从1开始计数。）",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
C语言中while 和do-while 循环的主要区别是______。A. do-while 的循环体不能是复合语句B. while 的循环控制条件比do-while的循环控制条件严格C. do-while 允许从外部转到循环体内D. do-while 的循环体至少无条件执行一次", C语言中while 和do-while 循环的主要区别是______,"
 C语言中while 和do-while 循环的主要区别是______。

A. do-while 的循环体不能是复合语句
B. while 的循环控制条件比do-while的循环控制条件严格
C. do-while 允许从外部转到循环体内
D. do-while 的循环体至少无条件执行一次","
  C语言中while 和do-while 循环的主要区别是______",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
已知：int a[][3]={1,2,3,4,5,6,7};则数组a的第一维的大小是______。A. 2 B. 无确定值 C. 4 D. 3","int a[][3]={1,2,3,4,5,6,7};则数组a的第一维的大小是______ ","
 请将下列题目转化为填空题:

已知：int a[][3]={1,2,3,4,5,6,7};则数组a的第一维的大小是______。A. 2 B. 无确定值 C. 4 D. 3

答案：D. 3","
 int a[][3]={1,2,3,4,5,6,7};则数组a的第一维的大小是______ ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
定义 struct {int x;int y;} s[2]={{2,3},{4,5}}, *p=s; 则表达式 p->x 的值为______。 A. 4 B. 2 C. 3 D. 1","定义 struct {int x;int y;} s[2]={{2,3},{4,5}}, *p=s; 则表达式 p->x 的值为______ ","
 请将下列题目转化为填空题:

定义结构体数组 s,其中 s[0] = {2,3},s[1] = {4,5},*p = s; 则表达式 p->x 的值为______。 A. 4 B. 2 C. 3 D. 1","
 定义 struct {int x;int y;} s[2]={{2,3},{4,5}}, *p=s; 则表达式 p->x 的值为______ ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
判断整型变量a是否属于0到9之间或者10到99之间的逻辑表达式为______。 A. (0<=a<=9) && (10<=a<=99) B. ((0<=a. &&(a<=9))|| ((10<=a. &&(a<=99)) C. (0<=a<=9) || (10<=a<=99) D. ((0<=a. &&(a<=9))&&((10<=a. &&(a<=99))",判断整型变量a是否属于0到9之间或者10到99之间的逻辑表达式为______ ,"
 将题目转化为填空题后的答案为：D. ((0<=a. &&(a<=9))&&((10<=a. &&(a<=99)))。","
 判断整型变量a是否属于0到9之间或者10到99之间的逻辑表达式为______ ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若int a=5；则执行以下语句后打印的结果为______。 do { printf(“%d
”,a--. ；} while (!a)； A. 5 B. 不打印任何内容 C. 4 D. 陷入死循环","若int a=5；则执行以下语句后打印的结果为______。do { printf(“%d
”,a--. ；} while (!a)； ","
 请将下列题目转化为填空题:

若int a=5；则执行以下语句后打印的结果为______。 do { printf(""%d"",a--. );} while (!a)； A. 5 B. 不打印任何内容 C. 4 D. 陷入死循环","
 若int a=5；则执行以下语句后打印的结果为______。do { printf(“%d
”,a--. ；} while (!a)； ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下面程序段的运行结果是______（其中£表示空格）char a[7]= abcdef, b[4]=ABC；strcpy(a，b) printf(%c,a[4])；A. £ B. 0C. e D. f","下面程序段的运行结果是______（其中£表示空格）。char a[7]=“abcdef”, b[4]=“ABC”；strcpy(a，b. ； printf(“%c”,a[4])；","
 下面程序段的运行结果是______（其中£表示空格）char a[7]= abcdef, b[4]=ABC；strcpy(a，b) printf(%c,a[4])；A. £ B. 0C. e D. f","
 下面程序段的运行结果是______（其中£表示空格）。char a[7]= abcdef, b[4]=ABC；strcpy(a，b) printf(%c,a[4])；",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
fread(buf, 64, 2, fp)的功能是______。 A. 从fp文件流中读出整数64，并存放在buf中 B. 从fp文件流中读出整数64和2，并存放在buf中 C. 从fp文件流中读出64个字节的字符，并存放在buf中 D. 从fp文件流中读出2个64个字节的字符，并存放在buf中","fread(buf, 64, 2, fp)的功能是______。 ","
 请将下列题目转化为填空题:

fread(buf, 64, 2, fp)的功能是______。

A. 从fp文件流中读出整数64，并存放在buf中
B. 从fp文件流中读出整数64和2，并存放在buf中
C. 从fp文件流中读出64个字节的字符，并存放在buf中
D. 从fp文件流中读出2个64个字节的字符，并存放在buf中","
 fread(buf, 64, 2, fp)的功能是______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下列程序执行后的输出结果是______。 void main() { int x=’f’; printf(“%c
”, ’A’+(x-’a’+1)); } A. G B. H C. I D. J","下列程序执行后的输出结果是______。 void main() { int x=’f’; printf(“%c
”, ’A’+(x-’a’+1)); } ","
 请将下列程序执行后的输出结果是______。

void main() { int x='f'; printf(""%c"", 'A'+(x-'a'+1)); }

A. G
B. H
C. I
D. J","
 下列程序执行后的输出结果是______。 void main() { int x=’f’; printf(“%c
”, ’A’+(x-’a’+1)); } ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
已有如下定义和输入语句，若要求a1,a2,c1,c2的值分别为10，20，A和B，正确的数据输入方式是______。其中：□代表空格键，↙代表回车键。 int a1,a2; char c1,c2; scanf(“%d%c%d%c”,&a1,&c1,&a2,&c2); A. 10A□20□B↙ B. 10□A□20□B↙ C. 10A20B↙ D. 10A20□B↙","已有如下定义和输入语句，若要求a1,a2,c1,c2的值分别为10，20，A和B，正确的数据输入方式是______。其中：□代表空格键，↙代表回车键。 int a1,a2; char c1,c2; scanf(“%d%c%d%c”,&a1,&c1,&a2,&c2); ","0□A□20□B查看更多 首先，我们需要将输入语句中的""%d%c%d%c""转化为""%d %c %d %c""的形式。观察选项，我们可以看到选项B和C满足这个要求。接下来，我们需要确定空格键和回车键的位置。选项B和C中，空格键和回车键的位置是正确的。因此，正确的数据输入方式是B。","
 已有如下定义和输入语句，若要求a1,a2,c1,c2的值分别为10，20，A和B，正确的数据输入方式是______。其中：□代表空格键，↙代表回车键。 int a1,a2; char c1,c2; scanf(“%d%c%d%c”,&a1,&c1,&a2,&c2); ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设有：int a=1,b=2,c=3,d=4,m=2,n=2; 执行if((m=a>b)&&(n=c>d)) 后n的值是______。 A. 1 B. 2 C. 3 D. 4","设有：int a=1,b=2,c=3,d=4,m=2,n=2; 执行if((m=a>b)&&(n=c>d)) 后n的值是______ ","
 请将下列题目转化为填空题:

设有：int a=1,b=2,c=3,d=4,m=2,n=2; 执行if((m=a>b)&&(n=c>d)) 后n的值是______。 A. 1 B. 2 C. 3 D. 4","
 设有：int a=1,b=2,c=3,d=4,m=2,n=2; 执行if((m=a>b)&&(n=c>d)) 后n的值是______ ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设已定义数组int array[3][4];则此数组的第十个元素是______。（注:从1开始计数。） A. array[1][3] B. array[2][2] C. array[2][3] D. array[2][1]",设已定义数组int array[3][4];则此数组的第十个元素是______。（注:从1开始计数。） ,"
 设已定义数组int array[3][4];则此数组的第十个元素是______。（注:从1开始计数。） A. array[1][3] B. array[2][2] C. array[2][3] D. array[2][1]","
 设已定义数组int array[3][4];则此数组的第十个元素是______。（注:从1开始计数。） ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
C语言中函数返回值的类型是由______决定的。 A. return语句中的表达式类型； B. 调用该函数的主调函数类型； C. 调用函数时临时； D. 定义函数时所指定的函数类型；",C语言中函数返回值的类型是由______决定的。 ,"
 C语言中函数返回值的类型是由______决定的。

A. return语句中的表达式类型；
B. 调用该函数的主调函数类型；
C. 调用函数时临时；
D. 定义函数时所指定的函数类型；","
 C语言中函数返回值的类型是由______决定的。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
int *(*p[3])(int)的含义是______。 A. 指针数组； B. 函数指针数组，函数返回int型变量； C. 函数指针数组，函数指向整型的指针； D. 指向函数的指针，函数指向整型的变量；",int *(*p[3])(int)的含义是______。 ,"
 1. 分析题目，发现是关于指针和函数的组合。
2. 分析选项，理解每个选项的含义：
   A. 指针数组，不符合题意；
   B. 函数指针数组，函数返回int型变量，符合题意；
   C. 函数指针数组，函数指向整型的指针，不符合题意；
   D. 指向函数的指针，函数指向整型的变量，不符合题意。
3. 根据分析，选项B符合题目要求。

最终答案：B","
 int *(*p[3])(int)的含义是______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若int a=5；则执行以下语句后打印的结果为______。 do { printf(“%2d
”,a--)；} while (!a)； A. 5 B. 不打印任何内容 C. 4 D. 陷入死循环",若int a=5；则执行以下语句后打印的结果为______。 ,"
 请将下列题目转化为填空题:

若int a=5；则执行以下语句后打印的结果为______。 do { printf(""%2d"",a--);} while (!a)； A. 5 B. 不打印任何内容 C. 4 D. 陷入死循环","
 若int a=5；则执行以下语句后打印的结果为______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
凡在函数中未指定存储类别的变量，其隐含的存储类别为_________。 A. 自动(auto) B. 静态(static) C. 外部(extern) D. 寄存器(register)",凡在函数中未指定存储类别的变量，其隐含的存储类别为_________。 ,"
 请将下列题目转化为填空题:

凡在函数中未指定存储类别的变量，其隐含的存储类别为_________。 A. 自动(auto) B. 静态(static) C. 外部(extern) D. 寄存器(register)","
 凡在函数中未指定存储类别的变量，其隐含的存储类别为_________。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若有以下定义：int a[3],*p=a ；则&a[2]- p的值是______。 A. 2 B. 4 C. 6 D. 8","若有以下定义：int a[3],*p=a ；则&a[2]- p的值是______。 ","
 请将下列题目转化为填空题:

若有以下定义：int a[3],*p=a ；则&a[2]- p的值是______。 A. 2 B. 4 C. 6 D. 8","
 若有以下定义：int a[3],*p=a ；则&a[2]- p的值是______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
执行语句 for(i=0;i++<4;i++);后，变量i的值为______。 A. 3 B. 4 C. 5 D. 6", 执行语句 for(i=0;i++<4;i++);后，变量i的值为______。,"
 执行语句 for(i=0;i++<4;i++); 后，变量i的值为______。 A. 3 B. 4 C. 5 D. 6","
  执行语句 for(i=0;i++<4;i++);后，变量i的值为______。",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下列程序段的输出结果是______。char *p1='abcd', *p2='ABCD', str[50]='opq';strcpy(str+2,strcat(p1+2,p2+1)); printf('%s',str); A. opabcAB B. abcABq C. ABabcq D. opcdBCD","下列程序段的输出结果是______。 char *p1='abcd', *p2='ABCD', str[50]='opq'; strcpy(str+2,strcat(p1+2,p2+1)); printf('%s',str); ","
 下列程序段的输出结果是______。

char *p1='abcd', *p2='ABCD', str[50]='opq';
strcpy(str+2,strcat(p1+2,p2+1));
printf('%s',str);","
 下列程序段的输出结果是______。 char *p1='abcd', *p2='ABCD', str[50]='opq'; strcpy(str+2,strcat(p1+2,p2+1)); printf('%s',str); ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
int Max(int a,int b); 的作用是（ ）。 A. 定义了一个函数Max()， B. 对函数Max()的一次调用， C. 声明了一个函数Max()， D. 以上3种情况都不是。","int Max(int a,int b); 的作用是（ ）。 ","
 请将下列题目转化为填空题:

int Max(int a,int b); 的作用是（ ）. A. 定义了一个函数Max() B. 对函数Max()的一次调用 C. 声明了一个函数Max() D. 以上3种情况都不是。

请填写正确的选项。","
 int Max(int a,int b); 的作用是（ ）。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下程序 main( ) {      int x=102，y=012;      printf('%2d,%2d
',x,y); }  执行后输出结果是（ ） A) 10,01    B) 02,12    C) 102,10    D) 02,10","有以下程序 main( ) {      int x=102，y=012;      printf('%2d,%2d
',x,y); }  执行后输出结果是（ ） ","
 请将下列程序 main( ) {      int x=102，y=012;      printf('%2d,%2d
',x,y); }  执行后输出结果是（ ）

A) 10,01    B) 02,12    C) 102,10    D) 02,10","
 有以下程序 main( ) {      int x=102，y=012;      printf('%2d,%2d
',x,y); }  执行后输出结果是（ ） ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下程序 main( ) { int i,s=0;         for(i=1;i<10;i+=2)  s+=i+1;         printf('%d
',s); } 程序执行后的输出结果是（ ） A) 自然数1～9的累加和    B) 自然数1～10的累加和 C) 自然数1～9中的奇数之和   D) 自然数1～10中的偶数之和"," 有以下程序 main( ) { int i,s=0;         for(i=1;i<10;i+=2)  s+=i+1;         printf('%d
',s); } 程序执行后的输出结果是（ ） ","
 请将下列程序 main( ) { int i,s=0;         for(i=1;i<10;i+=2)  s+=i+1;         printf('%d
',s); } 程序执行后的输出结果是（ ） A) 自然数1～9的累加和    B) 自然数1～10的累加和  C) 自然数1～9中的奇数之和  D) 自然数1～10中的偶数之和","
  有以下程序 main( ) { int i,s=0;         for(i=1;i<10;i+=2)  s+=i+1;         printf('%d
',s); } 程序执行后的输出结果是（ ） ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下程序 main( ) { int i,n=0;   for(i=2;i<5;i++)   { do         { if(i%3)  continue;            n++;          } while(!i); n++;      }        printf('n=%d
',n); } 程序执行后的输出结果是（ ） A) n=5    B) n=2    C) n=3    D)  n=4","：有以下程序 main( ) { int i,n=0;   for(i=2;i<5;i++)   { do         { if(i%3)  continue;            n++;          } while(!i); n++;      }        printf('n=%d
',n); } 程序执行后的输出结果是（ ） ","
 请将下列程序 main( ) { int i,n=0;   for(i=2;i<5;i++)   { do         { if(i%3)  continue;            n++;          } while(!i); n++;      }        printf('n=%d',n); } 程序执行后的输出结果是（ ） A) n=5    B) n=2    C) n=3    D)  n=4","
 有以下程序 main( ) { int i,n=0;   for(i=2;i<5;i++)   { do         { if(i%3)  continue;            n++;          } while(!i); n++;      }        printf('n=%d
',n); } 程序执行后的输出结果是（ ） ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下程序 char fun(char x , char y) { if(x<y)   return x;        return y; } main( ) { int a='9',b='8',c='7';         printf('%c
',fun(fun(a,b) ,fun(b,c) )); } 程序的执行结果是（ ） A) 函数调用出错  B）8     C）9     D）7","有以下程序 char fun(char x , char y) { if(x<y)   return x;        return y; } main( ) { int a='9',b='8',c='7';         printf('%c
',fun(fun(a,b) ,fun(b,c) )); } 程序的执行结果是（ ） ","
 请将下列程序 char fun(char x, char y) { if(x<y)   return x;        return y; } main( ) { int a='9',b='8',c='7';         printf('%c',fun(fun(a,b),fun(b,c) )); } 程序的执行结果是（ ） A) 函数调用出错  B）8     C）9     D）7

请将上述程序中的占位符替换为具体的数字或字符，以完成填空题。","
 有以下程序 char fun(char x, char y) { if(x<y)   return x;        return y; } main( ) { int a='9',b='8',c='7';         printf('%c
',fun(fun(a,b),fun(b,c) )); } 程序的执行结果是（ ） ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
有以下程序段 int a[10]={1,2,3,4,5,6,7,8,9,10},*p=&a[3],b; b=p[5]; b中的值是（ ） A) 5   B) 6   C) 8   D) 9","有以下程序段 int a[10]={1,2,3,4,5,6,7,8,9,10},*p=&a[3],b; b=p[5]; b中的值是（ ） ","
 请将下列程序段转化为填空题:

有以下程序段 int a[10]={1,2,3,4,5,6,7,8,9,10},*p=&a[3],b; b=p[5]; b中的值是（ ） A) 5   B) 6   C) 8   D) 9","
 有以下程序段 int a[10]={1,2,3,4,5,6,7,8,9,10},*p=&a[3],b; b=p[5]; b中的值是（ ） ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若已定义了如下的共用体类型变量x，则x所占用的字节数（在16位PC机条件下）为（     ） union  data{ int i; char ch; double  f; }x; A、7      B、11      C、8     D、10 ",若已定义了如下的共用体类型变量x，则x所占用的字节数（在16位PC机条件下）为（     ） union  data{ int i; char ch; double  f; }x; ,"
 下列题目转化为填空题如下：

若已定义了如下的共用体类型变量x，则x所占用的字节数（在16位PC机条件下）为（    ）。

A、7       
B、11       
C、8       
D、10","
 若已定义了如下的共用体类型变量x，则x所占用的字节数（在16位PC机条件下）为（     ） union  data{ int i; char ch; double  f; }x; ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
说明语句int (*p)[10]定义了p是（   ） A、指针数组                      B、指向数组的指针 C、返回值为整型的函数指针        D、指向整型数的指针", 说明语句int (*p)[10]定义了p是（   ）,"
 1. 分析题目中的关键信息：int (*p)[10]表示一个指针，该指针指向一个数组，数组有10个元素。
2. 分析选项：
   A、指针数组：该选项表示一个数组，与题目中的信息不符。
   B、指向数组的指针：符合题目中的信息，该指针指向一个数组。
   C、返回值为整型的函数指针：题目中没有提到函数，与题目无关。
   D、指向整型数的指针：该选项表示一个指针，指向一个整型数，与题目中的信息不符。

综上，选项B符合题目要求。

答案：B、指向数组的指针","
  说明语句int (*p)[10]定义了p是（   ）",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
C语言的编译系统对宏命令是（   ） A、在程序运行时进行代换处理的 B、在程序连接时进行处理的 C、与程序中其他C语句同时进行编译的 D、在对源程序其他成分正式编译之前进行处理的", C语言的编译系统对宏命令是（   ）,"
 C语言的编译系统对宏命令是（D）在以及对源程序其他成分正式编译之前进行处理的。","
  C语言的编译系统对宏命令是（   ）",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
运行下面的程序，其输出是（   ） main() { int a[]={2,4,6,8,10},y=1,x,*p;   p=&a[1];   for(x=0;x<3;x++)  y+=*(p+x);  printf(“%d
”,y);} A、17     B、18    C、19    D、20 "," 运行下面的程序，其输出是（   ） main() { int a[]={2,4,6,8,10},y=1,x,*p;   p=&a[1];   for(x=0;x<3;x++)  y+=*(p+x);  printf(“%d
”,y);} ","
 请将下列程序的输出结果填写到空格中：

运行下面的程序，其输出是（  ）。

主要功能是求出1~10这10个数的和。

main() { int a[]={2,4,6,8,10},y=1,x,*p;   p=&a[1];   for(x=0;x<3;x++)  y+=*(p+x);  printf(""%d"",y);}","
  运行下面的程序，其输出是（   ） main() { int a[]={2,4,6,8,10},y=1,x,*p;   p=&a[1];   for(x=0;x<3;x++)  y+=*(p+x);  printf(“%d
”,y);} ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
运行下面的程序后，其正确的输出是（   ） main() {static int a[5]={7,2,8,4,5};  static int *pa[5]={&a[0], &a[1], &a[2], &a[3], &a[4]};   int **p,i;   p=pa; for(i=0;i<5;i++) {printf(“%d	”,**p+2);   p++;} printf(“
”); } A、9  4  10  6  7           B、7  2  8  4  5 C、7  4  10  4  5            D、2  3  4  5  6 ","运行下面的程序后，其正确的输出是（   ） main() {static int a[5]={7,2,8,4,5};  static int *pa[5]={&a[0], &a[1], &a[2], &a[3], &a[4]};   int **p,i;   p=pa; for(i=0;i<5;i++) {printf(“%d	”,**p+2);   p++;} printf(“
”); } ","8  4  5           B、9  4  10  6  7           C、7  2  8  4  5           C、9  4  10  6  7 
 首先，我们需要理解程序的运行过程。程序定义了一个静态数组a，其元素为{7,2,8,4,5}，以及一个静态指针数组pa，其元素为{&a[0], &a[1], &a[2], &a[3], &a[4]}。数组a和数组pa都是静态存储区，其生命周期与程序的生命周期相同。

程序的执行过程如下：
1. 定义指针p指向数组pa的第一个元素，即a[0]。
2. 使用for循环遍历数组pa中的元素，每次循环将指针p向后移动一位。
3. 在循环中，使用printf函数输出指针p所指向的元素的值，即*p+2。

根据这个执行过程，我们可以逐个分析选项的正确性：

A、9  4  10  6  7：这个选项的输出顺序不符合循环的逻辑，因为循环是从0开始，而不是从2开始。

B、7  2  8  4  5：这个选项的输出顺序符合循环的逻辑，但是缺少了最后一个元素6。

C、7  2  8  4  5：这个选项的输出顺序缺少了第一个元素7，并且缺少了最后一个元素6。

D、9  4  10  6  7：这个选项的输出顺序符合循环的逻辑，且包含了所有元素，所以是正确的。

因此，正确答案是D。","10  6  3 
 运行下面的程序后，其正确的输出是（   ） main() {static int a[5]={7,2,8,4,5};  static int *pa[5]={&a[0], &a[1], &a[2], &a[3], &a[4]};   int **p,i;   p=pa; for(i=0;i<5;i++) {printf(“%d	”,**p+2);   p++;} printf(“",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下面程序运行后，其输出是（   ） main() {int i,j,k;  int func();   i=1,j=2,k=3;   printf(“%d
”,func((j+=k,j++),(i,i++,++i))); } int func(int x,int y) {int z;  z=x%y;  return(z); } A、2      B、0     C、1       D、3 ","下面程序运行后，其输出是（   ） main() {int i,j,k;  int func();   i=1,j=2,k=3;   printf(“%d
”,func((j+=k,j++),(i,i++,++i))); } int func(int x,int y) {int z;  z=x%y;  return(z); } ","
 下面程序运行后，其输出是（D）3。","
 下面程序运行后，其输出是（   ） main() {int i,j,k;  int func();   i=1,j=2,k=3;   printf(“%d
”,func((j+=k,j++),(i,i++,++i))); } int func(int x,int y) {int z;  z=x%y;  return(z); } ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下面程序运行后，其输出是（   ） main() { void sub();   char s[10]=”a program”;  int num=4;   sub(s,0,num-1);   sub(s,num,6);   sub(s,0,6);   printf(“%s
”,s); } void  sub(char *s,int num1,int num2) { char t,*p;   p=s+num2;s=s+num1;   while(s<p)    {t=*s;  *s=*p;  *p=t;   s++;  p--;} } A.program     B.gram pro     C.pro gram      D.ogra pram"," 下面程序运行后，其输出是（   ） main() { void sub();   char s[10]=”a program”;  int num=4;   sub(s,0,num-1);   sub(s,num,6);   sub(s,0,6);   printf(“%s
”,s); } void  sub(char *s,int num1,int num2) { char t,*p;   p=s+num2;s=s+num1;   while(s<p)    {t=*s;  *s=*p;  *p=t;   s++;  p--;} } ","{ t=*p;     *p++=t;    }   *p='\0'; }

下面程序运行后，其输出是（  ） 

A. a program C 

B. a programC 

C. a programc

D. a programD 

答案：A. a program C","{  t=*p;   *p++=t;   s+=num1;  } 
 下面程序运行后，其输出是（   ） main() { void sub();   char s[10]=”a program”",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
假定有变量定义语句： int a=8,b=7,c=6,x=5,y=4;那么以下语句执行后各变量的值为______。 (x>y++)-!a--||(a<c++)&&(a>b++); A. a=7,b=7,c=6 ,x=5,y=5 B. a=7,b=7,c=7 ,x=5,y=5 C. a=7,b=8,c=6 ,x=5,y=5 D. a=8,b=7,c=6 ,x=5,y=4"," 假定有变量定义语句： int a=8,b=7,c=6,x=5,y=4;那么以下语句执行后各变量的值为______。 (x>y++)-!a--||(a<c++)&&(a>b++); ","
 假定有变量定义语句： int a=8,b=7,c=6,x=5,y=4;那么以下语句执行后各变量的值为______。 (x>y++)-!a--||(a<c++);

A. a=7,b=7,c=6,x=5,y=5 
B. a=7,b=7,c=7,x=5,y=5 
C. a=7,b=8,c=6,x=5,y=5 
D. a=8,b=7,c=6,x=5,y=4","
  假定有变量定义语句： int a=8,b=7,c=6,x=5,y=4;那么以下语句执行后各变量的值为______。 (x>y++)-!a--||(a<c++)&&(a>b++); ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设i，x均为int型，则以下for循环______。 for(i=0,x=0;i<=10&&x!=876;i++)scanf(“%d”,&x); A. 最多执行10次 B. 最多执行11次 C. 是无限循环 D. 循环一次也不执行",设i，x均为int型，则以下for循环______。 ,"
 设i，x均为int型，则以下for循环______。 for(i=0,x=0;i<=10&&x!=876;i++)scanf(“%d”,&x); 

A. 最多执行10次 
B. 最多执行11次 
C. 是无限循环 
D. 循环一次也不执行","
 设i，x均为int型，则以下for循环______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
C语言可执行程序的开始执行点是______。 A. 程序中第一条可执行语句 B. 程序中第一个函数 C. 程序中的main()函数 D. 包含文件中的第一个函数", C语言可执行程序的开始执行点是______。 ,"
 将下列题目转化为填空题:

C语言可执行程序的开始执行点是______。 

A. 程序中第一条可执行语句 
B. 程序中第一个函数 
C. 程序中的main()函数 
D. 包含文件中的第一个函数","
  C语言可执行程序的开始执行点是______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
在C程序中语句：int Max(int a,int b); 的作用是______。 A. 定义了一个函数Max() B. 声明了一个函数Max() C. 对函数Max()的一次调用 D. 以上3种情况都不是","在C程序中语句：int Max(int a,int b); 的作用是______。 ","
 在C程序中语句：int Max(int a,int b); 的作用是______。

A. 定义了一个函数Max()
B. 声明了一个函数Max()
C. 对函数Max()的一次调用
D. 以上3种情况都不是","
 在C程序中语句：int Max(int a,int b); 的作用是______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
以下程序的输出结果为______。 #include “stdio.h” void main(){int k=017,g=0x11; printf(“%d;”,++k); printf(“%d
”,g++);} A. 15;11 B. 16;12 C. 16;17 D. 17;18","以下程序的输出结果为______。 #include “stdio.h” void main(){int k=017,g=0x11; printf(“%d;”,++k); printf(“%d
”,g++);} ","
 以下程序的输出结果为______。

#include “stdio.h”
void main(){int k=0x17,g=0x11; printf(“%d;”,++k); printf(“%d
”,g++);}

A. 15;11
B. 16;12
C. 16;17
D. 17;18","
 以下程序的输出结果为______。 #include “stdio.h” void main(){int k=017,g=0x11; printf(“%d;”,++k); printf(“%d
”,g++);} ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
假设所有变量均为整型,则表达式( a=2,b=5, b++, a+b)的值是______。 A. 7 B. 8 C. 6 D. 2","假设所有变量均为整型,则表达式( a=2,b=5, b++, a+b)的值是______。 ","
 假设所有变量均为整型,则表达式( a=2,b=5, b++, a+b)的值是______。 A. 7 B. 8 C. 6 D. 2","
 假设所有变量均为整型,则表达式( a=2,b=5, b++, a+b)的值是______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
已知定义int a[6][7],数组元素a[3][4]前的数组元素个数是______。 A. 24 B. 25 C. 18 D. 17"," 已知定义int a[6][7],数组元素a[3][4]前的数组元素个数是______。","
 已知定义int a[6][7],数组元素a[3][4]前的数组元素个数是______。 A. 24 B. 25 C. 18 D. 17","
  已知定义int a[6][7],数组元素a[3][4]前的数组元素个数是______。",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
为了判断两个字符串s1和 s2是否相等，应当使用______。 A. if (strcmp (s1,s2)= =0 ) B. if (s1=s2) C. if (strcmp(s1,s2) D. if (s1= =s2)", 为了判断两个字符串s1和 s2是否相等，应当使用______。,"
 为了判断两个字符串s1和s2是否相等，应当使用______。

A. if (strcmp (s1,s2)= =0 )
B. if (s1=s2)
C. if (strcmp(s1,s2)
D. if (s1= =s2)","
  为了判断两个字符串s1和 s2是否相等，应当使用______。",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
执行语句char a[10]= 'yang'; char *p = a;后，*(p +4)的值是______。A. 'yang' B. 'g'C. '0’ D. 不能确定", 执行语句char a[10]= 'yang'; char *p = a;后，*(p +4)的值是______。,"
 请将下列题目转化为填空题:

执行语句char a[10]= 'yang'; char *p = a;后，*(p +4)的值是______。A. 'yang' B. 'g' C. '0’ D. 不能确定","
  执行语句char a[10]= 'yang'; char *p = a;后，*(p +4)的值是______。",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
执行下面程序段后,m 的值是______。 int a[2][3]={{1,2,3，4,5,6}}; int m，*p; p=a; m=(**p)*(*(*p+1))*(*(*(p+1)+2)); A. 15 B. 48 C. 12 D. 24"," 执行下面程序段后,m 的值是______。 int a[2][3]={{1,2,3，4,5,6}}; int m，*p; p=a; m=(**p)*(*(*p+1))*(*(*(p+1)+2)); ","
 执行下面程序段后，m 的值是______。 int a[2][3]={{1,2,3，4,5,6}}; int m，*p; p=a; m=(**p)*(*(*p+1))*(*(*(p+1)+2)); A. 15 B. 48 C. 12 D. 24","
  执行下面程序段后,m 的值是______。 int a[2][3]={{1,2,3，4,5,6}}; int m，*p; p=a; m=(**p)*(*(*p+1))*(*(*(p+1)+2)); ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设在 C 语言中，一个 int 型数据在内存中占用 2 个字节，则 unsigned int 型数据的取值范围为______。 A. 0~255 B. 0~32767 C. 0~65535 D. 0~2147483647",设在 C 语言中，一个 int 型数据在内存中占用 2 个字节，则 unsigned int 型数据的取值范围为______。 ,"
 设在 C 语言中，一个 int 型数据在内存中占用 2 个字节，则 unsigned int 型数据的取值范围为______。

A. 0~255
B. 0~32767
C. 0~65535
D. 0~2147483647","
 设在 C 语言中，一个 int 型数据在内存中占用 2 个字节，则 unsigned int 型数据的取值范围为______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
已知字符′ b ′ 的 ASCII 码为 98，语句 printf(″ %d, %c″, ′ b ′, ′ b ′ + 1)；的输出结果为______。 A. 98,b B. 语句不合法 C. 98,99 D. 98,c","已知字符′ b ′ 的 ASCII 码为 98，语句 printf(″ %d, %c″, ′ b ′, ′ b ′ + 1)；的输出结果为______。 ","
 请将下列题目转化为填空题:

已知字符′b′的ASCII码为98，语句printf(""%d, %c"", ′b′, ′b′+1);的输出结果为______。

A. 98,b
B. 语句不合法
C. 98,99
D. 98,c","
 已知字符′ b ′ 的 ASCII 码为 98，语句 printf(″ %d, %c″, ′ b ′, ′ b ′ + 1)；的输出结果为______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
执行语句 for(i=1;i++<4;);后，变量 i 的值是______。 A. 3 B. 4 C. 5 D. 不定", 执行语句 for(i=1;i++<4;);后，变量 i 的值是______。,"
 执行语句 for(i=1;i++<4;);后，变量 i 的值是______。 A. 3 B. 4 C. 5 D. 不定。

答案：B. 4","
  执行语句 for(i=1;i++<4;);后，变量 i 的值是______。",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
在 C 语言程序中，数组名做函数调用的实参时，传递给形参的是______ 。 A. 数组第一个元素的值 B. 数组的首地址 C. 数组全部元素的值 D. 数组元素的个数", 在 C 语言程序中，数组名做函数调用的实参时，传递给形参的是______ 。,"
 在 C 语言程序中，数组名做函数调用的实参时，传递给形参的是______ 。

A. 数组第一个元素的值
B. 数组的首地址
C. 数组全部元素的值
D. 数组元素的个数","
  在 C 语言程序中，数组名做函数调用的实参时，传递给形参的是______ 。",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设有数组定义: char array [ ]='China'; 则数组 array 所占的存储空间为______。 A. 4 个字节 B. 5 个字节 C. 6 个字节 D. 7 个字节 ",设有数组定义: char array [ ]='China'; 则数组 array 所占的存储空间为______。 ,"
 请将下列题目转化为填空题:

设有数组定义: char array [ ]='China'; 则数组 array 所占的存储空间为______。

A. 4 个字节
B. 5 个字节
C. 6 个字节
D. 7 个字节","
 设有数组定义: char array [ ]='China'; 则数组 array 所占的存储空间为______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
已知函数fread的调用形式为fread（buffer，size，count，fp），其中buffer代表的是______。 A. 存放读入数据项的存储区 B. 存放读入数据的地址或指向此地址的指针 C. 一个指向所读文件的文件指针 D. 一个整形变量,代表要读入的数据项总数",已知函数fread的调用形式为fread（buffer，size，count，fp），其中buffer代表的是______。 ,"
 1. 分析题目，发现需要将已知函数fread的调用形式转化为填空题。
2. 仔细阅读题目，确定需要填空的语句为：其中buffer代表的是______。
3. 分析选项A、B、C、D，找出正确答案。
    A. 存放读入数据项的存储区
    B. 存放读入数据的地址或指向此地址的指针
    C. 一个指向所读文件的文件指针
    D. 一个整形变量,代表要读入的数据项总数
4. 根据对fread函数的了解，确定正确答案为B。因为fread函数的调用形式中，buffer是文件指针，它指向要读入数据的地址。

最终答案：B","
 已知函数fread的调用形式为fread（buffer，size，count，fp），其中buffer代表的是______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
以下程序的输出结果为______。 main( ) { int i=010,j=10; printf('%d,%d
',i ,j--); } A. 11,9 B. 9,10 C. 8,10 D. 9,9　","以下程序的输出结果为______。 main( ) { int i=010,j=10; printf('%d,%d
',i ,j--); } ","
 以下程序的输出结果为______。

main( ) { int i=010,j=10; printf('%d,%d',i,j--); }

A. 11,9 B. 9,10 C. 8,10 D. 9,9","
 以下程序的输出结果为______。 main( ) { int i=010,j=10; printf('%d,%d
',i,j--); } ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设i和k都是int类型，则for循环语句______。 for(i=0,k=-1;k=1;i ,k ) printf('****
'); A. 循环结束的条件不合法 B. 循环体一次也不执行 C. 循环体只执行一次 D. 是无限循环　"," 设i和k都是int类型，则for循环语句______。 for(i=0,k=-1;k=1;i ,k ) printf('****
'); ","
 设i和k都是int类型，则for循环语句______。 for(i=0,k=-1;k=1;i,k ) printf('****'); 

选项分析：
A. 循环结束的条件不合法：循环结束的条件应该是k不等于1，而不是k等于1，所以选项A不正确。
B. 循环体一次也不执行：实际上，循环体会执行一次，只是执行的次数比较少，所以选项B不正确。
C. 循环体只执行一次：循环体确实只执行一次，只是执行的次数比较少，所以选项C是正确的。
D. 是无限循环：循环体只执行一次，不是无限循环，所以选项D不正确。

综上所述，正确答案是C。","
  设i和k都是int类型，则for循环语句______。 for(i=0,k=-1;k=1;i,k ) printf('****
'); ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
在下列程序段中，枚举变量 c1的值是______。 enum color { red,yellow,blue=4,green,white}c1; c1=yellow; c1=white; A. 1 B. 3 C. 5 D. 6","在下列程序段中，枚举变量 c1的值是______。 enum color { red,yellow,blue=4,green,white}c1; c1=yellow; c1=white; ","
 在下列程序段中，枚举变量 c1 的值是______。 enum color { red, yellow, blue=4, green, white} c1; c1=yellow; c1=white; 

A. 1
B. 3
C. 5
D. 6","
 在下列程序段中，枚举变量 c1的值是______。 enum color { red,yellow,blue=4,green,white}c1; c1=yellow; c1=white; ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设有说明 int (*ptr)();其中标识符ptr是______。 A. 是一个指向整形变量的指针 B. 是一个指针,它指向一个函数值是int的函数 C. 是一个函数名 D. 定义不合法 ", 设有说明 int (*ptr)();其中标识符ptr是______。 ,"
 请将下列题目转化为填空题:

设有说明 `int (*ptr)();` 其中标识符 `ptr` 是______。

A. 是一个指向整形变量的指针
B. 是一个指针,它指向一个函数值是 `int` 的函数
C. 是一个函数名
D. 定义不合法","
  设有说明 int (*ptr)();其中标识符ptr是______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
定义由n个指向整形数据的指针组成的数组p,其正确的方式为______。 A. int p; B. int (*p)[n]; C. int *p[n]; D. int (*p)( ); ","定义由n个指向整形数据的指针组成的数组p,其正确的方式为______。 ","
 将题目转化为填空题后如下：

请将下列选项中的空格填入正确的方式，由n个指向整型数据的指针组成的数组p的正确方式为______。
A. int p;
B. int (*p)[n];
C. int *p[n];
D. int (*p)( );","
 定义由n个指向整形数据的指针组成的数组p,其正确的方式为______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
与10进制数2236.75相等的8进制数是______。 A. 8646.6 B. 1646.6 C. 1646.3 D. 8646.3",与10进制数2236.75相等的8进制数是______。 ,"
 请将下列题目转化为填空题:

与10进制数2236.75相等的8进制数是______。 A. 8646.6 B. 1646.6 C. 1646.3 D. 8646.3

填空题如下:

将8进制数转化为10进制数,与10进制数2236.75相等的是______。 

A. 8646.6 B. 1646.6 C. 1646.3 D. 8646.3","
 与10进制数2236.75相等的8进制数是______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
已知：x=10,y=5,z=15;执行下面程序段后的结果是______。 if (x>y) if(y>z) x=y; else z=y; A. 7 B. 6 C. 5 D. 4"," 已知：x=10,y=5,z=15;执行下面程序段后的结果是______。 if (x>y) if(y>z) x=y; else z=y; ","
 已知：x=10, y=5, z=15;执行下面程序段后的结果是______。

if (x>y)
    if(y>z)
        x=y;
    else
        z=y;

A. 7 B. 6 C. 5 D. 4","
  已知：x=10,y=5,z=15;执行下面程序段后的结果是______。 if (x>y) if(y>z) x=y; else z=y; ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
已知：int x；逗号表达式(x=2*3,x+8，x+12),x+x的值是______。 A. 6 B. 26 C. 52 D. 12","已知：int x；逗号表达式(x=2*3,x+8，x+12),x+x的值是______。 ","
 已知：int x；逗号表达式(x=2*3,x+8，x+12),x+x的值是______。 A. 6 B. 26 C. 52 D. 12","
 已知：int x；逗号表达式(x=2*3,x+8，x+12),x+x的值是______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
已知：int n；执行for(n=0；n++<4；)；后变量n 的值是______。 A. 3 B. 4 C. 5 D. 6", 已知：int n；执行for(n=0；n++<4；)；后变量n 的值是______。,"
 已知：int n；执行for(n=0；n++<4；)；后变量n 的值是______。 

答案：B. 4","
  已知：int n；执行for(n=0；n++<4；)；后变量n 的值是______。",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
已知：int a[5][6][7]；若从０计数，数组元素a[3][4][5]的序号是______。 A. 149 B. 159 C. 150 D. 160",已知：int a[5][6][7]；若从０计数，数组元素a[3][4][5]的序号是______。 ,"
 已知：int a[5][6][7]；若从0计数，数组元素a[3][4][5]的序号是______。

A. 149
B. 159
C. 150
D. 160","
 已知：int a[5][6][7]；若从０计数，数组元素a[3][4][5]的序号是______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
执行下面程序段后,m 的值是______。 static int a[ ]={7,4,6,3,10}； int m, k ,*p; m=10; p=&a[0]; for(k=0; k<5; k++) m=(*(p+k)<m)?*(p+k): m ; A. 10 B. 7 C. 3 D. 6"," 执行下面程序段后,m 的值是______。 static int a[ ]={7,4,6,3,10}； int m, k ,*p; m=10; p=&a[0]; for(k=0; k<5; k++) m=(*(p+k)<m)?*(p+k): m ; ","
 请将下列程序段空格填满，使程序正常运行。

static int a[ ]={7,4,6,3,10}； int m, k,*p; m=10; p=&a[0]; for(k=0; k<5; k++) m=(*(p+k)<m)?*(p+k): m ; A. 10 B. 7 C. 3 D. 6","
  执行下面程序段后,m 的值是______。 static int a[ ]={7,4,6,3,10}； int m, k,*p; m=10; p=&a[0]; for(k=0; k<5; k++) m=(*(p+k)<m)?*(p+k): m ; ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
执行下面程序段后,m 的值是______。 static int a[2][3]={{1,2,3},{4,5,6}}； int m, *p; p=&a[0][0]; m=(*p)*(*(p+2))*(*(p+4)); A. 15 B. 48 C. 24 D. 无定值","执行下面程序段后,m 的值是______。 static int a[2][3]={{1,2,3},{4,5,6}}； int m, *p; p=&a[0][0]; m=(*p)*(*(p+2))*(*(p+4)); ","
 执行下面程序段后，m 的值是______。

static int a[2][3]={{1,2,3},{4,5,6}}； int m, *p； p=&a[0][0]; m=(*p)*(*(p+2))*(*(p+4)); 

A. 15 B. 48 C. 24 D. 无定值","
 执行下面程序段后,m 的值是______。 static int a[2][3]={{1,2,3},{4,5,6}}； int m, *p; p=&a[0][0]; m=(*p)*(*(p+2))*(*(p+4)); ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下列程序段的输出结果是______。 int i=32769； printf(“%d”,i)； A. -1 B. -32767 C. -32768 D. 32768"," 下列程序段的输出结果是______。 int i=32769； printf(“%d”,i)； ","
 下列程序段的输出结果是______。 int i=32769； printf(""%d"",i)； A. -1 B. -32767 C. -32768 D. 32768","
  下列程序段的输出结果是______。 int i=32769； printf(“%d”,i)； ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若x=10,y=5,z=15;执行下面一段程序后z的结果是______。 if （x>y ） if (y>z) {z=x; y++；} else z=y; A. 10 B. 15 C. 5 D. 6"," 若x=10,y=5,z=15;执行下面一段程序后z的结果是______。 if （x>y ） if (y>z) {z=x; y++；} else z=y; ","
 请将下列题目转化为填空题:

若x=10,y=5,z=15;执行下面一段程序后z的结果是______。 if （x>y ） if (y>z) {z=x; y++；} else z=y; A. 10 B. 15 C. 5 D. 6","
  若x=10,y=5,z=15;执行下面一段程序后z的结果是______。 if （x>y ） if (y>z) {z=x; y++；} else z=y; ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若定义 int a[6][7]；数组元素a[3][4]前的数组元素个数是______。 A. 24 B. 25 C. 18 D. 17",若定义 int a[6][7]；数组元素a[3][4]前的数组元素个数是______。 ,"
 请将下列题目转化为填空题:

若定义 int a[6][7]；数组元素a[3][4]前的数组元素个数是______。 A. 24 B. 25 C. 18 D. 17","
 若定义 int a[6][7]；数组元素a[3][4]前的数组元素个数是______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若a为整型变量，则表达式a=4*5,a*2,a+6的值是______。 A. 20 B. 40 C. 46 D. 26","若a为整型变量，则表达式a=4*5,a*2,a+6的值是______。 ","
 请将下列题目转化为填空题:

若a为整型变量,则表达式a=4*5,a*2,a+6的值是______。 A. 20 B. 40 C. 46 D. 26","
 若a为整型变量，则表达式a=4*5,a*2,a+6的值是______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若定义 int a[3][4][2]；则第21个元素是______。 A. a[1][0][1] B. a[2][1][2] C. a[2][0][1] D. a[2][2][1]",若定义 int a[3][4][2]；则第21个元素是______。 ,"
 请将下列题目转化为填空题:

若定义 int a[3][4][2]；则第21个元素是______。 A. a[1][0][1] B. a[2][1][2] C. a[2][0][1] D. a[2][2][1]

填空题如下：

若定义 int a[3][4][2]；则第21个元素是______。

A. a[1][0][1] B. a[2][1][2] C. a[2][0][1] D. a[2][2][1]","
 若定义 int a[3][4][2]；则第21个元素是______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
阅读程序，选择程序运行后的结果是______。 #include <stdio.h> main() {int y=10; do {y--;} while (--y); printf(“%d”,y--); } A.-1 B. 1 C. 8 D. 0'","阅读程序，选择程序运行后的结果是______。 #include <stdio.h> main() {int y=10; do {y--;} while (--y); printf(“%d”,y--); } ","
 阅读程序，选择程序运行后的结果是______。

#include <stdio.h>
main() {
int y=10;
do {
y--;
} while (--y);
printf(""%d"",y--);
}

A.-1
B. 1
C. 8
D. 0","
 阅读程序，选择程序运行后的结果是______。 #include <stdio.h> main() {int y=10; do {y--;} while (--y); printf(“%d”,y--); } ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
说明语句“int *(*p) ();”的含义是______。 A. p是一个指向int型数组的指针； B. p是指针变量，它构成了指针数组； C. p是一个指向函数的指针，该函数的返回值是一个整型； D. p是一个指向函数的指针，该函数的返回值是一个指向整型的指针；",说明语句“int *(*p) ();”的含义是______。 ,"
 请将下列题目转化为填空题:

说明语句“int **p;”的含义是______。

A. p是一个指向int型数组的指针； 
B. p是指针变量，它构成了指针数组； 
C. p是一个指向函数的指针，该函数的返回值是一个整型； 
D. p是一个指向函数的指针，该函数的返回值是一个指向整型的指针；","
 说明语句“int *(*p) ();”的含义是______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若int i，x; 则for (i=x=0; i<9 && x!=5; i++,x++)； 控制的循环体将执行______次。 A. 10 B. 9 C. 5 D. 6","若int i，x; 则for (i=x=0; i<9 && x!=5; i++,x++)； 控制的循环体将执行______次。 ","
 请将下列题目转化为填空题:

若int i; x; 则for (i=x=0; i<9 && x!=5; i++,x++)； 控制的循环体将执行______次。 A. 10 B. 9 C. 5 D. 6","
 若int i，x; 则for (i=x=0; i<9 && x!=5; i++,x++)； 控制的循环体将执行______次。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
在定义 int a[3][4][2]；后，第10个元素是______。 A. a[1][0][1] B. a[2][1][2] C. a[2][0][1] D. a[2][2][1]", 在定义 int a[3][4][2]；后，第10个元素是______。,"
 1. 题目中的 int a[3][4][2] 定义了一个3行4列2元素的数组。
2. 第10个元素的位置是 a[2][2][1]。
3. 分析选项：
   A. a[1][0][1] 错误，因为1<3。
   B. a[2][1][2] 错误，因为2<3。
   C. a[2][0][1] 错误，因为0<2。
   D. a[2][2][1] 正确。

最终答案：D","
  在定义 int a[3][4][2]；后，第10个元素是______。",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
阅读程序，选择程序运行后的结果是______。 int try(int n) { if (n>0) return(n*try(n-2)); else return 1; } main() { int x; x=try(5); printf('%d
',x); } A. 15 B. 20 C. 1 D. 前面三个答案均是错误的",阅读程序，选择程序运行后的结果是______。 ,"
 请将下列程序填空，选择程序运行后的结果是______。

int try(int n) { if (n>0) return(n*try(n-2)); else return 1; }
main() { int x; x=try(5); printf('%d',x); }","
 阅读程序，选择程序运行后的结果是______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
与10进制数2236.75相等的8进制数是______。 A. 4724.6 B. 4274.3 C. 4724.3 D. 4274.6", 与10进制数2236.75相等的8进制数是______。,"
 将题目转化为填空题后，题目变为：

与10进制数2236.75相等的8进制数是______。

A. 4724.6
B. 4274.3
C. 4724.3
D. 4274.6

我们需要找到一个8进制数，使其等于10进制数2236.75。","
 与10进制数2236.75相等的8进制数是______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若执行下面的程序时从键盘输入10，则输出是______。 main( ) { int a； 　scanf('%d'，&a)； 　if(a++>10)　 printf('%d
'，++a)； 　else printf('%d
'，a--)； } A．12 B. 11 C. 10 D. 9",若执行下面的程序时从键盘输入10，则输出是______。 ,"
 请将下列程序的输出结果用填空完成：

若执行下面的程序时从键盘输入10，则输出是______。

main( ) { int a； 　scanf('%d'，&a)； 　if(a++>10)　 printf('%d'，++a)； 　else printf('%d'，a--)； }","
 若执行下面的程序时从键盘输入10，则输出是______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设int n=6；表达式n%=n+=n-=n*n的值为______。 A. 10 B. 0 C. 12 D. 6", 设int n=6；表达式n%=n+=n-=n*n的值为_____,"
 设int n=6；表达式n%=n+=n-=n*n的值为______。 

分析:
- n%=n+=n-=n*n 等价于 n = (n%=n+=n-=n*n);
- n%=n+=n-=n*n 执行过程如下:
  n = n % n (6 % 6 = 0);
  n = n + n (0 + 6 = 6);
  n = n - n * n (6 - 6 * 6 = -30);
  n = n % n (6 % 6 = 0);
  n = n + n (0 + 6 = 6);
  n = n - n * n (6 - 6 * 6 = -30);
  n = n % n (6 % 6 = 0);
  n = n + n (0 + 6 = 6);
  n = n - n * n (6 - 6 * 6 = -30);
  n = n % n (6 % 6 = 0);
  n = n + n (0 + 6 = 6);
  n = n - n * n (6 - 6 * 6 = -30);
  n = n % n (6 % 6 = 0);
  n = n + n (0 + 6 = 6);
  n = n - n * n (6 - 6 * 6 = -30);
  n = n % n (6 % 6 = 0);
  n = n + n (0 + 6 = 6);
  n = n - n * n (6 - 6 * 6 = -30);
  n = n % n (6 % 6 = 0);
  n = n + n (0 + 6 = 6);
  n = n - n * n (6 - 6 * 6 = -30);
  n = n % n (6 % 6 = 0);
  n = n + n (0 + 6 = 6);
  n = n - n * n (6 - 6 * 6 =","
  设int n=6；表达式n%=n+=n-=n*n的值为______。",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
下面程序段的运行结果是______。 char str[10]='output'； printf('""%s""
'， str)； A. output B. 'output' C. ""output"" D. 编译出错","下面程序段的运行结果是______。 char str[10]='output'； printf('""%s""
'， str)； ","
 下面程序段的运行结果是______。

char str[10]='output'； printf('""%s""'， str)；

A. output
B. 'output'
C. ""output""
D. 编译出错","
  下面程序段的运行结果是______。 char str[10]='output'； printf('""%s""
'， str)； ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设有定义语句 int (*ptr)[10]； 则其中的 ptr 是______。 A. 10个指向整型变量的指针 　　　　　　　B. 1个指向整型函数的指针 C. 1个指向具有10个整型元素的一维数组的指针 D. 指针数组", 设有定义语句 int (*ptr)[10]； 则其中的 ptr 是______。,"
 1. 分析题目，找出关键信息：定义语句 int (*ptr)[10]；
2. 分析选项：
   A. 10个指向整型变量的指针：选项描述不准确，ptr 可能是指针数组；
   B. 1个指向整型函数的指针：选项描述不准确，ptr 可能是指针数组；
   C. 1个指向具有10个整型元素的一维数组的指针：选项描述不准确，ptr 可能是指针数组；
   D. 指针数组：选项描述准确，ptr 是一个指针数组。

综上，答案为 D。","
  设有定义语句 int (*ptr)[10]； 则其中的 ptr 是______。",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
执行语句 char a[10]= ' abcd'；char *p = a； 后， *(p + 4)的值是______。 A. 'abcd' B. 'd' C. '0' D. 不能确定", 执行语句 char a[10]= ' abcd'；char *p = a； 后， *(p + 4)的值是______。 ,"
 请将下列题目转化为填空题:

执行语句 char a[10]='abcd'；char *p = a； 后， *(p + 4)的值是______。 A. 'abcd' B. 'd' C. '0' D. 不能确定","
  执行语句 char a[10]='abcd'；char *p = a； 后， *(p + 4)的值是______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
已知：int a[6][7][8]；若从０计数，数组元素a[5][5][5]的序号是______。 A. 315 B. 325 C. 156 D. 265", 已知：int a[6][7][8]；若从０计数，数组元素a[5][5][5]的序号是______。,"
 已知：int a[6][7][8]；若从0计数，数组元素a[5][5][5]的序号是______。

A. 315
B. 325
C. 156
D. 265","
  已知：int a[6][7][8]；若从０计数，数组元素a[5][5][5]的序号是______。",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
己知字母 A 的 ASCII 码为十进制的 65，char chl，ch2：ch1='A'+'5'-'3'：ch2='A'+'6'-'3°；，则 printf(%d,%c
',ch1,ch 2);的输出是 ______。 A. 67,D B. B,C C. C,D D. 不确定的值"," 己知字母 A 的 ASCII 码为十进制的 65，char chl，ch2：ch1='A'+'5'-'3'：ch2='A'+'6'-'3°；，则 printf(%d,%c
',ch1,ch 2);的输出是 ______。 ","
 已知字母 A 的 ASCII 码为十进制的 65，char chl，ch2：ch1='A'+'5'-'3'：ch2='A'+'6'-'3°；，则 printf(%d,%c
',ch1,ch 2);的输出是 ______。 A. 67,D B. B,C C. C,D D. 不确定的值","
  己知字母 A 的 ASCII 码为十进制的 65，char chl，ch2：ch1='A'+'5'-'3'：ch2='A'+'6'-'3°；，则 printf(%d,%c
',ch1,ch 2);的输出是 ______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
c2为字符型，执行语句'c2＝'A'＋'6'-'3'；'后，c2的值为______。 A. D B. 63 C. 不确定的值 D. C", c2为字符型，执行语句'c2＝'A'＋'6'-'3'；'后，c2的值为______。,"
 请将下列题目转化为填空题:

c2为字符型,执行语句'c2＝'A'＋'6'-'3';'后,c2的值为______。 A. D B. 63 C. 不确定的值 D. C","
  c2为字符型，执行语句'c2＝'A'＋'6'-'3'；'后，c2的值为______。",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若 a 为 int 类型，且其值为 5，则执行完表达式 at=a-=a*a 后，a 的值是 ______。 A. -5 B. 20 C. -40 D. 25",若 a 为 int 类型，且其值为 5，则执行完表达式 at=a-=a*a 后，a 的值是 ______。 ,"
 请将下列题目转化为填空题:

若 a 为 int 类型，且其值为 5，则执行完表达式 at=a-=a*a 后，a 的值是 ______。 A. -5 B. 20 C. -40 D. 25","
 若 a 为 int 类型，且其值为 5，则执行完表达式 at=a-=a*a 后，a 的值是 ______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
表达式 18/4*sqrt (4.0)/8 值的数据类型为______。 A. int B. float C. 不确定 D. double", 表达式 18/4*sqrt (4.0)/8 值的数据类型为______。 ,"
 1. 分析表达式：18/4*sqrt(4.0)/8
2. 计算表达式的值：18/4=4.5，4.5*sqrt(4.0)/8=1.5
3. 确定数据类型：1.5 是浮点数，所以数据类型是 float

最终答案：B. float","
  表达式 18/4*sqrt (4.0)/8 值的数据类型为______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若有 main (char c='z'; printf ('%c', c-25);}，此程序的输出结果是______。 A. a B. 7 C. z-25 D. y"," 若有 main (char c='z'; printf ('%c', c-25);}，此程序的输出结果是______。","
 请将下列程序空格处的字符填入空白处，使程序正常运行，并输出正确的结果。

若有 main (char c='z'; printf ('%c', c-25);}，此程序的输出结果是______。

A. a
B. 7
C. z-25
D. y","
  若有 main (char c='z'; printf ('%c', c-25);}，此程序的输出结果是______。",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设 x 是 int 型变量，f 是 float 型变量，用下面的语句给这两个变量输入值：scanf('i＝%d,f＝%f',&I,&f);，为了把 100 和 765.12 分别送给 i 和 f，正确的输入为______。 A. 100<空格> 765.12<回车> B. i=100,f=765.12<回车> C. 100<回车> 765.12<回车> D. x=100<回车>f=765.12<回车>"," 设 x 是 int 型变量，f 是 float 型变量，用下面的语句给这两个变量输入值：scanf('i＝%d,f＝%f',&I,&f);，为了把 100 和 765.12 分别送给 i 和 f，正确的输入为______。","
 设 x 是 int 型变量，f 是 float 型变量，用下面的语句给这两个变量输入值：scanf('i＝%d,f＝%f',&I,&f);，为了把 100 和 765.12 分别送给 i 和 f，正确的输入为______。

A. 100<空格> 765.12<回车>
B. i=100,f=765.12<回车>
C. 100<回车> 765.12<回车>
D. x=100<回车>f=765.12<回车>","
  设 x 是 int 型变量，f 是 float 型变量，用下面的语句给这两个变量输入值：scanf('i＝%d,f＝%f',&I,&f);，为了把 100 和 765.12 分别送给 i 和 f，正确的输入为______。",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若 k 是 int 型变量，程序片段 k=-3; if (k<=0) printf ('####'); else printf ('&&&&');的输出结果是______。 A. #### B. &&&& C. ####&&&& D. 语法有错误，无输出结果",若 k 是 int 型变量，程序片段 k=-3; if (k<=0) printf ('####'); else printf ('&&&&');的输出结果是______。 ,"
 请将下列题目转化为填空题:

若 k 是 int 型变量，程序片段 k=-3; if (k<=0) printf ('####'); else printf ('&&&&');的输出结果是______。 A. #### B. &&&& C. ####&&&& D. 语法有错误，无输出结果","
 若 k 是 int 型变量，程序片段 k=-3; if (k<=0) printf ('####'); else printf ('&&&&');的输出结果是______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
程序 main(){int x=1,y=0,a=0,b=0;switch(x){case 1:switch(y){case 0:a++;break;case 1:b++;break;}case 2: a++;b++;break;}printf('a=%d,b=%d
',a,b);}的输出结果是______。 A. a=2,b=1 B. a=1, b=1 C. a=1, b=0 D. a=2, b=2"," 程序 main(){int x=1,y=0,a=0,b=0;switch(x){case 1:switch(y){case 0:a++;break;case 1:b++;break;}case 2: a++;b++;break;}printf('a=%d,b=%d
',a,b);}的输出结果是______。 ","
 请将下列题目转化为填空题:

程序 main(){int x=1,y=0,a=0,b=0;switch(x){case 1:switch(y){case 0:a++;break;case 1:b++;break;}case 2: a++;b++;break;}printf('a=%d,b=%d',a,b);}的输出结果是______。 A. a=2,b=1 B. a=1, b=1 C. a=1, b=0 D. a=2, b=2","
  程序 main(){int x=1,y=0,a=0,b=0;switch(x){case 1:switch(y){case 0:a++;break;case 1:b++;break;}case 2: a++;b++;break;}printf('a=%d,b=%d
',a,b);}的输出结果是______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若有 int a[4] [5] ;， 则数组 a 包含的元素个数是______。 A. 4 B. 5 C. 9 D. 20",若有 int a[4] [5] ;， 则数组 a 包含的元素个数是______。 ,"
 请将下列题目转化为填空题:

若有 int a[4][5] ;， 则数组 a 包含的元素个数是______。 A. 4 B. 5 C. 9 D. 20","
 若有 int a[4] [5] ;， 则数组 a 包含的元素个数是______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若有 char c[6] ={'H','e','l','l','o'};，则 c[5] 的值是______。 A. '0' B. '0' C. 空格 D. 不可知的"," 若有 char c[6] ={'H','e','l','l','o'};，则 c[5] 的值是______。","
 若有 char c[6] ={'H','e','l','l','o'};，则 c[5] 的值是______。

A. '0'
B. '0'
C. 空格
D. 不可知的","
  若有 char c[6] ={'H','e','l','l','o'};，则 c[5] 的值是______。",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
设有定义: charc, string[]=”Welcome zhanghong”;，若要逐个输出元素的值，可以写一个循环程序段，则这个循环段的“循环条件”是______。 A. c=string[i]='0' B. (c=string[i])='0' C. c=string[i]!='0' D. (c=string[i])!='0'","设有定义: charc, string[]=”Welcome zhanghong”;，若要逐个输出元素的值，可以写一个循环程序段，则这个循环段的“循环条件”是______。 ","
 1. 题目要求将循环段的循环条件转化为填空题。
2. 分析选项，找出正确的循环条件。
   A. c=string[i]='0' 错误，应该是c=string[i]!='0'
   B. (c=string[i])='0' 错误，应该是c=string[i]!='0'
   C. c=string[i]!='0' 正确
   D. (c=string[i])!='0' 错误，应该是c=string[i]!='0'

最终答案：C","
 设有定义: charc, string[]=”Welcome zhanghong”;，若要逐个输出元素的值，可以写一个循环程序段，则这个循环段的“循环条件”是______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
在 Turbo C 下，若有数组定义：f1oat f[10]={1,2,3,4};，则数组f所占的存储空间为( )个字节______。 A. 4 B. 16 C. 10 D. 40","在 Turbo C 下，若有数组定义：f1oat f[10]={1,2,3,4};，则数组f所占的存储空间为( )个字节______。 ","
 请将下列题目转化为填空题:

在 Turbo C 下，若有数组定义：f1oat f[10]={1,2,3,4};，则数组f所占的存储空间为( )个字节______。 A. 4 B. 16 C. 10 D. 40","
 在 Turbo C 下，若有数组定义：f1oat f[10]={1,2,3,4};，则数组f所占的存储空间为( )个字节______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
能够在输出完字符串后自动输出一个回车换行的函数是______函数。 A. putc() B. puts() C. printf() D. putchar()",能够在输出完字符串后自动输出一个回车换行的函数是______函数。 ,"
 能够在输出完字符串后自动输出一个回车换行的函数是______函数。 A. putc() B. puts() C. printf() D. putchar()","
 能够在输出完字符串后自动输出一个回车换行的函数是______函数。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
在C程序中，main( )的位置______。 A. 可以任意 B. 必须作为第一个函数 C. 必须作为最后一个函数 D. 必须放在它所调用的函数之后", 在C程序中，main( )的位置______。,"
 在C程序中，main( )的位置______。
A. 可以任意 
B. 必须作为第一个函数 
C. 必须作为最后一个函数 
D. 必须放在它所调用的函数之后","
  在C程序中，main( )的位置______。",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
如果函数值的类型和 return 语句中表达式的值不一致,则______。 A. 语法出错 B. 连接出错 C. 以函数类型为准 D. 以表达式值的类型为准","如果函数值的类型和 return 语句中表达式的值不一致,则______。 ","
 请将下列题目转化为填空题:

如果函数值的类型和 return 语句中表达式的值不一致,则______。 A. 语法出错 B. 连接出错 C. 以函数类型为准 D. 以表达式值的类型为准","
 如果函数值的类型和 return 语句中表达式的值不一致,则______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若在程序中用到'strlen ( )'函数时， 应在程序开头写上______。 A. #include<math.h> B. #include<stdio.h> C. #include<stdlib.h> D. #include<string.h>", 若在程序中用到'strlen ( )'函数时， 应在程序开头写上______。,"
 1. 分析题目，确定需要填写的是一个字符串函数。
2. 回顾C语言中常用的字符串函数，发现strlen()函数位于string.h头文件中。
3. 因此，在程序开头应写上#include<string.h>。

最终答案：D. #include<string.h>","
  若在程序中用到'strlen ( )'函数时， 应在程序开头写上______。",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
声明一个函数为外部函数,应该在声明函数的函数类型的言面加______。 A. Auto B. static C. extern D. register","声明一个函数为外部函数,应该在声明函数的函数类型的言面加______。 ","
 1. 分析题目，题目要求将某个声明转化为填空题。
2. 分析选项，了解各个选项的含义：
   A. Auto：自动类型
   B. static：静态变量
   C. extern：外部函数
   D. register：寄存器
3. 根据题目要求，我们需要在声明函数的函数类型的言面加上正确的选项。由于题目中提到函数是外部函数，所以正确选项为C. extern。

最终答案：C. extern","
 声明一个函数为外部函数,应该在声明函数的函数类型的言面加______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若有int f(int a,int b);,则说明函数f( )______。 A. 是一个内都函数 B. 是一个外部函数 C. 只能在本文件中使用 D. 不能被同一源程序其他本文件中的函数调用"," 若有int f(int a,int b);,则说明函数f( )______。","
 若有int f(int a,int b);,则说明函数f( )______。

A. 是一个内都函数 
B. 是一个外部函数 
C. 只能在本文件中使用 
D. 不能被同一源程序其他本文件中的函数调用","
  若有int f(int a,int b);,则说明函数f( )______。",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
在C语句中,&后跟指针变量名,表示该指针变量的______。 A. 值 B. 别名 C. 地址 D. 类型"," 在C语句中,&后跟指针变量名,表示该指针变量的______。","
 在C语句中,&后跟指针变量名,表示该指针变量的______。

A. 值
B. 别名
C. 地址
D. 类型","
  在C语句中,&后跟指针变量名,表示该指针变量的______。",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若程序中包含有以下说明和定义: struct ex{int x,y;]…struct ex,x,y：…，则在计算机上调试时______。 A. 编译出错 B. 可以编译、连接、执行C C. 可以编译、连接，但不能执行C D. 可以编译，但连接出错","若程序中包含有以下说明和定义: struct ex{int x,y;]…struct ex,x,y：…，则在计算机上调试时______。 ","
 请将下列题目转化为填空题:

若程序中包含有以下说明和定义：struct ex{int x,y;}…struct ex,x,y：…，则在计算机上调试时______。

A. 编译出错
B. 可以编译、连接、执行C
C. 可以编译、连接，但不能执行C
D. 可以编译，但连接出错","
 若程序中包含有以下说明和定义: struct ex{int x,y;]…struct ex,x,y：…，则在计算机上调试时______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
在说明一个结构体变量时系统分配给它的存储空间是______。 A. 该结构体中的第一个成员所需存储空间 B. 该结构体中的最后一个成员所需存储空间 C. 该结构体中所有成员所需存储空间的总和 D. 该结构体占用最大存储空间的成员所需存储空间",在说明一个结构体变量时系统分配给它的存储空间是______。 ,"
 将下列题目转化为填空题:

在说明一个结构体变量时系统分配给它的存储空间是______。

A. 该结构体中的第一个成员所需存储空间
B. 该结构体中的最后一个成员所需存储空间
C. 该结构体中所有成员所需存储空间的总和
D. 该结构体占用最大存储空间的成员所需存储空间","
 在说明一个结构体变量时系统分配给它的存储空间是______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
C语言可以处理的文件类型是______。 A. 文本文件和数据文件 B. 文本文件和二进制文件 C. 数据文件和二进制文件 D. 都不对",C语言可以处理的文件类型是______。 ,"
 C语言可以处理的文件类型是______。 A. 文本文件和数据文件 B. 文本文件和二进制文件 C. 数据文件和二进制文件 D. 都不对","
 C语言可以处理的文件类型是______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
标准函数 fgets(s， n, f)的功能是______。 A. 从文件f中读取长度为n 的字符串存入指针s内存 B. 从文件f中读取长度不超过n-1的字符串存入指针s所指的内存 C. 从文件f中读取n个字符串存入指针 s 所指的内存 D. 从文件f中读取n-1字符串存入指针s所指的内存","标准函数 fgets(s， n, f)的功能是______。 ","
 请将下列题目转化为填空题:

标准函数 fgets(s, n, f)的功能是______。

A. 从文件f中读取长度为n的字符串存入指针s内存
B. 从文件f中读取长度不超过n-1的字符串存入指针s所指的内存
C. 从文件f中读取n个字符串存入指针s所指的内存
D. 从文件f中读取n-1字符串存入指针s所指的内存","
 标准函数 fgets(s， n, f)的功能是______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
函数调用语句fseek(fp,-10L,2)的含义是______。 A. 将文件位置指针移动距文件头10个字节处 B. 将文件位置指针从当前位置向文件尾方向移10个字节 C. 将文件位置指针从当前位置向文件头方向移10个字节 D. 将文件位置指针移至亚文件尾10个字节处","函数调用语句fseek(fp,-10L,2)的含义是______。 ","
 1. 分析选项A：将文件位置指针移动距文件头10个字节处。这个选项描述的是从文件头开始算起，将文件位置指针向后移动10个字节。
2. 分析选项B：将文件位置指针从当前位置向文件尾方向移10个字节。这个选项描述的是从文件尾开始算起，将文件位置指针向前移动10个字节。
3. 分析选项C：将文件位置指针从当前位置向文件头方向移10个字节。这个选项描述的是从文件头开始算起，将文件位置指针向后移动10个字节。
4. 分析选项D：将文件位置指针移至亚文件尾10个字节处。这个选项描述的是将文件位置指针移动到距离文件尾10个字节的位置。

综上所述，选项D是正确答案。","
 函数调用语句fseek(fp,-10L,2)的含义是______。 ",0
你是一个C语言出题专家,"请将下列题目转化为填空题:
若fp是指向某文件的指针，若没到该文件的末尾，则函数表达式!feof(fp)的值是______。 A. EOF B. 1 C. 非零值 D. 0",若fp是指向某文件的指针，若没到该文件的末尾，则函数表达式!feof(fp)的值是______。 ,"
 请将下列题目转化为填空题:

若fp是指向某文件的指针，若没到该文件的末尾，则函数表达式!feof(fp)的值是______。 A. EOF B. 1 C. 非零值 D. 0","
 若fp是指向某文件的指针，若没到该文件的末尾，则函数表达式!feof(fp)的值是______。 ",0

